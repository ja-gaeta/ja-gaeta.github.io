<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ponto G++.</title>
    <link>http://ja-gaeta.github.io//</link>
    <atom:link href="http://ja-gaeta.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <description>For future use?</description>
    <language>en</language>
    <pubDate>Sex, 20 mar 2015 23:13:19 -0300</pubDate>
    <lastBuildDate>Sex, 20 mar 2015 23:13:19 -0300</lastBuildDate>

      <item>
        <title>Introdução ao Git</title>
        <link>http://ja-gaeta.github.io/2015/introduzindo-o-git.html</link>
        <pubDate>Sex, 20 mar 2015 00:00:00 -0300</pubDate>
        <guid isPermaLink="false">2015/introduzindo-o-git.html</guid>
        <description>
	        &lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Antigamente, quando a gente escrevia usando lápis e papel, não era difícil vermo-nos obrigados a revirar o lixo, atrás de alguma coisa descartada por engano, muitas vezes sem sucesso&amp;#8230;&amp;#8203; e lá se iam horas ou até mesmo dias de trabalho, irremediavelmente perdidos.&lt;/p&gt;
&lt;/div&gt;
&lt;!--more--&gt;
&lt;div id=&quot;toc&quot; class=&quot;toc&quot;&gt;
&lt;div id=&quot;toctitle&quot; class=&quot;title&quot;&gt;Sumário&lt;/div&gt;
&lt;ul class=&quot;sectlevel1&quot;&gt;
&lt;li&gt;&lt;a href=&quot;#_sistemas_de_controle_de_versão&quot;&gt;Sistemas de Controle de Versão&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_o_diferencial_do_a_href_http_git_scm_com_git_a&quot;&gt;O Diferencial do &lt;a href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_terminologia_básica&quot;&gt;Terminologia Básica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_configuração_elementar&quot;&gt;Configuração Elementar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_criação_de_um_novo_repositório_git&quot;&gt;Criação de um novo repositório Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_criação_e_em_commit_em_de_um_novo_arquivo&quot;&gt;Criação e &lt;em&gt;commit&lt;/em&gt; de um novo arquivo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_acrescentando_outro_arquivo&quot;&gt;Acrescentando outro arquivo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_criando_uma_ramificação_de_recursos&quot;&gt;Criando uma ramificação (de recursos)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_mesclando_e_resolvendo_conflitos&quot;&gt;Mesclando e resolvendo conflitos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_saltando_para_um_determinado_commit&quot;&gt;Saltando para um determinado Commit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_rollback&quot;&gt;Rollback&lt;/a&gt;
&lt;ul class=&quot;sectlevel2&quot;&gt;
&lt;li&gt;&lt;a href=&quot;#_usando_revert_para_fazer_rollback_das_mudanças_do_jeito_fácil&quot;&gt;Usando &amp;#8220;revert&amp;#8221; para fazer rollback das mudanças do jeito fácil&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_desfazendo_mudanças_quando_não_foi_feito_commit&quot;&gt;Desfazendo mudanças quando não foi feito Commit&lt;/a&gt;
&lt;ul class=&quot;sectlevel2&quot;&gt;
&lt;li&gt;&lt;a href=&quot;#_arquivos_não_estagiados_para_um_commit&quot;&gt;Arquivos não estagiados para um Commit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_arquivos_estagiados_para_um_commit&quot;&gt;Arquivos estagiados para um Commit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_compartilhando_sincronizando_seu_repositório&quot;&gt;Compartilhando/Sincronizando seu Repositório&lt;/a&gt;
&lt;ul class=&quot;sectlevel2&quot;&gt;
&lt;li&gt;&lt;a href=&quot;#_clonagem&quot;&gt;Clonagem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_recursos_e_em_links_em_em_inglês&quot;&gt;Recursos e &lt;em&gt;Links&lt;/em&gt; (em inglês)&lt;/a&gt;
&lt;ul class=&quot;sectlevel2&quot;&gt;
&lt;li&gt;&lt;a href=&quot;#_vídeos&quot;&gt;Vídeos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_tutoriais_interativos&quot;&gt;Tutoriais Interativos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#_artigo_original&quot;&gt;Artigo original&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_sistemas_de_controle_de_versão&quot;&gt;Sistemas de Controle de Versão&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Com a advento da editoração eletrônica, esse tipo de problema cresceu sobremaneira. A facilidade de apagar um arquivo no computador, seja intencionalmente ou não, é enorme. Algumas vezes, como no caso dos papéis jogados no lixo, é possível recuperá-los, mas na maioria delas temos que recomeçar do zero.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Quando estamos criando alguma coisa, escrevendo um livro ou um programa de computador, por exemplo, vamos constantemente modificando o texto ou o código e, não raro, lamentamos ter sobrescrito algum trecho que gostaríamos de trazer de volta.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Quem já não passou por esse tipo de situação?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Pois é exatamente para tentar resolver, ou ao menos amenizar, esse problema, que surgiram os sistemas de controle de versão (VCS, do inglês &lt;em&gt;Version Control System&lt;/em&gt;), também conhecidos como gerenciamento de código fonte (SCM, do inglês &lt;em&gt;Source Code Management&lt;/em&gt;), ou simplesmente &lt;em&gt;versionamento&lt;/em&gt;, em português.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sidebarblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Sistema de Controle de Versão&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O contrôle de versão é um sistema que registra as mudanças num arquivo ou conjunto de arquivos ao longo do tempo de forma que se possa recuperar versões específicas futuramente.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Trataremos neste artigo do controle de versão para desenvolvimento de &lt;em&gt;software&lt;/em&gt;, embora ele possa ser usado para quase todo o tipo de arquivo que existe num computador.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Na verdade, os VCS foram desenvolvidos exatamente para controlar o desenvolvimento de &lt;em&gt;software&lt;/em&gt;, permitindo não apenas a reversão de um projeto para um estado anterior, mas também para comparar modificações ao longo do tempo, descobrir quem introduziu determinada mudança que esteja causando problemas, quem apresentou uma sugestão ou reportou um &lt;em&gt;bug&lt;/em&gt;, e muito mais.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_o_diferencial_do_a_href_http_git_scm_com_git_a&quot;&gt;O Diferencial do &lt;a href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A &lt;a href=&quot;http://pt.wikipedia.org/wiki/Sistema_de_controle_de_vers%C3%A3o&quot; target=&quot;_blank&quot;&gt;Wikipédia&lt;/a&gt; lista entre as soluções de código aberto mais comuns: &lt;a href=&quot;http://pt.wikipedia.org/wiki/CVS&quot;&gt;CVS&lt;/a&gt;, &lt;a href=&quot;http://pt.wikipedia.org/wiki/Mercurial&quot;&gt;Mercurial&lt;/a&gt;, &lt;a href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt; e &lt;a href=&quot;http://pt.wikipedia.org/wiki/Subversion&quot;&gt;SVN&lt;/a&gt;; e entre as comerciais, destaca: &lt;a href=&quot;http://pt.wikipedia.org/wiki/Microsoft_Visual_SourceSafe&quot;&gt;SourceSafe&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/Team_Foundation_Server&quot;&gt;TFS&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/PVCS&quot;&gt;PVCS (Serena)&lt;/a&gt; e &lt;a href=&quot;http://en.wikipedia.org/wiki/Rational_ClearCase&quot;&gt;ClearCase&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A primeira pergunta que surge, então, é: &lt;em&gt;o que torna o Git diferente dos outros VCS e qual a razão da sua crescente popularidade&lt;/em&gt;?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Certamente a diferença mais óbvia é que o Git é um sistema distribuído (ao contrário do SVN ou TFS, por exemplo). Isso significa que você possui um repositório local que fica numa pasta especial chamada &lt;code&gt;.git&lt;/code&gt; e normalmente (mas não obrigatoriamente), tem um repositório remoto central onde diferentes colaboradores podem contribuir para o desenvolvimento do código. Observe que cada um desses colaboradores possui um clone exato do repositório em suas estações de trabalho locais.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Na documentação do Git há uma figura, reproduzida abaixo, que ilustra perfeitamente o controle de versão baseado num sistema distribuído.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://i.imgur.com/Dqd0Kr2.png&quot; alt=&quot;Dqd0Kr2&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figura 1: Sistema de Contrôle de Versão Distribuído&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Como podemos ver, nos sistemas distribuídos, os clientes não apenas verificam o último &lt;em&gt;snapshot&lt;/em&gt; (instantâneo) dos arquivos, mas espelham o repositório inteiro. Uma enorme vantagem dessa solução é que, se porventura o servidor perder os dados por algum problema técnico, eles podem ser recuperados de qualquer um dos clientes que estejam colaborando no projeto, pois cada clone possui um &lt;em&gt;backup&lt;/em&gt; completo dos dados.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Quem quiser se aprofundar mais no funcionamento cliente/servidor dos sistemas de controle de versão, poderá tomar a referência mencionada da &lt;a href=&quot;http://pt.wikipedia.org/wiki/Sistema_de_controle_de_vers%C3%A3o&quot; target=&quot;_blank&quot;&gt;Wikipédia&lt;/a&gt; como ponto de partida.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A seguir, numa adaptação do excelente artigo de Juri Strumpflohner, &lt;a href=&quot;http://juristr.com/blog/2013/04/git-explained/&quot; target=&quot;_blank&quot;&gt;publicado no seu blog&lt;/a&gt; em abril de 2013, vamos analisar o funcionamento do Git observando o repositório Git sob o ponto de vista das árvores que ele constrói. Para isso, utilizaremos algumas funcionalidades comuns, tais como:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sidebarblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;acrescentar/modificar um arquivo novo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;criar e mesclar uma &lt;em&gt;branch&lt;/em&gt; (ramificação) com e sem conflitos de mesclagem;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ver o histórico/&lt;em&gt;changelog&lt;/em&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;executar um &lt;em&gt;rollback&lt;/em&gt; até determinado &lt;em&gt;commit&lt;/em&gt; e&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;compartilhar/sincronizar o código num repositório remoto central.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A próxima figura, editada a partir da original contida na &lt;a href=&quot;http://git-scm.com/book/en/v2/Getting-Started-Git-Basics&quot; target=&quot;_blank&quot;&gt;documentação oficial&lt;/a&gt; do Git, ilustra com clareza as três fases principais por que passa um arquivo num diretório controlado pelo Git:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://i.imgur.com/73ceAys.png&quot; alt=&quot;73ceAys&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figura 2: Diretório de trabalho, área de estágio e diretório Git.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_terminologia_básica&quot;&gt;Terminologia Básica&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Vamos começar examinando alguns termos usados no Git que são fundamentais:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;master&lt;/strong&gt;&amp;#8201;&amp;#8212;&amp;#8201;a &lt;em&gt;branch&lt;/em&gt; principal do repositório. Normalmente é onde as pessoas trabalham e na qual a integração acontece.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;clone&lt;/strong&gt;&amp;#8201;&amp;#8212;&amp;#8201;copia um repositório &lt;code&gt;git&lt;/code&gt; existente, usualmente de alguma localização remota, para o seu ambiente local.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;commit&lt;/strong&gt;&amp;#8201;&amp;#8212;&amp;#8201;envio de arquivos para o repositório local.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;fetch&lt;/strong&gt; ou &lt;strong&gt;pull&lt;/strong&gt;&amp;#8201;&amp;#8212;&amp;#8201;pega as últimas atualizações de um repositório remoto. A diferença entre &lt;em&gt;fetch&lt;/em&gt; e &lt;em&gt;pull&lt;/em&gt; é que &lt;em&gt;pull&lt;/em&gt; combina as duas coisas: pega as atualizações de código do repositório remoto e efetua sua mesclagem com o repositório local.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;push&lt;/strong&gt;&amp;#8201;&amp;#8212;&amp;#8201;é usado para enviar arquivos para um repositório remoto.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;remote&lt;/strong&gt;&amp;#8201;&amp;#8212;&amp;#8201;são os locais remotos do seu repositório, normalmente em algum servidor central, como o GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SHA&lt;/strong&gt;&amp;#8201;&amp;#8212;&amp;#8201;cada &lt;em&gt;commit&lt;/em&gt; ou &lt;em&gt;node&lt;/em&gt; na árvore Git é identificado por uma chave &lt;a href=&quot;http://pt.wikipedia.org/wiki/SHA1&quot;&gt;SHA&lt;/a&gt; única. Pode-se utilizá-las em vários comandos para manipular um &lt;em&gt;node&lt;/em&gt; específico.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;head&lt;/strong&gt;&amp;#8201;&amp;#8212;&amp;#8201;é uma referência a um &lt;em&gt;node&lt;/em&gt; para o qual nosso espaço de trabalho no repositório aponta no momento.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;branch&lt;/strong&gt;&amp;#8201;&amp;#8212;&amp;#8201;uma &lt;em&gt;branch&lt;/em&gt; no Git nada mais é do que um rótulo particular em determinado &lt;em&gt;node&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_configuração_elementar&quot;&gt;Configuração Elementar&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Não vou entrar em detalhes aqui sobre a instalação do Git, pois isso vai depender do sistema operacional de cada um e, além disso, já existem instruções detalhadas para isso na &lt;a href=&quot;http://git-scm.com/book/pt-br/v1/Primeiros-passos-Instalando-Git&quot; target=&quot;_blank&quot;&gt;documentação oficial do Git&lt;/a&gt;, com tradução em português.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Usarei a sintaxe da linha de comando dos sistemas baseados em Unix, tais como o Linux e o OS X. No Windows, além da interface gráfica, há um programa para emular um terminal tipo Unix, de forma que este tutorial poderá ser seguido sem problemas, seja qual for seu sistema operacional. O símbolo &lt;code&gt;$&lt;/code&gt; representa o &lt;em&gt;prompt&lt;/em&gt; da linha de comando e não deve ser digitado.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Pressupondo, então, que o Git já está instalado no seu computador e o atalho correspondente ao diretório de sua instalação foi devidamente incluído na variável &lt;em&gt;PATH&lt;/em&gt; do seu sistema, a primeira coisa a ser feita é configurá-lo com seu nome e endereço de &lt;em&gt;email&lt;/em&gt;. Vamos aproveitar também para configurar um editor-padrão&amp;#8201;&amp;#8212;&amp;#8201;vou escolher o &lt;a href=&quot;http://www.vim.org/&quot; target=&quot;_blank&quot;&gt;vim&lt;/a&gt;, mas esteja à vontade para personalizar esta seleção de acordo com o seu gosto pessoal. Para isso, entre os seguintes comandos, com as devidas substituições pessoais:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git config --global user.name &quot;J A Gaeta Mendes&quot;
$ git config --global user.email &quot;meu_email@example.com&quot;
$ git config --global core.editor vim&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As configurações podem ser conferidas com o comando &lt;code&gt;git config --list&lt;/code&gt;, cujo resultado, após os comandos acima, será:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git config --list
user.name=J A Gaeta Mendes
user.email=meu_email@example.com
core.editor=vim&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_criação_de_um_novo_repositório_git&quot;&gt;Criação de um novo repositório Git&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Antes de prosseguir, vamos criar um diretório onde pretendemos instalar um novo repositório Git e entrar neste diretório, com os comandos:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ mkdir meurepogit
$ cd meurepogit&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Em seguida, vamos inicializar nosso novo repositório git:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git init
Initialized empty Git repository in /home/gaeta/meurepogit/.git/&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Use o comando &lt;code&gt;git status&lt;/code&gt; para verificar o estado atual do repositório:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git status
On branch master

Initial commit

nothing to commit (create/copy files and use &quot;git add&quot; to track)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_criação_e_em_commit_em_de_um_novo_arquivo&quot;&gt;Criação e &lt;em&gt;commit&lt;/em&gt; de um novo arquivo&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O próximo passo é criar e adicionar algum conteúdo ao repositório. Vamos criar um arquivo de uma forma bem simples, com os comandos:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ touch ola.txt
$ echo Ola, mundo! &amp;gt; ola.txt&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Uma nova verificação do estado do repositório vai apresentar agora a seguinte situação:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git status
On branch master

Initial commit

Untracked files:
  (use &quot;git add &amp;lt;file&amp;gt;...&quot; to include in what will be committed)

	ola.txt

nothing added to commit but untracked files present (use &quot;git add&quot; to track)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Antes de fazer um &lt;strong&gt;commit&lt;/strong&gt;, precisamos registrar o arquivo, o que fazemos com o comando &lt;strong&gt;add&lt;/strong&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git add ola.txt&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Mais uma verificação do estado:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git status
On branch master

Initial commit

Changes to be committed:
  (use &quot;git rm --cached &amp;lt;file&amp;gt;...&quot; to unstage)

	new file:   ola.txt&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Podemos agora, finalmente, fazer seu &lt;strong&gt;commit&lt;/strong&gt; para o repositório:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git commit -m &quot;Acrescenta meu primeiro arquivo&quot;
[master (root-commit) 3a40877] Acrescenta meu primeiro arquivo
 1 file changed, 1 insertion(+)
 create mode 100644 ola.txt&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock tip&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-tip&quot; title=&quot;Tip&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
É uma prática comum indicar &amp;#8220;presença&amp;#8221; nas mensagens de &lt;em&gt;commit&lt;/em&gt;. Assim, ao invés de escrever &amp;#8220;acrescentado meu primeiro arquivo&amp;#8221;, escrevemos &amp;#8220;acrescenta meu primeiro arquivo&amp;#8221;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Se examinarmos neste instante a árvore do repositório, teríamos a seguinte situação:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://i.imgur.com/dKj4HK4.png&quot; alt=&quot;dKj4HK4&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Há um &lt;em&gt;node&lt;/em&gt; para o qual o &quot;rótulo&quot; &lt;code&gt;master&lt;/code&gt; aponta.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_acrescentando_outro_arquivo&quot;&gt;Acrescentando outro arquivo&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Vamos agora adicionar um outro arquivo ao repositório:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ echo &quot;Oi, sou um outro arquivo&quot; &amp;gt; outro_arquivo.txt
$ git add .
$ git commit -m &quot;acrescenta outro arquivo com outro conteúdo&quot;
[master ad5c381] acrescenta outro arquivo com outro conteúdo
 1 file changed, 1 insertion(+)
 create mode 100644 outro_arquivo.txt&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Observe que agora usamos &lt;code&gt;git add .&lt;/code&gt;, que acrescenta todos os arquivos do diretório corrente (&lt;code&gt;.&lt;/code&gt;). Do ponto de vista da árvore temos agora outro &lt;em&gt;node&lt;/em&gt; e &lt;code&gt;master&lt;/code&gt; moveu-se para ele.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://i.imgur.com/meAuxz4.png&quot; alt=&quot;meAuxz4&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_criando_uma_ramificação_de_recursos&quot;&gt;Criando uma ramificação (de recursos)&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ramificação (&lt;em&gt;branching&lt;/em&gt;) e mesclagem (&lt;em&gt;merging&lt;/em&gt;) são as duas coisas que tornam o Git tão poderoso, e é para isso que ele foi otimizado, em se tratando de um sistema de controle de versão &lt;strong&gt;distribuído&lt;/strong&gt; (VCS). De fato, as ramificações de recursos (&lt;em&gt;feature branches&lt;/em&gt;) são criadas para cada novo tipo de funcionalidade que você acrescentar ao seu sistema e são normalmente apagadas mais tarde, depois que o recurso tenha sido mesclado outra vez na ramificação principal de integração (usualmente a ramificação &lt;em&gt;master&lt;/em&gt;). A grande vantagem disso é que você pode experimentar a nova funcionalidade num &amp;#8220;playground&amp;#8221; separado e isolado, movendo-se rapidamente para frente ou para trás da ramificação &amp;#8220;master&amp;#8221; original quando necessário. Ademais, ela poderá ser facilmente descartada outra vez (no caso de não ser mais necessária), bastando eliminar a ramificação do recurso. Há um ótimo artigo para &lt;a href=&quot;http://blog.thoughtram.io/git/rebase-book/2015/02/10/understanding-branches-in-git.html&quot; target=&quot;_blank&quot;&gt;entender as ramificações no Git&lt;/a&gt;, que você definitivamente deve ler.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Mas vamos começar. Primeiro de tudo, criamos uma nova ramificação de recurso:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git branch minha-feature-branch&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Executando o comando:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git branch
* master
  minha-feature-branch&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;obtemos uma lista das ramificações. O &lt;code&gt;*&lt;/code&gt; na frente de &lt;code&gt;master&lt;/code&gt; indica que no momento estamos naquele ramo. Vamos, a invés disso, mudar para o ramo &lt;code&gt;minha-feature-branch&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git checkout minha-feature-branch
Switched to branch &apos;minha-feature-branch&apos;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Listando novamente as ramificações:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git branch
  master
* minha-feature-branch&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock tip&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-tip&quot; title=&quot;Tip&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
Pode-se usar o comando direto &lt;code&gt;git checkout -b minha-feature-branch&lt;/code&gt; para criar e ativar uma nova ramificação num único passo.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A diferença de outros VCS é que há apenas um diretório de trabalho. Todas as ramificações ficam nele e não há uma pasta separada para cada ramificação criada. Ao invés disso, quando se alterna entre as ramificações, o Git atualiza o conteúdo do diretório de trabalho para refletir aquele da ramificação para a qual se está mudando.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Vamos modificar um dos nossos arquivos existentes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ echo &quot;Oi&quot; &amp;gt;&amp;gt; ola.txt
$ cat ola.txt
Ola, mundo!
Oi&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&amp;#8230;&amp;#8203;e então vamos fazer um &lt;em&gt;commit&lt;/em&gt; dele para nossa nova ramificação:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git commit -a -m &quot;modifica arquivo acrescentando oi&quot;
[minha-feature-branch 8cff170] modifica arquivo acrescentando oi
 1 file changed, 1 insertion(+)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock tip&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-tip&quot; title=&quot;Tip&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
Dessa vez usamos o comando &lt;code&gt;git commit -a -m&lt;/code&gt; para fazer o &lt;code&gt;add&lt;/code&gt; e &lt;code&gt;commit&lt;/code&gt; da modificação num único passo. Isso funciona apenas nos arquivos que já tenham sido adicionados previamente ao repositório git. Arquivos novos não podem ser adicionados dessa maneira e precisam ser inseridos com o comando &lt;code&gt;git add&lt;/code&gt; como visto antes.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Como ficou nossa árvore?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://i.imgur.com/rp32PbY.png&quot; alt=&quot;rp32PbY&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Até aqui tudo parece bem normal e ainda temos uma linha reta na árvore, mas observe que agora o &lt;code&gt;master&lt;/code&gt; continuou onde estava e movemos adiante &lt;code&gt;minha-feature-branch&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Vamos trocar para &lt;code&gt;master&lt;/code&gt; e modificar o mesmo arquivo lá também.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git checkout master
Switched to branch &apos;master&apos;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Como era de se esperar, alo.txt não foi modificado:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ cat ola.txt
Ola, mundo!&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Vamos modificá-lo e dar um &lt;code&gt;commit&lt;/code&gt; no &lt;code&gt;master&lt;/code&gt; também (isso vai gerar um belo conflito mais tarde):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ echo &quot;Oi, fui modificado no master&quot; &amp;gt;&amp;gt; ola.txt
$ git commit -a -m &quot;acrescenta linha em ola.txt&quot;
[master 33b65ea] acrescenta linha em ola.txt
 1 file changed, 1 insertion(+)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nossa árvore agora visualiza a ramificação:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://i.imgur.com/LObvuwo.png&quot; alt=&quot;LObvuwo&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_mesclando_e_resolvendo_conflitos&quot;&gt;Mesclando e resolvendo conflitos&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O próximo passo será reintegrar nossa &lt;code&gt;feature branch&lt;/code&gt; de volta em &lt;code&gt;master&lt;/code&gt;. Isso é feito usando o comando &lt;code&gt;merge&lt;/code&gt; :&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git merge minha-feature-branch
Auto-merging ola.txt
CONFLICT (content): Merge conflict in ola.txt
Automatic merge failed; fix conflicts and then commit the result.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Como esperado, temos um conflito de mesclagem em ola.txt.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ cat ola.txt
Ola, mundo!
&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD
Oi, fui modificado no master
=======
Oi
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; minha-feature-branch&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Vamos consertar isso:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Ola, mundo!
Oi, fui modificado no master
Oi&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&amp;#8230;&amp;#8203;e fazer o &lt;code&gt;commit&lt;/code&gt; novamente:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git commit -a -m &quot;resolve conflitos de merge&quot;
[master 838d26a] resolve conflitos de merge&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A árvore reflete nosso &lt;code&gt;merge&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://i.imgur.com/2gMboCl.png&quot; alt=&quot;2gMboCl&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_saltando_para_um_determinado_commit&quot;&gt;Saltando para um determinado Commit&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Suponhamos que queremos saltar de volta a um dado &lt;code&gt;commit&lt;/code&gt;. Podemos usar o comando &lt;code&gt;git log&lt;/code&gt; para obter todos os identificadores SHA que identificam de forma única cada &lt;code&gt;node&lt;/code&gt; da árvore.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Escolha um dos identificadores (mesmo que não seja o número completo, pouco importa) e pule para aquele &lt;code&gt;node&lt;/code&gt; usando o comando &lt;code&gt;checkout&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git checkout 33b65ea
Note: checking out &apos;33b65ea&apos;.

You are in &apos;detached HEAD&apos; state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 33b65ea... acrescenta linha em ola.txt&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Observe o comentário exibido pelo git. O que ele significa? &lt;em&gt;Detached head&lt;/em&gt; significa que a &lt;em&gt;head&lt;/em&gt; não está mais apontando para um rótulo de &lt;em&gt;branch&lt;/em&gt;, mas, ao invés disso, para um &lt;em&gt;commit&lt;/em&gt; específico da árvore.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
Pense na HEAD como a &amp;#8220;branch atual&amp;#8221;. Quando você troca de &lt;em&gt;branches&lt;/em&gt; com &lt;code&gt;git checkout&lt;/code&gt;, a revisão HEAD muda para apontar a dica da nova &lt;em&gt;branch&lt;/em&gt;.(&amp;#8230;&amp;#8203;) É possível para a HEAD referir-se a uma revisão específica que não esteja associada com um nome de &lt;em&gt;branch&lt;/em&gt;. Esta situação é chamada &lt;a href=&quot;http://git-scm.com/docs/git-checkout&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;detached HEAD&lt;/em&gt;&lt;/a&gt;. &lt;a href=&quot;http://stackoverflow.com/a/2304106/50109&quot; target=&quot;_blank&quot;&gt;(Postagem no Stackoverflow)&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Basicamente, quando eu agora modifico &lt;strong&gt;ola.txt&lt;/strong&gt; e faço &lt;code&gt;commit&lt;/code&gt; da mudança, a árvore se parece com o seguinte:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://i.imgur.com/CFkTxem.png&quot; alt=&quot;CFkTxem&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Como você pode ver, o &lt;code&gt;node&lt;/code&gt; recem-criado não possui nenhum rótulo. A única referência que atualmente aponta para ele é a &lt;em&gt;head&lt;/em&gt;. Todavia, se trocarmos para &lt;code&gt;master&lt;/code&gt; novamente, o &lt;code&gt;commit&lt;/code&gt; anterior será perdido, pois não teremos como saltar de volta para aquele &lt;code&gt;node&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git checkout master
Warning: you are leaving 1 commit behind, not connected to
any of your branches:

  576bcb8 change file undoing previous changes

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch new_branch_name 576bcb8239e0ef49d3a6d5a227ff2d1eb73eee55

Switched to branch &apos;master&apos;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Como se observa, o git nos alerta desse fato.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_rollback&quot;&gt;Rollback&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Saltar para trás é bom, mas e se quisermos &lt;strong&gt;desfazer&lt;/strong&gt; tudo de volta ao estado antes do &lt;code&gt;merge&lt;/code&gt; da &lt;code&gt;feature branch&lt;/code&gt;? Muito fácil:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git reset --hard 33b65ea
HEAD is now at 33b65ea acrescenta linha em ola.txt&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://i.imgur.com/LObvuwo.png&quot; alt=&quot;LObvuwo&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A sintaxe genérica aqui é &lt;code&gt;git reset --hard &amp;lt;tag/branch/commit id&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_usando_revert_para_fazer_rollback_das_mudanças_do_jeito_fácil&quot;&gt;Usando &amp;#8220;revert&amp;#8221; para fazer rollback das mudanças do jeito fácil&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Se você precisar fazer o &lt;code&gt;rollback&lt;/code&gt; de um &lt;code&gt;commit&lt;/code&gt; inteiro e (o que é pior) você já sincronizou com um repositório remoto, então usar &lt;code&gt;git reset --hard&lt;/code&gt; pode não ser adequado, uma vez que dessa forma você estaria reescrevendo a história, o que não é permitido se a sincronização com o servidor remoto já foi efetuada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Em tais situações pode-se usar o comando &lt;code&gt;revert&lt;/code&gt;, o qual basicamente cria um novo &lt;code&gt;commit&lt;/code&gt; desfazendo todas as mudanças de um determinado commit que for especificado. Considere, por exemplo, que você queira fazer o &lt;em&gt;rollback&lt;/em&gt; de um &lt;em&gt;commit&lt;/em&gt; com o ID &lt;code&gt;41b8684&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git revert 41b8684&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_desfazendo_mudanças_quando_não_foi_feito_commit&quot;&gt;Desfazendo mudanças quando não foi feito Commit&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Outro cenário comum no terreno de &amp;#8220;desfazer coisas&amp;#8221; é simplesmente descartar mudanças locais quando ainda não foi feito o &lt;code&gt;commit&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_arquivos_não_estagiados_para_um_commit&quot;&gt;Arquivos não estagiados para um Commit&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Vamos pressupor que você tenha modificado um arquivo. A execução do comando &lt;code&gt;git status&lt;/code&gt; resultaria:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git status
On branch master
Changes not staged for commit:
  (use &quot;git add &amp;lt;file&amp;gt;...&quot; to update what will be committed)
  (use &quot;git checkout -- &amp;lt;file&amp;gt;...&quot; to discard changes in working directory)

	modified:   ola.txt

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Até aqui nada foi adicionado ao seu repositório Git, nem foi estagiado (registrado) para fazer &lt;code&gt;commit&lt;/code&gt;. O que significa descartar aquelas mudanças? Pense na árvore Git. Basta pegar (&lt;code&gt;checkout&lt;/code&gt;) a última versão daquele arquivo, certo?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Então:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git checkout ola.txt&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;desfaz a mudança, como o comprova um novo &lt;code&gt;git status&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git status
On branch master
nothing to commit, working directory clean&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_arquivos_estagiados_para_um_commit&quot;&gt;Arquivos estagiados para um Commit&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A outra situação é quando você modificou o arquivo e já o estagiou para dar um &lt;code&gt;commit&lt;/code&gt; através do comando &lt;code&gt;git add&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git status
On branch master
Changes to be committed:
  (use &quot;git reset HEAD &amp;lt;file&amp;gt;...&quot; to unstage)

	modified:   ola.txt&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O comando &lt;code&gt;git checkout&lt;/code&gt; não teria nenhum efeito neste caso, mas, ao invés disso, (se você leu o que o git escreveu na saída do parâmetro de &lt;em&gt;status&lt;/em&gt;) temos que fazer um &lt;strong&gt;reset&lt;/strong&gt;. Por que? Porque o comando &lt;code&gt;git add&lt;/code&gt; já criou um &lt;em&gt;node&lt;/em&gt; na árvore Git (na verdade isso não é 100% correto: &lt;a href=&quot;http://stackoverflow.com/questions/3689838/difference-between-head-working-tree-index-in-git&quot;&gt;&lt;em&gt;veja Git index vs. working tree&lt;/em&gt;&lt;/a&gt; para mais detalhes) que, todavia, ainda não foi objeto de um &lt;code&gt;commit&lt;/code&gt;. Assim sendo, precisamos &lt;em&gt;resetar&lt;/em&gt; o ponteiro corrente para HEAD que é o topo da nossa &lt;em&gt;branch&lt;/em&gt; corrente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git reset HEAD ola.txt
Unstaged changes after reset:
M	ola.txt&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;e consequentemente:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git status
On branch master
Changes not staged for commit:
  (use &quot;git add &amp;lt;file&amp;gt;...&quot; to update what will be committed)
  (use &quot;git checkout -- &amp;lt;file&amp;gt;...&quot; to discard changes in working directory)

	modified:   ola.txt

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Estamos novamente no estado em que temos mudanças locais &lt;em&gt;ainda não estagiadas para um commit&lt;/em&gt; e podemos então usar o comando &lt;code&gt;checkout&lt;/code&gt; para descartá-las. Uma maneira rápida de fazer isso é usar:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git reset --hard HEAD&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;juntando num único comando a retirada de estágio e &lt;em&gt;checkout&lt;/em&gt; das mudanças.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_compartilhando_sincronizando_seu_repositório&quot;&gt;Compartilhando/Sincronizando seu Repositório&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ao fim e ao cabo, vamos querer compartilhar nosso código, normalmente sincronizando-o com um repositório central. Para fazer isso, temos que adicionar um &lt;strong&gt;remote&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git remote add origin git@github.com:ja-gaeta/exemplo.git&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para verificar se obteve êxito, basta digitar:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git remote -v&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;o qual lista todos os &lt;em&gt;remotes&lt;/em&gt;. Agora é preciso &lt;strong&gt;publicar nossa &lt;em&gt;branch master&lt;/em&gt; local&lt;/strong&gt; para o repositório remoto. Isso é feito da seguinte forma:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git push -u origin master&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;E terminamos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Uma coisa realmente poderosa é que pode-se acrescentar repositórios remotos múltiplos. Isso é usado frequentemente em combinação com soluções de hospedagem em nuvem para distribuição do código no servidor. Por exemplo, você pode acrescentar um remoto chamado &lt;em&gt;deploy&lt;/em&gt; que aponta para algum servidor de repositório hospedado na nuvem, tal como:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git remote add deploy git@somecloudserver.com:ja-gaeta/meuprojeto&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;e então, sempre que você quiser publicar sua &lt;em&gt;branch&lt;/em&gt;, basta executar:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git push deploy&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_clonagem&quot;&gt;Clonagem&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Tudo funciona da mesma forma se você pretende iniciar a partir de um repositório remoto já existente. O primeiro passo é fazer um &lt;code&gt;checkout&lt;/code&gt; do código-fonte, o que é chamado &lt;strong&gt;clonagem&lt;/strong&gt; (&lt;em&gt;cloning&lt;/em&gt;) na terminologia do Git. Deve-se, então, fazer algo assim:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git clone git@github.com:ja-gaeta/exemplo.git
Cloning into &apos;exemplo&apos;...
remote: Counting objects: 430, done.
remote: Compressing objects: 100% (293/293), done.
remote: Total 430 (delta 184), reused 363 (delta 128)
Receiving objects: 100% (430/430), 419.70 KiB | 102 KiB/s, done.
Resolving deltas: 100% (184/184), done.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Isso vai criar uma pasta (neste caso) chamada &amp;#8220;exemplo&amp;#8221; e se entrarmos nela:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ cd exemplo/&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;e verificarmos os repositórios remotos, constatamos que a informação para seu rastreamento já está configurada:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git remote -v
origin  git@github.com:juristr/intro.js.git (fetch)
origin  git@github.com:juristr/intro.js.git (push)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Podemos começar agora o ciclo &lt;code&gt;commit/branch/push&lt;/code&gt; normalmente.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_recursos_e_em_links_em_em_inglês&quot;&gt;Recursos e &lt;em&gt;Links&lt;/em&gt; (em inglês)&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Os cenários acima são simples, mas provavelmente são também, ao mesmo tempo , os mais usados. O Git, contudo, é capaz de fazer muito mais. Para obter mais detalhes, consulte os links abaixo:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://gitready.com/&quot; class=&quot;bare&quot;&gt;http://gitready.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://git-scm.com/book&quot;&gt;Book: Pro Git by Scott Chacon&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://ndpsoftware.com/git-cheatsheet.html&quot;&gt;Visual Git Cheat-Sheet&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/juristr/5280366&quot;&gt;My personal Git Cheat Sheet where I continuously add stuff I want to remember&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://gitimmersion.com/index.html&quot;&gt;Git Immersion&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/lemiorhan/git-branching-model&quot;&gt;Git Branching Model&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://refcardz.dzone.com/refcardz/getting-started-git&quot;&gt;DZone Refcard: Getting Started with Git&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://refcardz.dzone.com/refcardz/git-patterns-and-anti-patterns&quot;&gt;DZone Refcard: Git Patterns and Antipatterns&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://git-man-page-generator.lokaltog.net/&quot;&gt;Git Man-Page generator&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.thoughtram.io/git/rebase-book/2015/02/10/understanding-branches-in-git.html&quot;&gt;Understanding branches in Git&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://about.gitlab.com/2015/02/19/8-tips-to-help-you-work-better-with-git/&quot;&gt;8 Tips to help you work better with Git&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.atlassian.com/git/&quot;&gt;Getting Git Right&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_vídeos&quot;&gt;Vídeos&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=ZDR433b0HJY&amp;amp;feature=youtu.be&amp;amp;t=21m4s&quot;&gt;Introduction to Git with Scott Chacon of GitHub&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_tutoriais_interativos&quot;&gt;Tutoriais Interativos&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://try.github.io/&quot;&gt;Try Git in 15 minutes&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://pcottle.github.io/learnGitBranching/index.html&quot;&gt;Learning Git - Interactive Online Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_artigo_original&quot;&gt;Artigo original&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://juristr.com/blog/2013/04/git-explained/#Rollback&quot;&gt;Git Explained: For Beginners&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	    </description>
      </item>
      <item>
        <title>Atualizações...</title>
        <link>http://ja-gaeta.github.io/2015/atualizacoes.html</link>
        <pubDate>Ter, 10 mar 2015 00:00:00 -0300</pubDate>
        <guid isPermaLink="false">2015/atualizacoes.html</guid>
        <description>
	        &lt;h2&gt;Atualização do Ponto G++&lt;/h2&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/NhMa6IW.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Já faz um tempão que não atualizava o Ponto G++, mas não estive parado. Pelo contrário, mantive bastante atividade nestes últimos dois meses, preparando uma atualização completa do &lt;em&gt;site&lt;/em&gt;, usando agora a plataforma &lt;a href=&quot;https://br.wordpress.org/&quot;&gt;WordPress&lt;/a&gt;, em substituição à plataforma &lt;a href=&quot;http://www.drupal.org.br/&quot;&gt;Drupal&lt;/a&gt; que vinha usando até então. O motivo: simplificar a manutenção do site, para poder dedicar-me mais à elaboração de conteúdo.&lt;/p&gt;
&lt;!--more--&gt;&lt;p&gt;O Drupal é um &lt;abbr title=&quot;Content Management System&quot;&gt;CMS&lt;/abbr&gt; excelente, mas para a finalidade que tenho em mente no momento, é uma ferramenta muito pesada — um canhão para matar moscas!&lt;/p&gt;&lt;p&gt;O WordPress, por outro lado, tem manutenção mais simples, embora mantenha poder de fogo suficiente para a elaboração de &lt;em&gt;sites&lt;/em&gt; muito profissionais. Não é a toa que se tornou o lider mundial na sua categoria.&lt;/p&gt;&lt;p&gt;Para o desenvolvimento do Ponto G++, optei por um tema baseado no &lt;a href=&quot;http://getbootstrap.com/getting-started/&quot;&gt;Bootstrap&lt;/a&gt;, para assegurar a excelente responsividade &lt;em&gt;front-end&lt;/em&gt; garantida por este &lt;em&gt;framework&lt;/em&gt; que praticamente se tornou padrão para o desenvolvimento &lt;em&gt;web&lt;/em&gt; de olho nos dispositivos &lt;em&gt;mobile&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;Um outro CMS que andei &lt;em&gt;namorando&lt;/em&gt; foi o &lt;a href=&quot;http://modx.com/&quot;&gt;MODX&lt;/a&gt;, que possui uma flexibilidade incrível para a criação de &lt;em&gt;sites&lt;/em&gt; bem profissionais, sem o &quot;peso&quot; dos CMS similares. Todavia, essa flexibilidade acaba sacrificando a simplicidade de manutenção, além de exigir muito mais trabalho de programação, tanto &lt;em&gt;back-end&lt;/em&gt; como &lt;em&gt;front-end&lt;/em&gt;. Mas meu &lt;em&gt;namoro&lt;/em&gt; com o MODX continua e, quem sabe, talvez ainda venha a usá-lo mais tarde.&lt;/p&gt;&lt;p&gt;Mudando completamente o enfoque, estudei também a possibilidade de usar um gerador de &lt;em&gt;sites&lt;/em&gt; estáticos, muito em voga atualmente para o desenvolvimento de Blogs, documentação, portfólios e até mesmo &lt;em&gt;sites&lt;/em&gt; de pequenos negócios, possibilitando sua publicação não apenas em qualquer provedor pago, mas também no &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub&lt;/a&gt; ou outros provedores gratuitos semelhantes.&lt;/p&gt;&lt;p&gt;A grande vantagem desse tipo de desenvolvimento é a sua simplicidade, facilidade de manutenção, rapidez de acesso ao conteúdo e segurança. Ademais, existe atualmente uma gama enorme de &lt;em&gt;frameworks&lt;/em&gt; geradores de &lt;em&gt;sites&lt;/em&gt; estáticos altamente eficientes, sendo o mais famoso deles o &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, embora a lista seja enorme — consulte este &lt;a href=&quot;https://www.staticgen.com/&quot;&gt;link&lt;/a&gt;, para uma relação mais abrangente.&lt;/p&gt;&lt;p&gt;Experimentei vários: o já mencionado Jekyll; o &lt;a href=&quot;http://jekyllbootstrap.com/&quot;&gt;Jekyll com Bootstrap&lt;/a&gt;; o &lt;a href=&quot;http://gohugo.io/&quot;&gt;Hugo&lt;/a&gt; — baseado na linguagem de programação &lt;a href=&quot;http://golang.org/&quot;&gt;Go&lt;/a&gt;, talvez seja o mais rápido deles, tanto para a geração do &lt;em&gt;site&lt;/em&gt; estático, como para o carregamento das páginas, pois é focado em velocidade e performance; o &lt;a href=&quot;http://sysgears.com/grain/&quot;&gt;Grain&lt;/a&gt;, que é um interessante projeto usando a linguagem de programação &lt;a href=&quot;http://groovy-lang.org/&quot;&gt;Groovy&lt;/a&gt;; e o &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt;, um projeto em franco desenvolvimento usando a linguagem de programação Java, o qual, por este motivo, foi o que escolhi para testar, clonando o Ponto G++ num &lt;em&gt;site&lt;/em&gt; hospedado no GitHub. &lt;a href=&quot;http://ja-gaeta.github.io/&quot;&gt;Veja o resultado&lt;/a&gt;. Funciona muito bem e, como agora estou editando meus artigos em &lt;a href=&quot;http://pt.wikipedia.org/wiki/Markdown&quot;&gt;Markdown&lt;/a&gt;, a publicação no site &lt;em&gt;oficial&lt;/em&gt; usando WordPress, hospedado no HostGator, e o &lt;em&gt;clone&lt;/em&gt;, hospedado no GitHub, pode ser feita simultaneamente.&lt;/p&gt;&lt;p&gt;Bom, acho que isso lhes dá uma visão geral do que andei fazendo para a atualização do Ponto G++. Ainda irei voltar ao assunto em artigos específicos na categoria &quot;desenvolvimento Web&quot;.&lt;/p&gt;&lt;h2&gt;Atualização do Curso de Java&lt;/h2&gt;&lt;p&gt;Outra coisa que tem ocupado meu tempo é a atualização do &quot;Curso de Java&quot;, cujos vídeos venho publicando no &lt;a href=&quot;https://www.youtube.com/channel/UCSXZ98kaD6xA05IeK__FUkQ&quot;&gt;meu canal do YouTube&lt;/a&gt;. O vídeo da aula 1 foi editado para retirada de material com restrição de &lt;em&gt;copyright&lt;/em&gt; e inclusão de &lt;em&gt;capa&lt;/em&gt; personalizada, além da atualização da vinheta de encerramento. Essas duas últimas edições, aliás, também estão sendo feitas com relação aos vídeos das demais aulas.&lt;/p&gt;&lt;p&gt;A mudança mais significativa, contudo, é a inclusão do material de apoio que eu estava publicando inicialmente sob a forma de um &quot;livro&quot;, no &lt;em&gt;post&lt;/em&gt; correspondente a cada aula. Isso torna bem mais fácil correlacionar a vídeo-aula com o texto.&lt;/p&gt;&lt;p&gt;Espero que apreciem as mudanças.&lt;/p&gt;
&lt;hr/&gt;
	    </description>
      </item>
      <item>
        <title>O Formato Asciidoc</title>
        <link>http://ja-gaeta.github.io/2015/formato_asciidoc.html</link>
        <pubDate>Ter, 10 mar 2015 00:00:00 -0300</pubDate>
        <guid isPermaLink="false">2015/formato_asciidoc.html</guid>
        <description>
	        &lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;apresentação&quot;&gt;Apresentação&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://www.methods.co.nz/asciidoc/&quot; class=&quot;external&quot; target=&quot;&lt;em&gt;blank&quot;&gt;Asciidoc&lt;/a&gt; é um formato de documento de texto para escrever notas, documentação, artigos, livros, _ebooks&lt;/em&gt;, apresentações, páginas da web, páginas de manual (&lt;em&gt;man pages&lt;/em&gt;) e &lt;em&gt;blogs&lt;/em&gt;, podendo ser convertido em diversos outros formatos, tais como HTML, PDF, EPUB e páginas de manual.&lt;/p&gt;
&lt;/div&gt;
&lt;!--more--&gt;
&lt;div class=&quot;sidebarblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Finalidade deste documento&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O propósito deste artigo é demonstrar as inúmeras vantagens de edição no formato Asciidoc, como esta caixa para destaque de texto, por exemplo.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Uma outra funcionalidade muito da hora do formato Asciidoc são os blocos de advertência, incluindo ícones da biblioteca &lt;a href=&quot;http://fortawesome.github.io/Font-Awesome/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;font awsome icons&lt;/em&gt;&lt;/a&gt;, conforme podemos ver no exemplo a seguir:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
Um parágrafo de advertência atrai a atenção do leitor para alguma informação auxiliar. Seu propósito é representado por um ícone no início do parágrafo. O efeito do destaque é mesmo perfeito para editoração eletrônica e sua implementação é extremamente versátil.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Aqui estão outros tipos de advertência pré-formatadas:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock tip&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-tip&quot; title=&quot;Tip&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
Uma dica&amp;#8230;&amp;#8203;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock important&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-important&quot; title=&quot;Important&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
Não se esqueça&amp;#8230;&amp;#8203;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock warning&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-warning&quot; title=&quot;Warning&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
Atenção para&amp;#8230;&amp;#8203;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock caution&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-caution&quot; title=&quot;Caution&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
Cuidado com&amp;#8230;&amp;#8203;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Muito bacana, não é mesmo&amp;#8230;&amp;#8203; e tudo isso pode ser feito num editor de texto puro, como &lt;em&gt;vim&lt;/em&gt;, &lt;em&gt;emacs&lt;/em&gt;, &lt;em&gt;leafpad&lt;/em&gt;, &lt;em&gt;bloco de notas do windows&lt;/em&gt;, enfim, você pode se concentrar apenas no texto, bastando algumas marcações semelhantes aos formatos &lt;a href=&quot;http://pt.wikipedia.org/wiki/Markdown&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Markdown&lt;/em&gt;&lt;/a&gt; para fazer a mágica.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O editor &lt;a href=&quot;https://atom.io/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Atom&lt;/em&gt;&lt;/a&gt; tem um plugin que permite ir visualizando o resultado à medida em que você vai escrevendo. É o meu preferido para editar esse tipo de arquivo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Veja mais um exemplo, agora de uma citação famosa:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Oitenta e sete anos atrás, nossos pais ergueram neste continente uma nova nação&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;attribution&quot;&gt;
&amp;#8212; Abraham Lincoln&lt;br&gt;
&lt;cite&gt;Discurso na inauguração do cemitério de Gettysburg.&lt;/cite&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;E mais uma:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
Uma pessoa que nunca errou, nunca tentou nada novo.
&lt;/blockquote&gt;
&lt;div class=&quot;attribution&quot;&gt;
&amp;#8212; Albert Einstein
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para edição de código de programação, podemos combinar a meu &lt;a href=&quot;http://alexgorbatchev.com/SyntaxHighlighter/&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;SyntaxHighlighter&lt;/em&gt;&lt;/a&gt; preferido, em JavaScript, com as chamadas para destaque das linhas do Asciidoc, como demonstrado no exemplo abaixo:&lt;/p&gt;
&lt;/div&gt;
&lt;pre class=&quot;brush: java, toolbar: false&quot;&gt;
/* HelloWorld.java */     // (1)

public class HelloWorld { // (2)
  public static void main(String[] args) {     // (3)
      System.out.println(&quot;Olá mundão velho!&quot;); // (4)
  }
}
&lt;/pre&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Comentário&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Declaração da classe HelloWorld&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Método main() &amp;#8594; início do programa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;4&quot;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Método para exibir a mensagem no console&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Estão disponíveis também algumas funcionalidades que ainda se encontram na fase experimental, mas já podemos constatar que acrescentam requintes de formatação muito interessantes. Veja uma demonstração abaixo:&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all spread&quot;&gt;
&lt;caption class=&quot;title&quot;&gt;Atalhos de teclado comuns nos navegadores&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 50%;&quot;&gt;
&lt;col style=&quot;width: 50%;&quot;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Atalho&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Propósito&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;kbd&gt;F11&lt;/kbd&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Muda para tela cheia&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;span class=&quot;keyseq&quot;&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;T&lt;/kbd&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Abre uma nova aba&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;span class=&quot;keyseq&quot;&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;N&lt;/kbd&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Abre janela para navegação anônima&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;span class=&quot;keyseq&quot;&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;+&lt;/kbd&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Aumenta o zoom&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Só para você ter uma ideia da facilidade de montar a tabela acima, o código correspondente é o seguinte:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;:experimental:
[options=&quot;header&quot;, caption=&quot;&quot;]
.Atalhos de teclado comuns nos navegadores
|===
|Atalho |Propósito

|kbd:[F11]
|Muda para tela cheia

|kbd:[Ctrl+T]
|Abre uma nova aba

|kbd:[Ctrl+Shift+N]
|Abre janela para navegação anônima

|kbd:[Ctrl + +]
|Aumenta o zoom
|===&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Fantástico, não é mesmo? Creio que esta pequena demonstração já serviu para deixar todo mundo com água na boca, aguçando seu desejo de aprender mais sobre o  Asciidoc, a fim de incrementar a formatação dos seus artigos com extrema facilidade, tornando-os muito mais atraentes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	    </description>
      </item>
      <item>
        <title>Garbage Collection em Java (3)</title>
        <link>http://ja-gaeta.github.io/2015/garbage-collection-em-java-3.html</link>
        <pubDate>Ter, 13 jan 2015 00:00:00 -0200</pubDate>
        <guid isPermaLink="false">2015/garbage-collection-em-java-3.html</guid>
        <description>
	        &lt;p&gt;Este é o segundo de uma série de artigos sobre &lt;em&gt;Garbage Collection&lt;/em&gt; em Java, traduzidos dos originais publicados por &lt;a href=&quot;http://insightfullogic.com/about/&quot; target=&quot;_blank&quot;&gt;Richard Warburton&lt;/a&gt; no seu &lt;a href=&quot;http://insightfullogic.com/blog/2013/may/7/garbage-collection-java-3/&quot; target=&quot;_blank&quot;&gt;blog&lt;/a&gt;. (&lt;em&gt;Tradução e publicação autorizadas pelo autor&lt;/em&gt;.)&lt;/p&gt;
&lt;!--more--&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/WZWkHHS.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Esta é a continuação dos meus dois artigos anteriores sobre coleta de lixo &lt;em&gt;(garbage collection)&lt;/em&gt;:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;/2015/garbage-collection-em-java-1.html&quot;&gt;Visão geral da GC na HotSpot.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2015/garbage-collection-em-java-2.html&quot;&gt;Garbage Collectors em Paralelo.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Marcação e Limpeza Concorrentes &lt;em&gt;(Concurrent Mark Sweep)&lt;/em&gt;&lt;/h3&gt;&lt;p&gt;Os coletores de lixo paralelos na &lt;em&gt;Hotspot&lt;/em&gt; foram projetados para minimizar a quantidade de tempo que o aplicativo gasta efetuando coleta de lixo, denominado &lt;em&gt;throughput&lt;/em&gt;. Esta não é uma solução adequada para todos os aplicativos — alguns exigem que as pausas individuais também sejam curtas, o que é conhecido como exigência de latência.&lt;/p&gt;&lt;p&gt;O coletor de marcação e limpeza concorrente &lt;em&gt;(Concurrent Mark Sweep — CMS)&lt;/em&gt; é projetado para ser de latência mais baixa do que os coletores paralelos. O ponto chave do seu projeto é tentar fazer uma parte da coleta de lixo ao mesmo tempo em que o aplicativo está sendo executado. O resultado é que, quando o coletor precisa suspender a execução do aplicativo, não o faz por um período de tempo muito longo.&lt;/p&gt;&lt;p&gt;Neste ponto você provavelmente deve estar se perguntando: &quot;mas afinal, &apos;paralelo&apos; e &apos;concorrente&apos; não querem dizer a mesma coisa?&quot; Bem, no contexto da GC, paralelo significa &quot;usar múltiplas &lt;em&gt;threads&lt;/em&gt; para executar a GC ao mesmo tempo&quot; e concorrente significa que &quot;a GC é executada simultaneamente com o aplicativo no qual ela está fazendo a coleta&quot;.&lt;/p&gt;&lt;h3&gt;Coleta Geracional Jovem&lt;/h3&gt;&lt;p&gt;O coletor geracional jovem no CMS é denominado &lt;code&gt;ParNew&lt;/code&gt; e na verdade usa o mesmo algorítimo básico do coletor &lt;em&gt;Parallel Scavenge&lt;/em&gt;, um dos coletores paralelos que descrevi anteriormente.&lt;/p&gt;&lt;p&gt;Mesmo assim ele é um coletor diferente em termos da base de código &lt;em&gt;hotspot&lt;/em&gt; da &lt;em&gt;Parallel Scavenge&lt;/em&gt;, tanto porque precisa intercalar a sua execução com o resto da CMS, como também porque implementa uma API interna diferente para a &lt;em&gt;Parallel Scavenge&lt;/em&gt;. Esta última faz presunções sobre quais coletores &lt;em&gt;Tenured&lt;/em&gt; devem ser trabalhados por ela — especificamente &lt;code&gt;ParOld&lt;/code&gt; e &lt;code&gt;SerialOld&lt;/code&gt;. Tenha em mente que isso implica que o coletor geracional jovem também &quot;para o mundo&quot;.&lt;/p&gt;&lt;h3&gt;Coleta no espaço &lt;em&gt;Tenured&lt;/em&gt;&lt;/h3&gt;&lt;p&gt;Da mesma forma que o coletor &lt;code&gt;ParOld&lt;/code&gt; o coletor CMS &lt;code&gt;Tenured&lt;/code&gt; usa um algorítimo &lt;em&gt;mark and sweep&lt;/em&gt;, no qual os objetos vivos são marcados e então os objetos mortos são apagados. Apagado é realmente um termo estranho quando se trata de gerenciamento de memória. O coletor não está na verdade deletando objetos no sentido de esvaziar a memória, ele está apenas devolvendo a memória associada com aquele objeto para o espaço no qual o sistema de gerenciamento possa alocá-la — os blocos livres. Não obstante seja denominado coletor de marcação e limpeza concorrente, nem todas as suas fases são executadas concorrentemente com o aplicativo: duas delas param o mundo e quatro são executadas concorrentemente.&lt;/p&gt;&lt;h3&gt;Como é disparada a GC?&lt;/h3&gt;&lt;p&gt;Em &lt;code&gt;ParOld&lt;/code&gt;, a coleta de lixo é disparada quando se fica sem espaço na &lt;em&gt;heap Tenured&lt;/em&gt;. Esta abordagem funciona porque &lt;code&gt;ParOld&lt;/code&gt; simplesmente paralisa o aplicativo para efetuar a coleta. Para que o programa continue a rodar durante a coleta em &lt;em&gt;Tenured&lt;/em&gt;, o coletor CMS precisa começar a coletar quando ainda há espaço de trabalho remanescente em &lt;em&gt;Tenured&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;Assim sendo, a CMS começa com base no montante de ocupação do espaço &lt;em&gt;Tenured&lt;/em&gt; — a ideia é que a quantidade de espaço livre restante seja a janela de oportunidade para executar a GC. Isso é conhecido como fração de ocupação inicial e é descrita em termos de quanto a &lt;em&gt;heap&lt;/em&gt; está ocupada. Assim, uma fração de 0.7 cria uma janela de 30% da &lt;em&gt;heap&lt;/em&gt; para executar a GC CMS antes do seu esgotamento.&lt;/p&gt;&lt;h3&gt;Fases&lt;/h3&gt;&lt;p&gt;Uma vez que a GC seja disparada, o algorítimo CMS consiste de uma série de fases executadas em sequência:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Marcação Inicial &lt;em&gt;(Initial Mark)&lt;/em&gt; —&lt;/strong&gt; Paralisa todas as &lt;em&gt;threads&lt;/em&gt; do aplicativo e marca como vivos todos os objetos diretamente alcançáveis a partir dos objetos-raiz. Esta fase para o mundo.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Marcação Concorrente &lt;em&gt;(Concurrent Mark)&lt;/em&gt; —&lt;/strong&gt; As &lt;em&gt;threads&lt;/em&gt; do aplicativo são reiniciadas. Todos os objetos vivos são transitoriamente marcados enquanto alcançáveis pelas referências seguintes a partir dos objetos marcados na marcação inicial.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Pré-limpeza Concorrente &lt;em&gt;(Concurrent Preclean)&lt;/em&gt; —&lt;/strong&gt; Esta fase examina os objetos que tenham sido atualizados ou promovidos durante a marcação concorrente ou novos objetos que tenham sido alocados durante a mesma. O &lt;em&gt;bit&lt;/em&gt; de marcação é atualizado para assinalar se o objeto está vivo ou morto. A fase pode ser executada repetidamente até que haja uma taxa específica de ocupação no &lt;em&gt;Eden&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Remarcação &lt;em&gt;(Remark)&lt;/em&gt; —&lt;/strong&gt; Embora alguns objetos tenham sido atualizados durante a fase de pré-limpeza, ainda assim é preciso parar o mundo para processar objetos residuais. Esta fase faz uma revisão a partir das raízes. Ela também processa objetos de referência, tais como referências leves ou fracas. Esta fase para o mundo.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Limpeza Concorrente &lt;em&gt;(Concurrent Sweep)&lt;/em&gt; —&lt;/strong&gt; Examina a tabela de ponteiros de objetos ordinários &lt;em&gt;(Ordinary Object Pointer - OOP)&lt;/em&gt;, que referencia todos os objetos na &lt;em&gt;heap&lt;/em&gt;, e localiza os objetos mortos. A memória alocada àqueles objetos é então readicionada à sua lista de blocos livres. Esta é a lista dos espaços nos quais um objeto pode ser alocado.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;strong&gt;Reinicialização Concorrente &lt;em&gt;(Concurrent Reset)&lt;/em&gt; —&lt;/strong&gt; Reinicializa todas as estruturas de dados internas para que a CMS possa ser novamente executada no futuro.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Teoricamente, os objetos marcados durante a fase de pré-limpeza deveriam ser examinados na fase seguinte — remarcação — mas a fase de remarcação paralisa o mundo, de forma que a fase de pré-limpeza existe para tentar reduzir as pausas de remarcação, fazendo parte do trabalho de remarcação concorrentemente. Quando a CMS foi originalmente adicionada à &lt;em&gt;HotSpot&lt;/em&gt; esta fase nem sequer existia. Ela foi adicionada na versão 1.5 de Java para manejar os cenários em que uma coleta e eliminação geracional jovem causa uma pausa e é imediatamente seguida de uma remarcação. Esta remarcação também causa uma pausa, que se combinam para gerar uma pausa ainda mais pronunciada. É por isso que as remarcações são disparadas por um limiar de ocupação do &lt;em&gt;Eden&lt;/em&gt; — o objetivo é agendar a fase de remarcação para o meio do caminho entre as pausas geracionais jovens.&lt;/p&gt;&lt;p&gt;As fases de remarcação também fazem pausas, enquanto a de pré-limpeza não o faz. Isso significa que realizar pré-limpezas reduz a quantidade de tempo dispendido em pausas na GC.&lt;/p&gt;&lt;h3&gt;Falhas do Modo Concorrente&lt;/h3&gt;&lt;p&gt;Algumas vezes a CMS é incapaz de satisfazer as necessidades do aplicativo e uma GC Completa com paralisação do mundo precisa ser executada. Isso é chamado falha no modo concorrente, e normalmente resulta numa longa pausa. Uma falha no modo concorrente acontece quando não há espaço suficiente em &lt;em&gt;Tenured&lt;/em&gt; para promover um objeto. Há duas causas para isso:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;É promovido um objeto que é muito grande para caber em algum espaço contíguo de memória.&lt;/li&gt;
  &lt;li&gt;Não há espaço suficiente em &lt;em&gt;Tenured&lt;/em&gt; para dar conta da taxa de objetos vivos sendo promovidos.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Isso pode ocorrer porque a coleta concorrente é incapaz de liberar espaço rápido o suficiente, devido às taxas de promoção de objetos, ou porque o uso continuado do coletor CMS tenha causado muita fragmentação da &lt;em&gt;heap&lt;/em&gt; e não existem espaços individuais grandes o suficiente para receberem objetos promovidos. Para poder desfragmentar a &lt;em&gt;heap Tenured&lt;/em&gt; adequadamente, é preciso executar uma GC completa.&lt;/p&gt;&lt;h3&gt;Permgen&lt;/h3&gt;&lt;p&gt;A CMS não coleta os espaços &lt;em&gt;Permgen&lt;/em&gt; por padrão, exigindo que a &lt;em&gt;flag&lt;/em&gt; &lt;code&gt;XX:+CMSClassUnloadingEnabled&lt;/code&gt; seja habilitada para isso. Caso o espaço &lt;em&gt;Permgen&lt;/em&gt; se esgote enquanto a CMS está sendo usada, sem que esta &lt;em&gt;flag&lt;/em&gt; esteja habilitada, será disparada uma GC completa. Ademais, o espaço &lt;em&gt;Permgen&lt;/em&gt; pode manter referências na &lt;em&gt;heap&lt;/em&gt; normal através de estruturas como &lt;code&gt;classloaders&lt;/code&gt;, significando que até que o &lt;em&gt;Permgen&lt;/em&gt; seja coletado pode estar havendo vazamento de memória na &lt;em&gt;heap&lt;/em&gt; regular. Em Java 7 as constantes &lt;code&gt;String&lt;/code&gt; dos arquivos de classes também são alocadas na &lt;em&gt;heap&lt;/em&gt; regular, ao invés de o serem no &lt;em&gt;Permgen&lt;/em&gt;, o que por um lado reduz o uso desta, mas por outro soma-se ao conjunto de referências que estão entrando na &lt;em&gt;heap&lt;/em&gt; regular provenientes do &lt;em&gt;Permgen&lt;/em&gt;.&lt;/p&gt;&lt;h3&gt;Lixo Flutuante &lt;em&gt;(Floating Garbage)&lt;/em&gt;&lt;/h3&gt;&lt;p&gt;No final de uma coleta CMS é possível que alguns objetos não tenham sido deletados — chama-se a isso Lixo Flutuante &lt;em&gt;(Floating Garbage)&lt;/em&gt;. Isso ocorre quando os objetos são de-referenciados após a marcação inicial. A pré-limpeza concorrente e a fase de remarcação asseguram-se de que todos os objetos vivos sejam marcados, examinando os objetos que tenham sido criados, modificados ou promovidos. Caso um objeto tenha sido de-referenciado entre a marcação inicial e a fase de remarcação, então será preciso uma pesquisa completa no grafo de objetos para encontrar todos os mortos. Isso é obviamente muito demorado, e a fase de remarcação deve ser breve uma vez que nela ocorrem pausas.&lt;/p&gt;&lt;p&gt;Isso não é necessariamente um problema para os usuários da CMS uma vez que a próxima execução do coletor CMS cuidará de limpar esse lixo remanescente.&lt;/p&gt;&lt;h3&gt;Sumário&lt;/h3&gt;&lt;p&gt;A marcação e limpeza concorrente &lt;em&gt;(Concurrent Mark and Sweep)&lt;/em&gt; reduz os tempos de pausa do coletor paralelo executando parte do trabalho de GC ao mesmo tempo em que o aplicativo é executado. Ela não remove as pausas completamente, uma vez que parte de seu algorítimo precisa parar o aplicativo para que possa ser executado.&lt;/p&gt;
	    </description>
      </item>
      <item>
        <title>Garbage Collection em Java (2)</title>
        <link>http://ja-gaeta.github.io/2015/garbage-collection-em-java-2.html</link>
        <pubDate>Seg, 5 jan 2015 00:00:00 -0200</pubDate>
        <guid isPermaLink="false">2015/garbage-collection-em-java-2.html</guid>
        <description>
	        &lt;p&gt;Este é o segundo de uma série de artigos sobre &lt;em&gt;Garbage Collection em Java&lt;/em&gt;, traduzidos dos originais publicados por &lt;a href=&quot;http://insightfullogic.com/about/&quot; target=&quot;_blank&quot;&gt;Richard Warburton&lt;/a&gt; no seu &lt;a href=&quot;http://insightfullogic.com/blog/2013/mar/6/garbage-collection-java-2/&quot; target=&quot;_blank&quot;&gt;blog&lt;/a&gt;. (&lt;em&gt;Tradução e publicação autorizadas pelo autor&lt;/em&gt;.)&lt;/p&gt;
&lt;!--more--&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/s3eYAZM.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;h2&gt;Parallel Scavenge (Limpador em Paralelo)&lt;/h2&gt;&lt;p&gt;Examinaremos hoje como trabalham os &lt;em&gt;Garbage Collectors&lt;/em&gt; em Paralelo. Especificamente, isso é uma combinação da execução do coletor &lt;em&gt;Parallel Scavenge&lt;/em&gt; sobre o &lt;em&gt;Eden&lt;/em&gt; e do coletor &lt;em&gt;Mark and Sweep&lt;/em&gt; sobre a geração em &lt;em&gt;Tenured&lt;/em&gt;. Pode-se obter esta opção passando o parâmetro: &lt;code&gt;-XX:+UseParallelOldGC&lt;/code&gt;, embora ele já seja o padrão em certos tipos de máquinas.&lt;/p&gt;&lt;p&gt;Talvez você queira ler meu &lt;a href=&quot;/2015/garbage-collection-em-java-1.html&quot;&gt;primeiro artigo&lt;/a&gt; sobre Garbage Collection, se ainda não o fez, pois ele dá uma visão geral do assunto.&lt;/p&gt;&lt;h3&gt;Espaços Eden e Survivor&lt;/h3&gt;&lt;p&gt;&lt;figure style=&quot;float: left; padding: 10px&quot;&gt;&lt;img src=&quot;http://i.imgur.com/8GTEiRk.jpg&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;figcaption style=&quot;text-align: center&quot;&gt;&lt;em&gt;Um naco de cheddar, &lt;br /&gt;pronto para alocação&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;&lt;p&gt;No coletor &lt;em&gt;parallel scavenge&lt;/em&gt; os espaços &lt;em&gt;Eden&lt;/em&gt; e &lt;em&gt;Survivor&lt;/em&gt; são coletados usando uma abordagem conhecida como &lt;strong&gt;GC Hemisférica&lt;/strong&gt;. Os objetos são inicialmente alocados no &lt;em&gt;Eden&lt;/em&gt; e, quando ele está quase cheio&lt;a&gt;&lt;a href=&quot;#note1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/a&gt;, uma GC do espaço &lt;em&gt;Eden&lt;/em&gt; é disparada. Isso identifica os objetos vivos e os copia para o espaço &lt;em&gt;Survivor&lt;/em&gt; ativo&lt;a&gt;&lt;a href=&quot;#note2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/a&gt;. Ele então trata todo o espaço &lt;em&gt;Eden&lt;/em&gt; como um bloco de memória livre e contínuo que pode ser alocado novamente.&lt;/p&gt;&lt;p&gt;Neste caso o processo de alocação fica parecido com o corte de um pedaço de &lt;em&gt;cheddar&lt;/em&gt;. Cada pedaço é cortado de forma contígua e então a fatia seguinte será a próxima a ser “comida”. Isto tem a vantagem de que a alocação requer apenas uma adição de ponteiros.&lt;/p&gt;&lt;p&gt;A fim de identificar objetos vivos é realizada uma busca no grafo de objetos. A busca começa por um conjunto de objetos “raiz” que são objetos certamente vivos; por exemplo, cada &lt;em&gt;thread&lt;/em&gt; é um objeto-raiz. A busca encontra então objetos que são apontados por um conjunto raiz, e se expande para fora até encontrar todos os objetos vivos. Abaixo está uma bela representação gráfica, cortesia de &lt;a href=&quot;http://micheltriana.com/tag/garbage-collection/&quot;&gt;Michael Triana&lt;/a&gt;:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/v9G3uzN.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Paralelo, no contexto de &lt;em&gt;parallel scavenge&lt;/em&gt; significa que a coleta é feita por múltiplas &lt;em&gt;threads&lt;/em&gt; executadas ao mesmo tempo. Isso não deve ser confundido com a GC incremental, na qual o coletor é executado simultaneamente ou intercalado com o programa. A coleta em paralelo melhora o desempenho geral da GC, usando com mais eficiência as modernas CPU &lt;em&gt;multicore&lt;/em&gt;. O paralelismo é alcançado dando a cada &lt;em&gt;thread&lt;/em&gt; um conjunto de raízes para marcar e um segmento da tabela de objetos.&lt;/p&gt;&lt;p&gt;Há dois espaços &lt;em&gt;Survivor&lt;/em&gt;, mas apenas um deles está ativo num determinado instante no tempo. Eles são coletados da mesma forma que no &lt;em&gt;Eden&lt;/em&gt;. A ideia é que os objetos sejam copiados no espaço &lt;em&gt;Survivor&lt;/em&gt; ativo quando eles são promovidos do &lt;em&gt;Eden&lt;/em&gt;. Então, quando é tempo de esvaziar o espaço, eles são copiados no espaço &lt;em&gt;Survivor&lt;/em&gt; inativo. Assim que o espaço &lt;em&gt;Survivor&lt;/em&gt; estiver completamente vazio o espaço inativo torna-se ativo, e o espaço ativo torna-se inativo. Consegue-se isso invertendo-se o ponteiro para o começo do espaço &lt;em&gt;Survivor&lt;/em&gt; e significa que todos os objetos mortos neste espaço podem ser liberados, bastando tão somente uma atribuição de ponteiro.&lt;/p&gt;&lt;h3&gt;Concepção e compensações de tempo da &lt;em&gt;Young Gen&lt;/em&gt;&lt;/h3&gt;&lt;p&gt;Uma vez que isso envolve apenas a cópia de objetos vivos e mudanças de ponteiros, o tempo levado para coletar os espaços &lt;em&gt;Eden&lt;/em&gt; e &lt;em&gt;Survivor&lt;/em&gt; é proporcional à quantidade de objetos vivos. Isso é muito importante uma vez que, de acordo com a hipótese geracional, sabemos que a maioria dos objetos morrem jovens, e assim não há nenhum custo para os GC liberarem a memória associada a eles.&lt;/p&gt;&lt;p&gt;A concepção dos espaços &lt;em&gt;Survivor&lt;/em&gt; é motivada pela ideia de que a coleta de objetos quando são jovens fica mais em conta do que uma coleta no espaço &lt;em&gt;Tenured&lt;/em&gt;. A coleta contínua de objetos de uma forma hemisférica por algumas execuções de GC ajuda no desempenho geral.&lt;/p&gt;&lt;p&gt;Finalmente, o fato de que o &lt;em&gt;Eden&lt;/em&gt; é organizado num único espaço contíguo, torna a alocação pouco custosa. Um programa em C pode usar um comando &lt;code&gt;malloc&lt;/code&gt; para alocar um bloco de memória, o que implica em percorrer uma lista de espaços livres na memória tentando encontrar algum que seja grande o suficiente. Quando se usa um alocador de área e se aloca consecutivamente, tudo que se precisa fazer é verificar se há espaço livre suficiente e então incrementar um ponteiro de acordo com o tamanho do objeto.&lt;/p&gt;&lt;h3&gt;&lt;em&gt;Mark and Sweep&lt;/em&gt; em Paralelo&lt;/h3&gt;&lt;p&gt;Os objetos que tenham sobrevivido a um certo número de coletas habilitam-se ao espaço &lt;em&gt;Tenured&lt;/em&gt;. O número de vezes que precisam sobreviver é o &apos;limiar de &lt;em&gt;tenuring&lt;/em&gt;&apos;. As coletas em &lt;em&gt;Tenured&lt;/em&gt; operam um pouco diferentemente das feitas no &lt;em&gt;Eden&lt;/em&gt;, usando um algorítimo chamado &lt;em&gt;mark and sweep&lt;/em&gt; (marca e limpa). Cada objeto tem um &lt;em&gt;bit&lt;/em&gt; de marcação associado a ele. Todas as marcas são inicialmente configuradas como falsas e, a medida em que o objeto é alcançado durante a busca no grafo, são configuradas como verdadeiras.&lt;/p&gt;&lt;p&gt;A busca no grafo que identifica objetos vivos é similar à busca descrita para geração jovem. A diferença é que ao invés de copiar objetos vivos, ela simplesmente os marca. Depois disso ela pode percorrer a tabela de objetos e liberar qualquer um que não esteja vivo. Este processo é feito em paralelo em diversas &lt;em&gt;threads&lt;/em&gt;, cada uma pesquisando uma região da &lt;em&gt;heap&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;&lt;figure style=&quot;float: left; padding: 10px&quot;&gt;&lt;img src=&quot;http://i.imgur.com/S15NQci.jpg&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;figcaption style=&quot;text-align: center&quot;&gt;&lt;em&gt;Queijo depois da &lt;br /&gt;Mark and Sweep&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;&lt;p&gt;Infelizmente, este processo de deletar objetos que ainda estão vivos deixa o espaço &lt;em&gt;Tenured&lt;/em&gt; parecendo um queijo suiço. Resta alguma memória em uso na qual os objetos ainda estão vivos, entremeada de buracos onde outros viviam. Este tipo de fragmentação é prejudicial para o desempenho do aplicativo porque torna impossível alocar objetos que sejam maiores do que o tamanho dos buracos.&lt;/p&gt;&lt;p&gt;A fim de reduzir o problema do queijo suiço a &lt;em&gt;Mark/Sweep&lt;/em&gt; em Paralelo compacta a &lt;em&gt;heap&lt;/em&gt; tentando deixar os objetos vivos alocados contiguamente no começo do espaço &lt;em&gt;Tenured&lt;/em&gt;. Depois da deleção ele procura áreas do espaço &lt;em&gt;Tenured&lt;/em&gt; para identificar quais tem baixa e alta taxas de ocupação. Os objetos vivos das regiões de baixa ocupação são movidos para baixo em direção às regiões que tem alta ocupação, as quais estarão naturalmente na extremidade mais baixa da memória em razão da prévia fase de compactação. A movimentação de objetos nesta fase, na verdade, é executada pela &lt;em&gt;thread&lt;/em&gt; alocada para a região de destino, ao invés da região de origem.&lt;/p&gt;&lt;p&gt;&lt;figure style=&quot;float: right; padding: 10px&quot;&gt;&lt;img src=&quot;http://i.imgur.com/K9cjrVs.jpg&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;figcaption style=&quot;text-align: center&quot;&gt;&lt;em&gt;Queijo com baixa taxa de ocupação&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;&lt;h3&gt;Resumo&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;p&gt;O &lt;em&gt;Parallel Scavenge&lt;/em&gt; divide a &lt;em&gt;heap&lt;/em&gt; em quatro espaços: &lt;em&gt;Eden&lt;/em&gt;, dois &lt;em&gt;Survivors&lt;/em&gt; e &lt;em&gt;Tenured&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;O &lt;em&gt;Parallel Scavenge&lt;/em&gt; usa um coletor de cópia em paralelo para coletar os espaços &lt;em&gt;Eden&lt;/em&gt; e &lt;em&gt;Survivor&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;Um algorítimo diferente é usado para o espaço &lt;em&gt;Tenured&lt;/em&gt;. Ele marca todos os objetos vivos, deleta os objetos mortos e então compacta o espaço.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;O &lt;em&gt;Parallel Scavenge&lt;/em&gt; tem um bom desempenho, mas ele interrompe o programa quando é executado.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Na &lt;a href=&quot;/2015/garbage-collection-em-java-3.html&quot;&gt;terceira parte&lt;/a&gt; desta série, examinarei como funciona a CMS, ou &lt;em&gt;Concurrent-Mark-Sweep&lt;/em&gt;. Felizmente, será um artigo de leitura mais amena para aqueles com alergia à lactose.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3&gt;&lt;em&gt;Notas: &lt;/em&gt;&lt;/h3&gt;&lt;p&gt;&lt;a name=&quot;note1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; Tecnicamente há um “limiar de ocupação” para cada espaço na &lt;em&gt;heap&lt;/em&gt;, o qual define quão cheio o espaço pode ficar antes que ocorra a GC.&lt;/p&gt;&lt;p&gt;&lt;a name=&quot;note2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; Este algorítimo de cópia é baseado no algorítimo de &lt;a href=&quot;http://en.wikipedia.org/wiki/Cheney%27s_algorithm&quot;&gt;Cheney&lt;/a&gt;.&lt;/p&gt;
	    </description>
      </item>
      <item>
        <title>Garbage Collection em Java (1)</title>
        <link>http://ja-gaeta.github.io/2015/garbage-collection-em-java-1.html</link>
        <pubDate>Qui, 1 jan 2015 00:00:00 -0200</pubDate>
        <guid isPermaLink="false">2015/garbage-collection-em-java-1.html</guid>
        <description>
	        &lt;p&gt;Este é o primeiro de uma série de artigos sobre &lt;em&gt;Garbage Collection em Java&lt;/em&gt;, traduzidos dos originais publicados por &lt;a href=&quot;http://insightfullogic.com/about/&quot; target=&quot;_blank&quot;&gt;Richard Warburton&lt;/a&gt; no seu &lt;a href=&quot;http://insightfullogic.com/blog/2013/feb/20/garbage-collection-java-1/&quot; target=&quot;_blank&quot;&gt;blog&lt;/a&gt;. (&lt;em&gt;Tradução e publicação autorizadas pelo autor&lt;/em&gt;.)&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2&gt;Visão geral da Heap&lt;/h2&gt;&lt;p&gt;Espero ser capaz de cobrir um pouco da teoria e analisar todos os coletores mais importantes na máquina virtual &lt;em&gt;hotspot&lt;/em&gt;,&lt;a&gt;&lt;a href=&quot;#note1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/a&gt; ao longo desta série. Este artigo explica apenas o que é &lt;em&gt;garbage collection&lt;/em&gt; e os elementos comuns aos diferentes coletores.&lt;/p&gt;
&lt;h3&gt;Por que devo me preocupar?&lt;/h3&gt;&lt;p&gt;Sua máquina virtual Java gerencia a memória para você – o que é muito conveniente –, mas ela pode não vir regulada por padrão no ponto de seu melhor desempenho. Ao compreender um pouco da teoria por trás da &lt;em&gt;garbage collection&lt;/em&gt; você poderá ajustar o seu coletor mais facilmente. Uma preocupação comum é com a eficiência do coletor, ou seja, quanto tempo o programa gasta executando o código, em relação ao tempo dispendido na coleta de lixo. Outra preocupação usual é quanto ao tempo em que o aplicativo fica parado.&lt;/p&gt;&lt;p&gt;Além disso, existem muitas lendas e boatos envolvendo &lt;em&gt;garbage collection&lt;/em&gt;, de forma que a compreensão dos algorítimos um pouco mais detalhadamente ajuda a não cair nas ciladas e armadilhas costumeiras. Além disso, para qualquer um que se interesse em aprender como são aplicados e utilizados na prática os princípios da ciência da computação, é muito compensador examinar as entranhas da &lt;abbr title=&quot;Java Virtual Machine&quot;&gt;JVM&lt;/abbr&gt;.&lt;/p&gt;
&lt;h3&gt;O que significa “parar o mundo”?&lt;/h3&gt;&lt;p&gt;Seu programa (ou &lt;em&gt;mutator&lt;/em&gt; usando a terminologia &lt;abbr title=&quot;Garbage Collection&quot;&gt;GC&lt;/abbr&gt;) está sempre criando objetos à medida em que é executado. Em algum ponto a &lt;em&gt;heap&lt;/em&gt; precisa ser coletada e todos os coletores na &lt;em&gt;hotspot&lt;/em&gt; param o aplicativo. O termo “parar o mundo” significa que todas as &lt;em&gt;threads&lt;/em&gt; do &lt;em&gt;mutator&lt;/em&gt; são pausadas.&lt;/p&gt;&lt;p&gt;É possível implementar um &lt;em&gt;garbage collector&lt;/em&gt; que não precise efetuar pausas. A &lt;a href=&quot;http://www.azulsystems.com/&quot; target=&quot;_blank&quot;&gt;Azul Systems&lt;/a&gt; implementou efetivamente um coletor que não precisa de pausas na sua máquina virtual Zing. Não vou explicar aqui como ele funciona, mas há um &lt;a href=&quot;http://www.azulsystems.com/sites/default/files/images/c4_paper_acm.pdf&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;whitepaper&lt;/em&gt;&lt;/a&gt; muito interessante, caso você queira se aprofundar no assunto.&lt;/p&gt;
&lt;h3&gt;A Hipótese Geracional Jovem Fraca&lt;/h3&gt;&lt;p&gt;Trocando em miúdos: &lt;em&gt;A maioria dos objetos alocados morrem jovens&lt;/em&gt;&lt;a&gt;&lt;a href=&quot;#note2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/a&gt;. Este conceito foi demonstrado empiricamente analisando a alocação de memória e os padrões de sobrevida de um grande grupo de programas durante a década de 1980. O que os pesquisadores descobriram foi não apenas que a maioria dos objetos morrem jovens, mas também que, uma vez ultrapassada certa idade, tendem a ter uma sobrevida longa. O gráfico abaixo foi tirado de um estudo da SUN/Oracle observando a vida útil dos objetos na forma de um histograma.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/hRJJwPp.gif&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;Como é organizada a &lt;em&gt;Heap&lt;/em&gt;?&lt;/h3&gt;&lt;p&gt;A hipótese geracional jovem deu origem à ideia de &lt;em&gt;garbage collection&lt;/em&gt; geracional na qual a &lt;em&gt;heap&lt;/em&gt; é dividida em várias regiões, e a colocação dos objetos dentro de cada região corresponde à sua idade. Um elemento que é comum a todos os &lt;em&gt;garbage collectors&lt;/em&gt; mencionados acima (todos menos o G1)&lt;a&gt;&lt;a href=&quot;#note3&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/a&gt; é a maneira como a &lt;em&gt;heap&lt;/em&gt; é organizada em diferentes espaços.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/uZJjTVi.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Quando os objetos são inicialmente alocados, se couberem eles são armazenados no espaço do&lt;em&gt;Eden&lt;/em&gt;. Caso o objeto sobreviva a uma coleta passa então para o espaço &lt;em&gt;Survivor&lt;/em&gt;. Se ele sobreviver algumas vezes (o limiar de &lt;em&gt;tenuring&lt;/em&gt;), passa então para o espaço &lt;em&gt;Tenured&lt;/em&gt; (vitalício). As especificidades dos algorítimos para coletar esses espaços diferem de acordo com o coletor e, assim sendo, vou analisá-los separadamente num artigo futuro.&lt;/p&gt;&lt;p&gt;Esta divisão é benéfica porque permite usar diferentes algorítimos em espaços diferentes. Alguns algorítimos &lt;abbr title=&quot;Garbage Collection&quot;&gt;GC&lt;/abbr&gt; são mais eficientes se a maioria dos seus objetos estiver morta e outros são mais eficientes se a maioria deles estiver viva. Em razão da hipótese geracional, normalmente, quando chega a hora de coletar, a maioria dos objetos nos espaços &lt;em&gt;Eden&lt;/em&gt; e &lt;em&gt;Survivor&lt;/em&gt; estão mortos, e a maioria dos objetos em &lt;em&gt;Tenured&lt;/em&gt; estão vivos.&lt;/p&gt;&lt;p&gt;Há ainda a &lt;strong&gt;Permgen&lt;/strong&gt; – ou geração permanente. Esta é uma geração especial que mantém os objetos relacionados à própria linguagem Java. As informações sobre as classes carregadas, por exemplo, são mantidas ali. Historicamente, &lt;em&gt;Strings&lt;/em&gt; que tenham sido internadas ou sejam constantes, também são lá mantidas. A geração permanente está sendo trocada pelo &lt;a href=&quot;http://java.dzone.com/articles/java-8-permgen-metaspace&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;metaspace&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Múltiplos Coletores&lt;/h3&gt;&lt;p&gt;A máquina virtual &lt;em&gt;hotspot&lt;/em&gt; tem, na verdade, uma diversidade de &lt;em&gt;Garbage Collectors&lt;/em&gt;. Cada um possui um conjunto diferente de características de desempenho e é mais (ou menos) adequado para diferentes tarefas. Os &lt;em&gt;Garbage Collectors&lt;/em&gt; chave que vou examinar são:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;Parallel Scavenge&lt;/strong&gt; (PS) [Limpador Paralelo]: o coletor &lt;em&gt;default&lt;/em&gt; nas edições recentes das &lt;abbr title=&quot;Java Virtual Machine&quot;&gt;JVM&lt;/abbr&gt;. Eles param o mundo para poder coletar, mas o fazem em paralelo (i.e. usando &lt;em&gt;threads&lt;/em&gt; múltiplos).&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Concurrent Mark Sweep&lt;/strong&gt; (CMS) [Marcador de Varrição Concorrente]: este coletor tem diversas fases, algumas das quais param o mundo, mas também rodam concorrentemente com o programa em várias de suas fases.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Incremental Concurrent Mark Sweep&lt;/strong&gt; (iCMS) [ Marcador de Varrição Concorrente Incremental]: uma variante do &lt;abbr title=&quot;Concurrent Mark Sweep&quot;&gt;CMS&lt;/abbr&gt;, projetado para pausas menores. Algumas vezes ele consegue fazer isso!&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Garbage First&lt;/strong&gt; (G1) [Primeiro Lixeiro]: um novo coletor que recentemente se tornou mais estável e cujo uso vem aumentando aos poucos.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Conclusões&lt;/h3&gt;&lt;p&gt;Apresentei alguns tópicos para reflexão introdutória sobre &lt;em&gt;garbage collection&lt;/em&gt;. No &lt;a href=&quot;/2015/garbage-collection-em-java-2.html&quot;&gt;próximo artigo&lt;/a&gt; vou analisar o coletor &lt;em&gt;Parallel Scavenge&lt;/em&gt; – que é atualmente o coletor padrão. Gostaria também de fornecer um &lt;a href=&quot;http://www.jclarity.com/&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;link&lt;/em&gt;&lt;/a&gt; para o meu empregador, que tem um &lt;a href=&quot;http://www.jclarity.com/censum/&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;GC log analyser&lt;/em&gt;&lt;/a&gt; (analisador do log dos &lt;abbr title=&quot;Garbage Collection&quot;&gt;GC&lt;/abbr&gt;), o qual acreditamos possa ser muito útil.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3&gt;&lt;em&gt;Notas: &lt;/em&gt;&lt;/h3&gt;&lt;p&gt;&lt;a name=&quot;note1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; &lt;em&gt;hotspot&lt;/em&gt; é o nome dado à base de código comum por trás do &lt;a href=&quot;http://openjdk.java.net/&quot; target=&quot;_blank&quot;&gt;openjdk&lt;/a&gt; e da &lt;abbr title=&quot;Java Virtual Machine&quot;&gt;JVM&lt;/abbr&gt; oficial da Oracle. A partir de Java 7, o openjdk é a implementação de referência para a Java &lt;abbr title=&quot;Standard Edition&quot;&gt;SE&lt;/abbr&gt;.&lt;/p&gt;&lt;p&gt;&lt;a name=&quot;note2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; Tecnicamente o que eu descrevi acima é a “hipótese geracional fraca” cuja validação é empírica. Há também uma variante forte, que pode ser assim declarada: “o tempo médio de vida de um objeto criado na &lt;em&gt;heap&lt;/em&gt; é igual à quantidade média do meio de armazenamento disponível”. Isso na verdade pode ser provado matematicamente usando a &lt;a href=&quot;http://en.wikipedia.org/wiki/Little%27s_law&quot; target=&quot;_blank&quot;&gt;Lei de Little&lt;/a&gt; e considerando λ igual a 1. Prova muito simples!&lt;/p&gt;&lt;p&gt;&lt;a name=&quot;note3&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; Explicarei a forma como a &lt;em&gt;heap&lt;/em&gt; é organizada dentro do &lt;abbr title=&quot;Garbage First&quot;&gt;G1&lt;/abbr&gt; num artigo específico sobre o tema.&lt;/p&gt;
&lt;hr/&gt;
	    </description>
      </item>
      <item>
        <title>Instalação do JDK no Mac OS X</title>
        <link>http://ja-gaeta.github.io/2014/instalacao-do-jdk-no-mac-os-x.html</link>
        <pubDate>Ter, 30 dez 2014 00:00:00 -0200</pubDate>
        <guid isPermaLink="false">2014/instalacao-do-jdk-no-mac-os-x.html</guid>
        <description>
	        &lt;p&gt;Forneço neste artigo um passo-a-passo para instalação do JDK/JRE (Java SE 8) no Mac OS X. Para outras versões do JDK/JRE, consulte a documentação do seu sistema operacional e/ou a documentação da &lt;a href=&quot;http://docs.oracle.com/javase/8/&quot;&gt;Oracle&lt;/a&gt;, caso encontre alguma dificuldade.&lt;/p&gt;
&lt;!--more--&gt;&lt;h3&gt;1º Passo - Download&lt;/h3&gt;&lt;p&gt;Efetue o download do arquivo executável de instalação no site da Oracle, &lt;a href=&quot;http://www.oracle.com/technetwork/pt/java/javase/downloads/index.html&quot;&gt;neste link&lt;/a&gt;. Selecione &lt;em&gt;JDK Download&lt;/em&gt;. Ao instalar o JDK, o JRE correspondente também é instalado. Observe a imagem a seguir:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/BMN2Neg.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Na página seguinte, aceite o acordo de licença e selecione o arquivo correspondente (para o Mac OS X x64, no momento em que escrevo esta instrução, o arquivo do último &lt;em&gt;update&lt;/em&gt; disponível é o &lt;code&gt;jdk-8u25-macosx-x64.dmg&lt;/code&gt;. Veja a imagem seguinte:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/ocSduXR.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;h3&gt;2º Passo: Instalação&lt;/h3&gt;&lt;p&gt;Aguarde o final do download, que pode demorar um pouco, dependendo da velocidade de sua conexão com a Internet, pois o tamanho do arquivo mencionado é de 209 MB, e execute o arquivo &lt;strong&gt;dmg&lt;/strong&gt; de instalação. O processo é praticamente automático.&lt;/p&gt;&lt;h3&gt;3º Passo: Verificação&lt;/h3&gt;&lt;p&gt;Para conferir a instalação, abra um Terminal, e digite &lt;code&gt;java -version&lt;/code&gt;. Deverão ser exibidas as &lt;em&gt;strings&lt;/em&gt; de controle de versão do JRE, conforme a figura abaixo.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img style=&quot;border:1px solid #021a40;&quot; src=&quot;http://i.imgur.com/OTJxj7t.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Em seguida, digite &lt;code&gt;javac -version&lt;/code&gt;. Se tudo estiver certo, será exibida a &lt;em&gt;string&lt;/em&gt; de controle de versão do compilador Java do JDK, conforme abaixo:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img style=&quot;border:1px solid #021a40;&quot; src=&quot;http://i.imgur.com/y3mAVjM.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Parabéns, o JDK e o JRE estão devidamente instalados na sua máquina e você já pode começar a desenvolver em Java!&lt;/p&gt;
&lt;hr/&gt;
	    </description>
      </item>
      <item>
        <title>Instalação do JDK no Linux</title>
        <link>http://ja-gaeta.github.io/2014/instalacao-do-jdk-no-linux.html</link>
        <pubDate>Seg, 29 dez 2014 00:00:00 -0200</pubDate>
        <guid isPermaLink="false">2014/instalacao-do-jdk-no-linux.html</guid>
        <description>
	        &lt;p&gt;As distribuições do sistema operacional GNU/Linux costumam vir com o &lt;a href=&quot;http://openjdk.java.net/&quot; target=&quot;_blank&quot;&gt;OpenJDK&lt;/a&gt; já pré-instalado. O OpenJDK é a versão &lt;em&gt;open-source&lt;/em&gt; do JDK e nada impede usá-lo para o aprendizado da linguagem de programação Java. Aliás, o OpenJDK é, desde 2010, a implementação de referência para a linguagem Java. Todavia, como vamos usar o JDK 8 da Oracle no Curso de Java do Ponto G++, é melhor adotar esta versão, para evitar qualquer eventual incompatibilidade com os exemplos das aulas. Para entender a diferença entre o OpenJDK e o JDK da Oracle, consulte &lt;a href=&quot;/2014/oracle-jdk-vs-openjdk.html&quot;&gt;este artigo&lt;/a&gt;.&lt;/p&gt;
&lt;!--more--&gt;&lt;p&gt;Vou fornecer abaixo um passo-a-passo para instalação do JDK 8 no &lt;strong&gt;&lt;span style=&quot;color: #808080;&quot;&gt;Ubuntu&lt;/span&gt;&lt;/strong&gt; e derivados, que são as distribuições mais usadas atualmente. Quem usa &lt;strong&gt;&lt;span style=&quot;color: #808080;&quot;&gt;Archlinux&lt;/span&gt;&lt;/strong&gt; (como eu), dificilmente precisará de um tutorial para instalação de programas, pois dispõem do poderoso &lt;em&gt;Pacman&lt;/em&gt;, mas aproveito para informar que poderá instalar o JDK da Oracle a partir do repositório AUR, cujo pacote encontrará neste &lt;a href=&quot;https://aur.archlinux.org/packages/jdk&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;1º Passo - Instalação da Java SE 8 (JDK 8)&lt;/h3&gt;&lt;p&gt;Adicione o repositório &lt;code&gt;ppa webupd8team/java&lt;/code&gt; no seu sistema e instale a Java SE 8 da Oracle, usando o seguinte conjunto de comandos:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo add-apt-repository ppa:webupd8team/java
$ sudo apt-get update
$ sudo apt-get install oracle-java8-installer
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;2º Passo - Verificação da Versão do JRE Instalada&lt;/h3&gt;&lt;p&gt;Depois de instalar o JDK da Oracle seguindo o passo acima, verifique a versão do JRE instalada usando o comando &lt;code&gt;java -version&lt;/code&gt;:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/fGukY2L.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;3º Passo - Ajuste do Ambiente Java&lt;/h3&gt;&lt;p&gt;O pessoal do &lt;strong&gt;&lt;span style=&quot;color: #808080;&quot;&gt;Webupd8team&lt;/span&gt;&lt;/strong&gt; está fornecendo um pacote para ajustar as variáveis de ambiente para o JDK 8. Instale este pacote usando o comando:&lt;/p&gt;&lt;p&gt;&lt;code&gt;$ sudo apt-get install oracle-java8-set-default&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;4º Passo - Verificação da Versão do JDK Instalada&lt;/h3&gt;&lt;p&gt;Depois de fazer o ajuste do ambiente Java, conforme o passo anterior, definindo o JDK 8 como default, verifique a versão, com o comando: &lt;code&gt;javac -version&lt;/code&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/WADZfhu.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Os felizes usuários da distribuição &lt;strong&gt;&lt;span style=&quot;color: #808080;&quot;&gt;Archlinux&lt;/span&gt;&lt;/strong&gt; contam também com o &lt;em&gt;script&lt;/em&gt; &lt;code&gt;archlinux-java&lt;/code&gt;, que facilita o ajuste das variáveis de ambiente para as diversas versões do JDK instalados na máquina. Confira sua funcionalidade no &lt;em&gt;snapshot&lt;/em&gt; abaixo:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/LouzASF.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;
&lt;hr/&gt;
	    </description>
      </item>
      <item>
        <title>Instalação do JDK no Windows</title>
        <link>http://ja-gaeta.github.io/2014/instalacao-do-jdk-no-windows.html</link>
        <pubDate>Sex, 26 dez 2014 00:00:00 -0200</pubDate>
        <guid isPermaLink="false">2014/instalacao-do-jdk-no-windows.html</guid>
        <description>
	        &lt;p&gt;Forneço neste artigo um passo-a-passo para instalação do &lt;strong&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&lt;abbr title=&quot;Java Development Kit&quot;&gt;JDK&lt;/abbr&gt;/&lt;abbr title=&quot;Java Runtime Environment&quot;&gt;JRE&lt;/abbr&gt; - Java &lt;abbr title=&quot;Standard Edition&quot;&gt;SE&lt;/abbr&gt; 8&lt;/span&gt;&lt;/strong&gt; — no &lt;strong&gt;&lt;span style=&quot;color: #808080;&quot;&gt;Windows 8.1&lt;/span&gt;&lt;/strong&gt;. Para outras versões do Windows ou do &lt;abbr title=&quot;Java Development Kit&quot;&gt;JDK&lt;/abbr&gt;/&lt;abbr title=&quot;Java Runtime Environment&quot;&gt;JRE&lt;/abbr&gt;, consulte a documentação do seu sistema operacional e/ou a documentação da &lt;a href=&quot;http://docs.oracle.com/javase/8/&quot; target=&quot;_blank&quot;&gt;Oracle&lt;/a&gt;.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h3&gt;1º Passo:&lt;/h3&gt;&lt;p&gt;Efetue o download do arquivo executável de instalação no site da Oracle, neste &lt;a href=&quot;http://www.oracle.com/technetwork/pt/java/javase/downloads/index.html&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;. Selecione &quot;&lt;em&gt;JDK Download&quot;&lt;/em&gt;. Ao instalar o &lt;abbr title=&quot;Java Development Kit&quot;&gt;JDK&lt;/abbr&gt;, o &lt;abbr title=&quot;Java Runtime Environment&quot;&gt;JRE&lt;/abbr&gt; correspondente também é instalado. Veja a imagem a seguir:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/BMN2Neg.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Na página seguinte, aceite o acordo de licença e selecione o arquivo correspondente (para o Windows 8.1, no momento em que escrevo esta instrução, o arquivo do último &lt;em&gt;update &lt;/em&gt;disponível é o &lt;code&gt;jdk-8u25-windows-x64.exe&lt;/code&gt;). Veja a imagem seguinte:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/1QvtJRj.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;2º Passo:&lt;/h3&gt;&lt;p&gt;Aguarde o final do download, que pode demorar um pouco, dependendo da velocidade de sua conexão com a Internet, pois o tamanho do arquivo mencionado é de 170 MB, e execute o arquivo de instalação. O processo é praticamente automático.&lt;/p&gt;&lt;p&gt;Para conferir a instalação, abra o &lt;em&gt;Prompt de Comando&lt;/em&gt; do Windows, e digite: &lt;code&gt;java -version&lt;/code&gt;. Deverão ser exibidas as &lt;em&gt;strings&lt;/em&gt; de controle de versão do &lt;abbr title=&quot;Java Runtime Environment&quot;&gt;JRE&lt;/abbr&gt;, conforme a figura abaixo.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/zsstzjX.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;3º Passo:&lt;/h3&gt;&lt;p&gt;Vamos agora incluir o &lt;em&gt;path&lt;/em&gt; do &lt;abbr title=&quot;Java Development Kit&quot;&gt;JDK&lt;/abbr&gt; nas variáveis de ambiente. Para isso, clique com o botão direito do mouse no menu iniciar do Windows, conforme a imagem abaixo e selecione &quot;&lt;em&gt;Sistema&quot;&lt;/em&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/zSH9cB2.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Na janela seguinte, selecione &quot;&lt;em&gt;Configurações avançadas do sistema&quot;&lt;/em&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/F06oPPj.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Na próxima janela, selecione o último botão — &quot;&lt;em&gt;Variáveis de Ambiente…&quot;&lt;/em&gt;:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/c2UXY7H.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Na janela de &lt;em&gt;Variáveis de Ambiente&lt;/em&gt;, vamos incluir uma nova variável. Para isso, selecione o botão &quot;&lt;em&gt;Novo…&quot;&lt;/em&gt;, no painel inferior:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/A8KKh2Q.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Digite &quot;JAVA_HOME&quot; para nome da variável e o &lt;em&gt;path&lt;/em&gt; para o diretório onde está instalada sua versão do &lt;abbr title=&quot;Java Development Kit&quot;&gt;JDK&lt;/abbr&gt; como valor da variável; em seguida, clique no botão &quot;OK&quot;. Veja na figura seguinte a minha configuração:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/8Qvpof3.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;De volta à janela de &lt;em&gt;Variáveis de Ambiente&lt;/em&gt;, localize a variável &lt;code&gt;Path&lt;/code&gt; e clique no botão &quot;Editar&quot;.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/TmVp4yj.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Com muito cuidado para não apagar o que já está contido no valor desta variável, vá até o final da &lt;em&gt;string&lt;/em&gt;, coloque um ponto-e-vírgula (;) se ainda não existir, e acrescente a variável que criamos (JAVA_HOME), com a seguinte sintaxe: &lt;code&gt;%JAVA_HOME%\bin;&lt;/code&gt; —&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/xDpc5z3.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;4º Passo:&lt;/h3&gt;&lt;p&gt;Para finalizar, feche todas as janelas e vamos conferir a instalação. Abra o &lt;em&gt;Prompt de Comando&lt;/em&gt; do Windows e digite: &lt;code&gt;javac -version&lt;/code&gt;. Se tudo estiver certo, será exibida a &lt;em&gt;string&lt;/em&gt; de controle de versão do compilador Java do &lt;abbr title=&quot;Java Development Kit&quot;&gt;JDK&lt;/abbr&gt;, conforme abaixo:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/flWeW4A.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Parabéns, o &lt;abbr title=&quot;Java Development Kit&quot;&gt;JDK&lt;/abbr&gt; e o &lt;abbr title=&quot;Java Runtime Environment&quot;&gt;JRE&lt;/abbr&gt; estão devidamente instalados na sua máquina e você já pode começar a desenvolver em Java!&lt;/p&gt;
&lt;hr/&gt;
	    </description>
      </item>
      <item>
        <title>Java: Como Tudo Começou</title>
        <link>http://ja-gaeta.github.io/2014/java-como-tudo-comecou.html</link>
        <pubDate>Qua, 17 dez 2014 00:00:00 -0200</pubDate>
        <guid isPermaLink="false">2014/java-como-tudo-comecou.html</guid>
        <description>
	        &lt;p&gt;A história da tecnologia Java começou modestamente no final de 1990, quando a empresa Sun Microsystems&lt;a href=&quot;#note1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; encarregou seus funcionários Patrick Naughton, Mike Sheridan e James Gosling da tarefa de descobrir qual seria a próxima grande tendência na área da computação. O projeto, denominado “Green Project”, chegou à seguinte conclusão preliminar: a integração dos dispositivos controlados digitalmente com os computadores iria se tornar uma tendência muito importante.&lt;/p&gt;
&lt;!--more--&gt;&lt;p&gt;&lt;figure style=&quot;float: left; padding: 10px&quot;&gt;&lt;img src=&quot;http://i.imgur.com/ESsuxcQ.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;figcaption style=&quot;text-align: center&quot;&gt;A Equipe Green&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;&lt;p&gt;Para demonstrar isso, Naughton, Sheridan, Gosling e os demais integrantes da equipe “Green” montaram um controlador portátil interativo para dispositivos de entretenimento: o *7 (“Star 7”), um precursor dos futuros PDAs, e que já revelava o potencial da sua linguagem de programação, independente da arquitetura do processador.&lt;/p&gt;&lt;p&gt;Aquele revolucionário dispositivo remoto, conectado à rede sem fio, rodava uma versão do sistema operacional Unix e possuía uma tela sensível ao toque (&lt;em&gt;touchscreen&lt;/em&gt;) – lembre-se que estávamos em 1992 e, para se ter uma ideia do desenvolvimento da Internet naquela época, basta dizer que, no final do ano, havia apenas 26 servidores Web no mundo! A interface de usuário incluía também um assistente de ajuda: um simpático personagem de desenho animado chamado Duke, que mais tarde seria adotado como mascote da plataforma Java.&lt;/p&gt;&lt;p&gt;&lt;figure style=&quot;float: right; padding: 10px&quot;&gt;&lt;img src=&quot;http://i.imgur.com/KDJhero.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;figcaption style=&quot;text-align: center&quot;&gt;O revolucionário Star 7&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;&lt;p&gt;O Star 7 incorporava “uma nova linguagem de programação dinâmica, compacta, segura, distribuída, robusta, interpretada, incorporando &lt;em&gt;garbage collection&lt;/em&gt; e &lt;em&gt;multi-threading&lt;/em&gt;, neutra à arquitetura de &lt;em&gt;hardware&lt;/em&gt; e de alto desempenho” a fim de solucionar os vários problemas pertinentes ao desenvolvimento de programas para execução na plataforma *7. James Gosling criou a linguagem e deu-lhe o nome de “Oak”, em homenagem a um enorme carvalho que podia ser visto da janela do seu escritório.&lt;/p&gt;&lt;p&gt;O “Green Project” teve o seu grande momento de glória e surgiu a oportunidade de produzir dispositivos similares ao *7 para consumidores em potencial na indústria de TV a cabo. A “Equipe Green” mudou de nome para “&lt;em&gt;FirstPerson&lt;/em&gt;” e preparou um filme para demonstração da sua tecnologia aos produtores de transcodificadores de TV e aluguel de vídeo. Mas, infelizmente para a equipe, aqueles setores, ainda na sua infância, estavam em processo de criação de modelos de negócio viáveis. A despeito do insucesso da “&lt;em&gt;FirstPerson&lt;/em&gt;” com a TV a cabo, o tipo de configuração da sua tecnologia de rede era idêntica à configuração de rede para a Internet, que passava por um avassalador processo de popularização.&lt;/p&gt;&lt;p&gt;&lt;figure style=&quot;float: left; padding: 10px&quot;&gt;&lt;img src=&quot;http://i.imgur.com/4ntonVe.jpg&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;figcaption style=&quot;text-align: center&quot;&gt;O WebRunner&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;&lt;p&gt;A Internet usava a “&lt;em&gt;HyperText Markup Language&lt;/em&gt;” (HTML) para transportar o conteúdo de mídia – texto, vídeo, imagens, áudio, etc. – através de uma rede de dispositivos heterogêneos. De uma forma similar, Java (um nome substituto para Oak, a fim de contornar problemas de natureza legal com outra linguagem de nome idêntico) também movimentava o conteúdo de mídia através de uma rede de dispositivos heterogêneos, mas ia além: transportava também o seu “comportamento”, na forma de &lt;em&gt;applets&lt;/em&gt;. A linguagem HTML não conseguia fazer isso.&lt;/p&gt;&lt;p&gt;Para demonstrar a utilidade de Java numa Web baseada na Internet, a “&lt;em&gt;FirstPerson&lt;/em&gt;” fez um clone do navegador Mosaic e, em 1994, o navegador WebRunner (mais tarde conhecido como &lt;em&gt;HotJava&lt;/em&gt;), “deu vida, pela primeira vez, a objetos animados e a conteúdo executável dinamicamente dentro de um navegador.”&lt;/p&gt;&lt;p&gt;John Gage, diretor do Escritório de Ciências da Sun, e James Gosling, fizeram uma demonstração do WebRunner numa reunião com profissionais da Internet e da área de entretenimento no início de 1995. A plateia aplaudiu calorosamente as demonstrações de uma molécula tridimensional giratória e a animação de um algorítimo de ordenação preparado por Gosling, embutidas em páginas Web apresentadas no WebRunner. O futuro certamente havia chegado. A notícia se espalhou rapidamente, e a &lt;em&gt;FirstPerson&lt;/em&gt; disponibilizou o WebRunner para &lt;em&gt;download&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;Milhares de &lt;em&gt;downloads&lt;/em&gt; chamaram a atenção da Sun para a popularidade de Java, e ela disponibilizou uma área no seu site para divulgar essa tecnologia. Em maio de 1995, durante a abertura da feira SunWorld da Sun, o líder do projeto Netscape, Marc Andreessen, anunciou que iriam integrar Java ao novo navegador para a Web Netscape.&lt;/p&gt;
&lt;blockquote&gt;Andreessen estava no palco há menos de três minutos e, mais uma vez, uma influente audiência de técnicos e da imprensa especializada explodiu em calorosos aplausos, cientes de que estavam testemunhando o começo de uma coisa muito significativa para o futuro da Internet.
&lt;/blockquote&gt;&lt;p&gt;Na &lt;em&gt;timeline&lt;/em&gt; subsequente de Java podemos destacar:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;23/1/1996&lt;/strong&gt; – A Sun libera a versão 1.0 do JDK (&lt;em&gt;Java Development Kit&lt;/em&gt;).&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;29/5/1996&lt;/strong&gt; – Realizada a primeira conferência anual JavaOne.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;Setembro/1996&lt;/strong&gt; – 83.000 páginas da Web incorporam a tecnologia Java.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;18/2/1997&lt;/strong&gt; – A Sun libera a versão 1.1 do JDK. Provavelmente o ponto alto daquela versão tenha sido um novo modelo de manipulação de eventos.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;11/3/1997&lt;/strong&gt; – O número de downloads do JDK 1.1 atinge a marca de 220.000.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2/4/1997&lt;/strong&gt; – Tem lugar a segunda conferência JavaOne, que se torna a maior conferência mundial de desenvolvedores, reunindo cerca de 10.000 participantes.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;1998 – Inovações Futurísticas de uma Comunidade Global&lt;/strong&gt; – Os 15.000 participantes da JavaOne daquele ano usavam o &quot;Anel Java&quot;: um dispositivo móvel de segurança e transportador de dados, disfarçado na forma de um ornamento de uso pessoal. Leitores especiais nas cafeterias da conferência serviam automaticamente uma xícara de café para cada participante, adaptada para suas preferências pessoais, que estavam armazenadas no microprocessador embutido no anel. O anel era capaz de executar múltiplos &lt;em&gt;applets&lt;/em&gt; Java que podiam ser carregados dinamicamente, para cumprir inúmeras tarefas: efetuar o &lt;em&gt;login&lt;/em&gt; num computador, sacar dinheiro de um caixa eletrônico, dar partida num carro, ou efetuar troca de dados para contato com um parceiro comercial – demonstrando, assim, ao vivo e a cores, todo o potencial da tecnologia Java.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;1999 – Focando nas Oportunidades do Mercado&lt;/strong&gt; – A Sun anuncia uma redefinição da arquitetura da plataforma Java, tornando-a mais simples para os desenvolvedores de software, provedores de serviços e fabricantes de dispositivos, visando atingir mercados específicos. Com a introdução da plataforma Java 2, &lt;em&gt;Standard Edition&lt;/em&gt; (J2SE) para &lt;em&gt;desktops&lt;/em&gt; e estações de trabalho; plataforma Java 2, &lt;em&gt;Enterprise Edition&lt;/em&gt; (J2EE) para sistemas de servidores peso-pesados; e a plataforma Java 2, &lt;em&gt;Micro Edition&lt;/em&gt; (J2ME) para dispositivos portáteis, era fácil agora investir na plataforma Java numa crescente gama de oportunidades.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2000 – A Tecnologia Mudando nossa Rotina Diária&lt;/strong&gt; – Nos cinco anos desde que foi anunciada, a tecnologia Java progrediu de uma ferramenta para animar páginas da Web para a plataforma ponta-a-ponta Java 2, espalhando-se desde &lt;em&gt;smartcards&lt;/em&gt; e pequenos dispositivos até os grandes servidores dos &lt;em&gt;Datacenters&lt;/em&gt; empresariais. A variedade de produtos alavancando a tecnologia Java é vasta e inclui caixas eletrônicos, &lt;em&gt;pagers&lt;/em&gt;, celulares, agendas eletrônicas, máquinas de jogos, câmeras, controladores industriais, máquinas automáticas de venda, &lt;em&gt;desktops&lt;/em&gt;, servidores, e muito mais. Na conferência de desenvolvedores JavaOne, o co-fundador e Presidente da Apple, Steve Jobs, juntou-se a Scott McNealy no palco, para anunciar que a Apple, a partir de então, iria incluir Java 2 &lt;em&gt;Standard Edition&lt;/em&gt; em cada versão do seu novo Sistema Operacional OS X.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2001 – Uma Comunidade Poderosa Molda o Futuro&lt;/strong&gt; – Cada vez mais clientes, parceiros e a indústria em geral passam a exigir suporte para a plataforma Java 2, &lt;em&gt;Enterprise Edition &lt;/em&gt;(J2EE), e a Sun reune-se com os membros do &lt;em&gt;Java Community Process&lt;/em&gt; (JCP), para definir uma nova versão daquela edição, que integrasse suporte nativo para importantes tecnologias de serviços da Web. Na conferência de desenvolvedores JavaOne daquele ano, a Sony Computer Entertainment, anunciou que iria integrar a plataforma Java no sistema de entretenimento PlayStation 2, ampliando sua capacidade de fazer download da Internet de novos aplicativos e serviços dinamicamente e com segurança.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2002 – Java em Tempo Real&lt;/strong&gt; – Uma das atrações principais da JavaOne foi uma luta de sumô entre duas tecnologias Java – robôs motorizados demonstraram seu poder em tempo real. Com um robô controlado por dispositivos embutidos integrados com celulares rodando Java numa arquitetura de serviços Web de ponta-a-ponta e o outro controlado por James Gosling, vice-presidente da Sun — as lutas terminaram empatadas. Mas a demonstração ilustrou que Java podia ser aplicada em todo o processo, a partir do banco de dados, passando por um servidor de aplicativos, serviços Web, conectividade sem fio, até a plataforma Java 2, &lt;em&gt;Micro Edition&lt;/em&gt; (J2ME) em tempo real e interfaceando com a realidade ao mesmo tempo em que se adaptava a uma enorme variedade de clientes.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2003 – Computação Remota: dos Desktops à Lua&lt;/strong&gt; – Durante sua palestra na Feira Comercial Comdex, o presidente da Sun, Scott McNealy, falou sobre as vantagens de um Cartão Java, demonstrando para uma multidão de profissionais de TI como um sistema &lt;em&gt;Sun Ray&lt;/em&gt;, usando a tecnologia do Cartão Java, permitia a um usuário acessar com segurança uma sessão remota num servidor. Milhares de oficiais do Departamento de Defesa dos EUA já usavam Cartões Java para autenticação, e a Bélgica estava montando um sistema de identificação nacional com base nessa tecnologia.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2004 – Olhando para o Futuro em Aberto&lt;/strong&gt; – O grande debate na JavaOne daquele ano era se Java deveria ter seu código aberto, seguindo a tendência &lt;em&gt;open-source&lt;/em&gt; que despontava. Até então, a Sun exigia que projetos oficialmente baseados em Java fossem certificados como compatíveis com as especificações Java e quaisquer modificações precisavam passar pelos procedimentos do &lt;em&gt;Java Community Process&lt;/em&gt; (JCP). Durante um painel de discussões na JavaOne, representantes da IBM e da Apache Software Foundation, endossaram um modelo &lt;em&gt;open source&lt;/em&gt; para Java, enquanto seu criador e sócio da Sun, James Gosling, juntamente com o vice-presidente da Sun, Rob Gingell e o analista da Red Monk, James Governor, se opuseram a isso. Gosling alertava que permitir múltiplas implementações de código aberto das tecnologias Java poderia levar às mesmas incompatibilidades que ocorreram no Unix e estavam acontecendo novamente com as distribuições Linux, ressaltando que: “&lt;em&gt;Eles na verdade são sistemas fechados e quase intercambiáveis, mas possuem diferenças suficientes para nos dar um belo chute no traseiro.&lt;/em&gt;”&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2005 – De Animação na Web a Potência Mundial&lt;/strong&gt; – Java celebrou seu décimo aniversário com estrondorosas comemorações na conferência JavaOne e na sede da Sun. Estimava-se que Java rendia naquela ocasião mais de US$ 100 bilhões por ano, contando com mais de 4,5 milhões de desenvolvedores ao redor do mundo; havia cerca de 2,5 bilhões de dispositivos Java habilitados, e 1 bilhão de &lt;em&gt;smartcards&lt;/em&gt; baseados nessa tecnologia.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2006 – Java com Código Aberto&lt;/strong&gt; – A Sun Microsystems libera Java para desenvolvimento em código-aberto, sob licença GPL, a mesma do Linux. Foram oferecidas gratuitamente todas as três versões de Java: Plataforma Java, &lt;em&gt;Standard Edition&lt;/em&gt; (Java SE), para o desenvolvimento de aplicativos para &lt;em&gt;Desktops&lt;/em&gt;; &lt;em&gt;Enterprise Edition&lt;/em&gt; (Java EE), usada para criar aplicativos do lado do servidor; e &lt;em&gt;Micro Edition&lt;/em&gt; (Java ME), para dispositivos portáteis.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2007 – Facilitando o Desenvolvimento de Aplicativos Enriquecidos para a Internet (RIA – &lt;em&gt;Rich Internet Applications&lt;/em&gt;)&lt;/strong&gt; – Na conferência de desenvolvedores JavaOne a Sun anuncia o JavaFX, uma nova família de produtos com tecnologia Java, projetado para facilitar o desenvolvimento de sites Web enriquecidos e aplicativos Java para uma enorme gama de aparelhos.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2008 – Elevando a Interatividade para o Patamar Seguinte com o Blu-Ray&lt;/strong&gt; – O ídolo do rock Neil Young subiu ao palco da JavaOne para anunciar que seus arquivos musicais, ansiosamente aguardados pelos fãs, seriam lançados em disco Blu-Ray, usando tecnologia Java. O primeiro volume de 10 discos dos arquivos de Young incluía canções, vídeos, clipes, áudios raros de entrevistas, fotos, coberturas da imprensa, manuscritos de letras musicais, biografias, roteiros de turnês, e muito mais. Com a tecnologia de navegação baseada em Java, os usuários podiam percorrer as recordações visuais enquanto escutavam canções ou entrevistas e baixavam mais conteúdo diretamente para os discos Blu-Ray, assim que era disponibilizado.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2009 – Olhando Adiante para um Novo Capítulo&lt;/strong&gt; – Com a anunciada aquisição da Sun pela Oracle, a abertura da conferência de desenvolvedores JavaOne reuniu no palco os presidentes da Sun, Scott McNealy, e da Oracle, Larry Ellison. “O software básico da Oracle é 100% Java”, disse Ellison. “Java sempre foi uma plataforma muito atraente para nós porque é aberta, permitindo-nos ampliá-la”, prosseguiu, e acrescentou que a Sun e seu vice-presidente e criador de Java, James Gosling, fizeram um trabalho fantástico inventando, expandindo e abrindo o código dessa incrível tecnologia, entregando-a ao mundo. “Olhando para frente”, disse ele, “podemos esperar investimentos crescentes da fusão Oracle-Sun com uma expansão de toda a comunidade, e estamos muito animados com isso.”&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2010 – Evolução da Plataforma Java&lt;/strong&gt; – As Solicitações de Especificação Java (JSR – &lt;em&gt;Java Specification Requests&lt;/em&gt;) para os dois próximos lançamentos da plataforma Java – JSR-336 e JSR-337 – são formalmente aprovadas por esmagadora maioria de votos do Comitê Executivo do &lt;em&gt;Java Community Process&lt;/em&gt; (JCP). A partir de então, o padrão Java iria progredir através do JCP, enquanto a implementação de referência &lt;em&gt;open-source&lt;/em&gt; seria conduzida pelo projeto OpenJDK. O plano, que incluía as contribuições da comunidade com o aval do Comitê Executivo do JCP, buscaria a padronização dessas tecnologias na Java SE 7, ao longo de 2011.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2011 – Levando Java Adiante&lt;/strong&gt; – O &lt;em&gt;Java Community Process&lt;/em&gt; realizou uma eleição especial para preencher três cadeiras do Comitê Executivo da Java SE/Java EE, e duas delas foram para Grupos de Usuários Java (JUG – &lt;em&gt;Java User Groups&lt;/em&gt;): o &lt;em&gt;Java London Community&lt;/em&gt; e o &lt;em&gt;SouJava&lt;/em&gt;, um JUG brasileiro, sendo ambas as nomeações homologadas pela Oracle. Esta é a primeira vez que Grupos de Usuários Java fazem parte deste comitê de liderança.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2012 – Java 7 entra em cena&lt;/strong&gt; – Com o nome-código de &lt;em&gt;Dolphin&lt;/em&gt; esta importante atualização foi lançada em 7 de julho de 2011 e disponibilizada para os desenvolvedores no dia 28 daquele mês. O período de desenvolvimento foi organizado em treze metas (&lt;em&gt;milestones&lt;/em&gt;); em 6 de junho de 2011, a última das treze metas foi atingida. Em média, 8 &lt;em&gt;builds&lt;/em&gt; (que geralmente incluiam melhoramentos e correção de &lt;em&gt;bugs&lt;/em&gt;) foram lançados em cada meta. A partir de abril de 2012, Java 7 passou a ser a versão &lt;em&gt;default&lt;/em&gt; para download no site oficial da Oracle. Em agosto de 2012, o JavaFX e Java Access Bridge passaram a integrar a instalação de Java SE JDK e JRE; suporte da JavaFX para monitores &lt;em&gt;touch-screen&lt;/em&gt; e &lt;em&gt;touch-pads&lt;/em&gt;; suporte de JavaFX para Linux e suporte de JDK/JRE para Mac OS X e Linux em ARM.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2013 – Melhorando a Segurança&lt;/strong&gt; – Implementadas correções de &lt;em&gt;bugs&lt;/em&gt; para problemas com registro de &lt;em&gt;plugin&lt;/em&gt; em sistemas com versão &lt;em&gt;stand-alone&lt;/em&gt; da JavaFX instalada; o nível de segurança &lt;em&gt;default&lt;/em&gt; para os &lt;em&gt;applets&lt;/em&gt; Java e inicialização de aplicativos web foi aumentado de &quot;&lt;em&gt;Medium&lt;/em&gt;&quot; para &quot;&lt;em&gt;High&lt;/em&gt;&quot;. No decorrer de 2013, cerca de 200 correções de &lt;em&gt;bugs&lt;/em&gt; foram implementadas, além de diversos melhoramentos e suporte.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;2014 – Modernizando Java&lt;/strong&gt; – Java 8 foi lançada em 18 de março de 2014 e incluiu alguns recursos que estavam previstos para Java 7, mas demoraram para ser aprovados. O trabalho das implementações foi organizado sob a forma de &lt;em&gt;JDK Enhancement Proposals&lt;/em&gt; (JEP), sendo as principais: suporte em nível de liguagem para &lt;em&gt;expressões lambda&lt;/em&gt; (oficialmente, &lt;em&gt;expressões lambda&lt;/em&gt;; extra-oficialmente, &lt;em&gt;closures&lt;/em&gt;) coordenadas pelo Projeto Lambda, e métodos &lt;em&gt;default &lt;/em&gt;que tornam possível implementar herança múltipla em Java. Houve um grande debate na comunidade sobre a possibilidade de adicionar suporte para expressões lambda e, finalmente, a Sun confirmou que elas seriam incluídas em Java e pediu o &lt;em&gt;feedback&lt;/em&gt; da comunidade para refinar o recurso. O suporte de &lt;em&gt;expressões lambda&lt;/em&gt; também permite executar operações de estilo funcional em &lt;em&gt;streams&lt;/em&gt; de elementos, tais como transformações &lt;em&gt;Map Reduce&lt;/em&gt; em &lt;em&gt;collections&lt;/em&gt;. Métodos &lt;em&gt;default&lt;/em&gt; permitem que um autor de API acrescente novos métodos a uma interface sem quebrar o antigo código ao usá-los. Fornece, também, um meio para usar herança múltipla, ou melhor, herança múltipla da implementação. A partir de outubro de 2014, Java 8 se tornou a versão &lt;em&gt;default&lt;/em&gt; para download no repositório oficial.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;O futuro vem aí...&lt;/strong&gt; – Na conferência JavaOne de 2011 foram discutidas as funcionalidades que se esperava ver incluídas numa eventual liberação de Java 9 em 2016, incluindo melhor suporte para pilhas (&lt;em&gt;heaps&lt;/em&gt;) multi-gigabyte, melhor integração de código nativo e auto-ajuste da JVM. Outros avanços seriam a modularização da JDK (&lt;em&gt;Java Module System&lt;/em&gt;), coordenada no Projeto Jigsaw; API para finanças e moeda; e, por fim, existem planos para acrescentar paralelização automática, usando a OpenCL.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;...e para quem gosta de especular...&lt;/strong&gt; – Cogita-se a introdução de objetos sem identidade (&lt;em&gt;value types&lt;/em&gt;), bem como a progressão para &lt;em&gt;arrays&lt;/em&gt; de 64-bits a fim de suportar grandes &lt;em&gt;data sets&lt;/em&gt; por volta de 2018. Haverá, ainda, uma edição limitada em versão beta, (que seria a futura versão de Java 11), na qual Java seria capaz de endereçar arrays de 128-bits.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h3&gt;Bibliografia:&lt;/h3&gt;
&lt;ol&gt;
	&lt;li&gt;&lt;a href=&quot;http://oracle.com.edgesuite.net/timeline/java/&quot;&gt;Java Timeline&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.santarosa.edu/~dpearson/mirrored_pages/java.sun.com/Java_Technology_-_An_early_history.pdf&quot;&gt;Java Technology: An Early History, by Jon Byous&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Java_version_history&quot;&gt;Java Version History – Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;&lt;p&gt;&lt;a name=&quot;note1&quot;&gt;[1]&lt;/a&gt; A &lt;strong&gt;Sun Microsystems&lt;/strong&gt; era originalmente uma empresa fabricante de computadores, semicondutores e &lt;em&gt;software&lt;/em&gt;, com sede em Santa Clara, no famoso &lt;em&gt;Silicon Valley&lt;/em&gt;, na Califórnia. Foi fundada em 24/2/1982 e adquirida pela Oracle Corporation em 2009. (&lt;a href=&quot;http://en.wikipedia.org/wiki/Sun_Microsystems&quot; target=&quot;_blank&quot;&gt;Wikipedia&lt;/a&gt;).&lt;/p&gt;
	    </description>
      </item>
      <item>
        <title>Java & Raspberry Pi - Parte 3</title>
        <link>http://ja-gaeta.github.io/2014/java-e-raspberry-pi-parte-3.html</link>
        <pubDate>Ter, 2 dez 2014 00:00:00 -0200</pubDate>
        <guid isPermaLink="false">2014/java-e-raspberry-pi-parte-3.html</guid>
        <description>
	        &lt;p&gt;Para operar seu Raspberry Pi remotamente, é preciso saber o seu endereço IP — isso é basicamente como se fosse o endereço onde ele reside e permite que o computador hospedeiro o encontre na rêde. Em condições padrão, o roteador fornece automaticamente um endereço IP ao Raspberry Pi (chamado IP dinâmico e representado pela sigla DHCP), quando você o conecta à rêde. Todavia, isso pode mudar sempre que você remover o Pi da rêde.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/TagxKLn&quot;&gt;&lt;img src=&quot;http://i.imgur.com/TagxKLn.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Dando um endereço IP estático ao Raspberry Pi&lt;/h3&gt;&lt;p&gt;Possuir um endereço estático não é essencial, mas tornará a repetição de acesso ao Raspberry Pi através do SSH muito mais simples, uma vez que você poderá confiar que ele terá sempre o mesmo endereço. Imagine o trabalho que o carteiro teria se sua casa mudasse constantemente de localização.&lt;/p&gt;&lt;p&gt;Este tutorial presume que você tem a versão oficial do &lt;strong&gt;Sistema Operacional Raspian&lt;/strong&gt; instalada, disponível na distribuição NOOBS conforme ensinei no meu &lt;a href=&quot;/2014/java-e-raspberry-pi-parte-2.html&quot;&gt;artigo anterior&lt;/a&gt;. Presume-se, também, que a conexão com o Pi seja numa rêde via &lt;em&gt;ethernet&lt;/em&gt;. Caso você, como eu, pretenda se conectar ao Pi remotamente na maior parte do tempo, sugiro que o instale próximo ao roteador e utilize a porta &lt;em&gt;ethernet&lt;/em&gt; para acesso à Internet, usufruindo assim da velocidade máxima de sua conexão.&lt;/p&gt;
&lt;hr/&gt;&lt;h4&gt;A. Verificando a Configuração&lt;/h4&gt;&lt;p&gt;Depois do &lt;em&gt;login&lt;/em&gt; no Pi, precisamos listar a interface de rêde que temos disponível no momento. Digite o comando:&lt;/p&gt;&lt;p&gt;&lt;code&gt;cat /etc/network/interfaces&lt;/code&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/rYazLRf&quot;&gt;&lt;img src=&quot;http://i.imgur.com/rYazLRf.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A linha&lt;/p&gt;&lt;p&gt;&lt;code&gt;iface eth0 inet dhcp&lt;/code&gt;&lt;/p&gt;&lt;p&gt;...quer dizer que, no momento, estamos obtendo o endereço IP via DHCP, ou seja, que ele está sendo registrado dinamicamente pelo roteador. E é exatamente isso que queremos mudar.&lt;/p&gt;
&lt;hr/&gt;&lt;h4&gt;B. Coletando Informações&lt;/h4&gt;&lt;p&gt;A primeira coisa que precisamos fazer é coletar algumas informações do nosso roteador e do Pi. Há um par de comandos que devemos executar para obter essas informações. Tenha lápis e papel à mão...&lt;/p&gt;&lt;p&gt;&lt;code&gt;ifconfig&lt;/code&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/IjpcPG2&quot;&gt;&lt;img src=&quot;http://i.imgur.com/IjpcPG2.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Esse comando exibe a informação do seu roteador, e a parte que precisamos é o que vem depois de &lt;code&gt;eth0&lt;/code&gt; (a conexão ethernet)...&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;eth0    Link encap:Ethernet  HWaddr b8:27:eb:b3:fc:2c
inet addr:192.168.1.81   Bcast:192.168.1.255   Mask:255.255.255.0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Anote as seguintes informações, substituindo-as, evidentemente, pelos resultados que você obtiver na sua máquina:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;inet addr - 192.168.1.81 (Endereço IP atual do Pi)
Bcast –  192.168.1.255 (O intervalo IP de transmissão)
Mask –  255.255.255.0 (Endereço da máscara de sub-rêde)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Precisamos de um pouco mais de informação antes de continuar. Use o comando:&lt;/p&gt;&lt;p&gt;&lt;code&gt;netstat -nr&lt;/code&gt;&lt;/p&gt;&lt;p&gt;(o comando &lt;code&gt;route -n&lt;/code&gt; dá o mesmo resultado):&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/eXObbdT&quot;&gt;&lt;img src=&quot;http://i.imgur.com/eXObbdT.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;As informações que precisamos são:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#39;Gateway&amp;#39; – 192.168.1.254
&amp;#39;Destination&amp;#39; – 192.168.1.0
&lt;/code&gt;&lt;/pre&gt;
&lt;hr/&gt;&lt;h4&gt;C. Editando a Configuração da Rêde&lt;/h4&gt;&lt;p&gt;Vamos precisar agora inserir essas informações no arquivo de configuração de rêde do Pi usando um editor de texto. Vamos usar o &lt;strong&gt;nano&lt;/strong&gt;, mas fique à vontade se você é um daqueles &quot;vi-maníacos&quot;: tem uma versão dele no Raspian...&lt;/p&gt;&lt;p&gt;&lt;code&gt;sudo nano /etc/network/interfaces&lt;/code&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/wQqntKK&quot;&gt;&lt;img src=&quot;http://i.imgur.com/wQqntKK.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Basta mudar a linha onde se lê:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;iface eth0 inet dhcp
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;para&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;iface eth0 inet static
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Então, imediatamente abaixo desta linha, digite o seguinte: &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;address 192.168.1.81
netmask 255.255.255.0
network 192.168.1.0
broadcast 192.168.1.255
gateway 192.168.1.254
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;background-color: #FFFF00&quot;&gt;&lt;strong&gt;Atenção:&lt;/strong&gt; você deve usar os seus próprios endereços, obtidos na Parte B acima.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Para deixar tudo bem claro, cada item significa o seguinte:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;address -&lt;/strong&gt; O endereço que você quer dar ao Pi, o qual poderá ser qualquer IP dentro do alcance da rêde, mas normalmente aconselha-se escolher números mais altos ao invés de mais baixos, para não correr o risco de alocar dispositivos diferentes ao mesmo IP! Escolhemos aqui 192.168.1.81, pois já estávamos registrados nesse endereço (de acordo com o &lt;code&gt;inet addr&lt;/code&gt;), mas poderia ser qualquer endereço no limite de 192.168.1.1 até 192.168.1.255.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;netmask -&lt;/strong&gt; O endereço da &lt;code&gt;Mask&lt;/code&gt; que anotamos antes.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;network -&lt;/strong&gt; O endereço IP do roteador, que é o endereço &lt;code&gt;Destination&lt;/code&gt; obtido anteriormente.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;broadcast -&lt;/strong&gt; O endereço &lt;code&gt;Bcast&lt;/code&gt; que também anotamos acima.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;gateway -&lt;/strong&gt; Este é o endereço do &lt;code&gt;Gateway&lt;/code&gt;, obtido da mesma forma.&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/uqKwwbE&quot;&gt;&lt;img src=&quot;http://i.imgur.com/uqKwwbE.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Devemos ficar com um texto parecido com o exibido acima, diferindo apenas os valores, que serão os seus próprios! Lembre-se de salvar &lt;kbd&gt;Ctrl-O&lt;/kbd&gt;, antes de sair &lt;kbd&gt;Ctrl-X&lt;/kbd&gt;.&lt;/p&gt;
&lt;hr/&gt;&lt;h4&gt;D. Conferindo a Configuração Estática&lt;/h4&gt;&lt;p&gt;Precisamos reiniciar para verificar as mudanças...&lt;/p&gt;&lt;p&gt;&lt;code&gt;sudo reboot&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Registre-se novamente e execute...&lt;/p&gt;&lt;p&gt;&lt;code&gt;ifconfig&lt;/code&gt;&lt;/p&gt;&lt;p&gt;...o qual deve mostrar suas novas configurações:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/23tYKVB&quot;&gt;&lt;img src=&quot;http://i.imgur.com/23tYKVB.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Para confirmar que tudo está funcionando como deveria, &lt;em&gt;ping&lt;/em&gt; o endereço do seu &apos;Gateway&apos;...&lt;/p&gt;&lt;p&gt;&lt;code&gt;ping 192.168.1.254 -c 10&lt;/code&gt;&lt;/p&gt;&lt;p&gt;(o argumento &lt;code&gt;-c 10&lt;/code&gt; apenas indica que você quer &lt;em&gt;pingar&lt;/em&gt; 10 vezes. Se esquecer de colocar essa opção, ficará &quot;pingando&quot; aquele endereço continuamente. Se isso acontecer, o &lt;em&gt;ping&lt;/em&gt; pode ser parado com &lt;kbd&gt;Ctrl-C&lt;/kbd&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/cG7mShp&quot;&gt;&lt;img src=&quot;http://i.imgur.com/cG7mShp.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;O &lt;em&gt;ping&lt;/em&gt; deve ser bem sucedido e todos os pacotes recebidos. Se alguma coisa não correr bem, verifique novamente todos os seus endereços IP e assegure-se de estar dando &lt;em&gt;ping&lt;/em&gt; no endereço certo. Lembre-se que você sempre poderá voltar ao DHCP revertendo esses passos. O endereço &apos;network&apos; do roteador às vezes é um pouco complicado, de forma que é bom verificar se está apresentando problemas.&lt;/p&gt;&lt;p&gt;Espero, no entanto, que seu Raspberry Pi esteja configurado agora com um endereço IP estático, como o meu.&lt;/p&gt;&lt;h3&gt;Verificando a Instalação do JDK/JRE&lt;/h3&gt;&lt;p&gt;Vamos conectar o Pi remotamente, com o comando:&lt;/p&gt;&lt;p&gt;&lt;code&gt;ssh 192.168.1.150 -l pi&lt;/code&gt;&lt;/p&gt;&lt;p&gt;(use o seu endereço IP e substitua &lt;strong&gt;pi&lt;/strong&gt; se modificou o nome do usuário)&lt;/p&gt;&lt;p&gt;...digite a senha:&lt;/p&gt;&lt;p&gt;&lt;code&gt;raspberry&lt;/code&gt;&lt;/p&gt;&lt;p&gt;(se também não mudou).&lt;/p&gt;&lt;p&gt;Aproveitando a conexão remota com o Pi, podemos confirmar se o JDK/JRE já estão instalados no sistema, com os comandos:&lt;/p&gt;&lt;p&gt;&lt;code&gt;java -version&lt;/code&gt; (JRE)&lt;br/&gt;&lt;code&gt;javac -version&lt;/code&gt; (JDK)&lt;/p&gt;&lt;p&gt;A tela abaixo mostra o resultado no meu Raspberry Pi, significando que está tudo pronto para seguir adiante!&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/ni3kQMD&quot;&gt;&lt;img src=&quot;http://i.imgur.com/ni3kQMD.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;SSH no Windows&lt;/h3&gt;&lt;p&gt;Nos exemplos acima, usamos o SO Linux, usando o Terminal e a linha de comando. No Windows, um bom cliente para SSH é o PuTTY. Nesse caso, os dados para a conexão são inseridos numa caixa de diálogo, como na imagem a seguir:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/1c83wfL&quot;&gt;&lt;img src=&quot;http://i.imgur.com/1c83wfL.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Uma vez estabelecida a conexão, abre-se uma janela emulando um terminal, onde se procede o &lt;em&gt;login&lt;/em&gt; normalmente, conforme abaixo:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/lHrYQW3&quot;&gt;&lt;img src=&quot;http://i.imgur.com/lHrYQW3.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Acessando o Pi Remotamente, em Modo Gráfico&lt;/h3&gt;&lt;p&gt;Para acessar nosso Pi remotamente no modo gráfico vamos precisar instalar nele um servidor VNC (&lt;em&gt;Virtual Network Computing&lt;/em&gt;), que é um protocolo específico para possibilitar interfaces gráficas remotas. Recomendo instalar o &lt;em&gt;tightvncserver&lt;/em&gt;, bem leve, na medida certa para o Raspberry Pi. Basta, no Pi, digitar o comando:&lt;/p&gt;&lt;p&gt;&lt;code&gt;sudo apt-get install tightvncserver&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Depois de instalá-lo, o servidor pode ser inicializado com o comando:&lt;/p&gt;&lt;p&gt;&lt;code&gt;vncserver :0 -geometry 1920x1080 -depth 24&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Será solicitada uma senha, que você deve anotar com cuidado, pois vai ser necessária na conexão do cliente. Para maiores esclarecimentos, consulte as páginas &lt;code&gt;man&lt;/code&gt; de &lt;em&gt;vncserver&lt;/em&gt; e &lt;em&gt;xtightvnc&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;Como cliente, no Linux, eu uso o &lt;em&gt;tigervnc&lt;/em&gt;, que é uma versão de código-aberto do &lt;em&gt;TightVNC&lt;/em&gt;. Para o Windows, podemos usar o próprio &lt;em&gt;TightVNC&lt;/em&gt;, cuja caixa de diálogo para a conexão, idêntica à do &lt;em&gt;tigervnc&lt;/em&gt; do Linux é a seguinte:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/fVAUYb9&quot;&gt;&lt;img src=&quot;http://i.imgur.com/fVAUYb9.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Uma vez estabelecida a conexão, abre-se a janela com a interface gráfica que configuramos no Pi, com resolução de 1920x1080:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/hMJbH0V&quot;&gt;&lt;img src=&quot;http://i.imgur.com/hMJbH0V.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Vamos deixar para o &lt;a href=&quot;/eletronica/java-raspberry-pi-parte-4/&quot;&gt;próximo artigo&lt;/a&gt; a instalação e teste do BlueJ no nosso Raspberry Pi, que agora já está devidamente pronto para recebê-lo com todas as honras.&lt;/p&gt;
&lt;hr/&gt;
	    </description>
      </item>
      <item>
        <title>Oracle JDK vs OpenJDK</title>
        <link>http://ja-gaeta.github.io/2014/oracle-jdk-vs-openjdk.html</link>
        <pubDate>Dom, 30 nov 2014 00:00:00 -0200</pubDate>
        <guid isPermaLink="false">2014/oracle-jdk-vs-openjdk.html</guid>
        <description>
	        &lt;p&gt;O OpenJDK é a implementação de código-aberto (open-source) do JDK. Atualmente, quase não há diferença entre a versão SE da Oracle e o OpenJDK, uma vez que a Oracle decidiu adotar este último como referência para implementação do JDK.&lt;/p&gt;&lt;p&gt;Traduzo, a seguir, o trecho deste &lt;a href=&quot;http://blogs.oracle.com/henrik/entry/java_7_questions_answers&quot;&gt;blog oficial&lt;/a&gt; da Oracle, que esclarece as diferenças entre as duas implementações:&lt;/p&gt;
&lt;!--more--&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pergunta:&lt;/strong&gt; Qual é a diferença entre o código-fonte encontrado no repositório do OpenJDK e o código que vocês usam para implementar o JDK da Oracle?&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Resposta:&lt;/strong&gt; São muito parecidas — nosso processo de implementação das edições do JDK da Oracle são elaboradas em cima do OpenJDK acrescentando apenas uma ou outra peça, tal como o código para distribuição, que inclui a implementação da Oracle do &lt;em&gt;Plugin Java&lt;/em&gt; e da &lt;em&gt;Java WebStart&lt;/em&gt;, bem como alguns componentes de código proprietário de terceiros, como o &lt;em&gt;Rhino&lt;/em&gt;, e mais algumas outras coisinhas aqui e ali, tais como documentação adicional ou fontes de terceiros. Olhando mais além, nossa intenção será abrir todas as peças do JDK da Oracle, exceto aquilo que consideramos características comerciais, a exemplo do &lt;em&gt;JRockit Mission Control&lt;/em&gt; (ainda não disponível no JDK da Oracle), e substituir componentes sobrecarregados de terceiros com alternativas de código aberto para alcançar uma paridade mais próxima entre as bases de código.&lt;/p&gt;&lt;p&gt;Dependendo da versão usada, a VM (Máquina Virtual) pode diferir. Consulte esta tabela: &lt;a href=&quot;https://gist.github.com/rednaxelafx/925323&quot;&gt;Correspondência entre o JDK da Sun/Oracle, OpenJDK e versões da HotSpot VM&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img alt=&quot;java-logo&quot; src=&quot;http://i.imgur.com/b2JsnbI.jpg&quot; width=&quot;256&quot; height=&quot;256&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;
&lt;hr/&gt;
	    </description>
      </item>
      <item>
        <title>Java & Raspberry Pi - Parte 2</title>
        <link>http://ja-gaeta.github.io/2014/java-e-raspberry-pi-parte-2.html</link>
        <pubDate>Sáb, 29 nov 2014 00:00:00 -0200</pubDate>
        <guid isPermaLink="false">2014/java-e-raspberry-pi-parte-2.html</guid>
        <description>
	        &lt;p&gt;O sistema operacional do Raspberry Pi é armazenado num cartão de memória &lt;abbr title=&quot;Secure Digital Card&quot;&gt;SD&lt;/abbr&gt;. Para a instalação que vou fazer, usando o &lt;abbr title=&quot;New Out Of the Box Software&quot;&gt;NOOBS&lt;/abbr&gt;, o tamanho mínimo é de 8 GB. Se for um micro-&lt;abbr title=&quot;Secure Digital Card&quot;&gt;SD&lt;/abbr&gt;, talvez seja preciso também um adaptador, que normalmente vem junto, mas é bom conferir, pois, conforme o modelo, o &lt;em&gt;slot&lt;/em&gt; do Raspberry pode suportar apenas &lt;abbr title=&quot;Secure Digital Card&quot;&gt;SD&lt;/abbr&gt; de tamanho padrão. A classe não importa muito, podendo partir da 4, pois a diferença de desempenho entre um cartão classe 4 e um classe 10 é praticamente imperceptível.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/HgZqjfT&quot;&gt;&lt;img src=&quot;http://i.imgur.com/HgZqjfT.jpg&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Baixe o &lt;abbr title=&quot;New Out Of the Box Software&quot;&gt;NOOBS&lt;/abbr&gt;&lt;/h3&gt;&lt;p&gt;A primeira coisa a fazer é gravar uma imagem do Sistema Operacional no cartão de memória &lt;abbr title=&quot;Secure Digital Card&quot;&gt;SD&lt;/abbr&gt;. Atualmente esse procedimento é uma barbada, pois podemos contar com um gerenciador para instalação do sistema operacional especificamente desenvolvido para o Raspberry Pi: o NOOBS (&lt;em&gt;New Out Of the Box Software&lt;/em&gt; - “Novo Software Pronto para Uso”), que pode ser baixado &lt;a href=&quot;http://www.raspberrypi.org/downloads/&quot; target=&quot;_blank&quot;&gt;aqui&lt;/a&gt;. Uma vez concluído o &lt;em&gt;download&lt;/em&gt;, descompacte-o numa pasta temporária.&lt;/p&gt;
&lt;h3&gt;Formate o cartão &lt;abbr title=&quot;Secure Digital Card&quot;&gt;SD&lt;/abbr&gt;&lt;/h3&gt;&lt;p&gt;A próxima coisa a fazer é formatar o cartão. No Windows e Mac, o programa &lt;em&gt;SD Formatter &lt;/em&gt;simplifica muito essa tarefa. No Linux o programa mais recomendado é o &lt;a href=&quot;http://gparted.org/&quot; target=&quot;_blank&quot;&gt;gparted&lt;/a&gt; ou, para quem gosta de trabalhar na linha de comando, o &lt;a href=&quot;http://www.gnu.org/software/parted/manual/html_chapter/parted_2.html&quot; target=&quot;_blank&quot;&gt;parted&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Na página da &lt;a href=&quot;http://www.sdcard.org/home/&quot;&gt;SD Association&lt;/a&gt; pode ser baixado o programa &lt;a href=&quot;http://www.sdcard.org/downloads/formatter_4/&quot;&gt;SD Formatter 4.0&lt;/a&gt;. O programa de instalação vem compactado. Após extraí-lo num diretório temporário, é só executá-lo e seguir os passos do instalador.&lt;/p&gt;
&lt;h3&gt;Cópia dos arquivos do NOOBS para o cartão SD&lt;/h3&gt;&lt;p&gt;Agora é só arrastar os arquivos do &lt;abbr title=&quot;New Out Of the Box Software&quot;&gt;NOOBS&lt;/abbr&gt; para o diretório raiz do cartão &lt;abbr title=&quot;Secure Digital Card&quot;&gt;SD&lt;/abbr&gt;. Concluída a transferência, ejete o cartão com segurança, insira-o com cuidado no &lt;em&gt;slot&lt;/em&gt; da parte inferior do Raspberry Pi, e ele estará pronto para o primeiro &lt;em&gt;boot&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Cabeamento&lt;/h3&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/v5jRgIv&quot;&gt;&lt;img src=&quot;http://i.imgur.com/v5jRgIv.jpg&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;As ligações físicas são bem simples e podem ser vistas na foto acima. Há duas entradas &lt;abbr title=&quot;Universal Serial Bus&quot;&gt;USB&lt;/abbr&gt;, portanto uma pode ser usada para o mouse e outra para o teclado. No meu caso, possuo um teclado sem fio Logitech K260, que possui um único controlador &lt;abbr title=&quot;Universal Serial Bus&quot;&gt;USB&lt;/abbr&gt; para o teclado e mouse. Isso é muito bom, pois permite economizar uma porta &lt;abbr title=&quot;Universal Serial Bus&quot;&gt;USB&lt;/abbr&gt;.&lt;/p&gt;&lt;p&gt;O ideal para a conexão de vídeo é usar um cabo &lt;abbr title=&quot;High Definition Multimedia Interface&quot;&gt;HDMI&lt;/abbr&gt;, para usufruir de uma interface digital de altíssima resolução.&lt;/p&gt;&lt;p&gt;É muito importante usar uma fonte de alimentação de boa qualidade, que forneça uma tensão de saída de 5V&lt;sub&gt;cc&lt;/sub&gt;, com um conector micro-USB. A corrente vai depender muito da parafernália que você pretende “pendurar” nas saídas do Raspberry Pi. Um mínimo de 1200mA serão suficientes para a maioria das aplicações. A minha é de 2A e sempre aguentou o tranco, se bem que quando uso mais do que duas portas &lt;abbr title=&quot;Universal Serial Bus&quot;&gt;USB&lt;/abbr&gt;, utilizo um pequeno &lt;em&gt;Hub&lt;/em&gt; que pode ser visto na foto abaixo (visão traseira e frontal), o qual transforma uma única porta &lt;abbr title=&quot;Universal Serial Bus&quot;&gt;USB&lt;/abbr&gt; em outras sete na saída e acrescenta mais 1A na potência.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/eHlJXre&quot;&gt;&lt;img src=&quot;http://i.imgur.com/eHlJXre.jpg&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;O Raspberry Pi não tem um botão para ligar/desligar. Basta conectar a fonte de alimentação na entrada, tendo o cuidado de não usar força excessiva, para não danificar os contatos.&lt;/p&gt;&lt;p&gt;A tela de inicialização do &lt;abbr title=&quot;New Out Of the Box Software&quot;&gt;NOOBS&lt;/abbr&gt; exibida na imagem abaixo é bem parecida com a da versão distribuída na data em que escrevo este artigo (v1.3.10 de setembro de 2014), cuja maior diferença é que apenas o Raspbian é instalado por padrão e há uma opção para criar uma partição de 512MB separada para dados. As outras versões do Linux podem ser instaladas através de uma conexão de rêde, que é outra forma de instalação.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/iwH9KwU&quot;&gt;&lt;img src=&quot;http://i.imgur.com/iwH9KwU.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Na versão mostrada na imagem, há uma janela para selecionar a língua. Na atual, há também a opção de escolher o teclado. Só tem disponível português de Portugal e, eu particularmente, achei melhor deixar em inglês britânico mesmo, pois vamos configurar isso mais tarde. Quanto ao teclado, já pode ser selecionado o “br”, se bem que será preciso alterar a configuração depois, para o padrão &lt;abbr title=&quot;Associação Brasileira de Normas Técnicas&quot;&gt;ABNT&lt;/abbr&gt;2&lt;a&gt;&lt;a href=&quot;#note1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/a&gt;, ou qualquer outro que você porventura utilize. Veremos isso mais adiante.&lt;/p&gt;&lt;p&gt;A instalação vai demorar um pouco. São 2.241 MB a 1,1 MB/seg e deve levar cerca de meia hora para terminar. Aproveite para ir lendo as mensagens durante a instalação. Ficará sabendo, por exemplo, que para o “login” no Raspbian, o nome do usuário é “pi” e a senha é “raspberry” ― bem criativo, não é mesmo?!&lt;/p&gt;&lt;p&gt;Terminada a cópia dos arquivos, o &lt;abbr title=&quot;New Out Of the Box Software&quot;&gt;NOOBS&lt;/abbr&gt; entra no programa de configuração básica do Raspian, cuja tela é apresentada a seguir:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/IEsDg6v&quot;&gt;&lt;img src=&quot;http://i.imgur.com/IEsDg6v.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Vejamos as opções disponíveis:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;Opção 1:&lt;/strong&gt; &lt;em&gt;Expand Files System&lt;/em&gt; - a versão atual já faz isso automaticamente; pode pular;&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Opção 2:&lt;/strong&gt; &lt;em&gt;Change User Password&lt;/em&gt; - muda a senha do usuário default (pi);&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Opção 3:&lt;/strong&gt; &lt;em&gt;Enable Boot to Desktop/Scratch&lt;/em&gt; - Permite optar pela forma de &lt;em&gt;boot&lt;/em&gt;. O &lt;em&gt;Scratch&lt;/em&gt; é um aplicativo para ensinar programação para crianças e iniciantes básicos. Podemos pular esta opção e deixar como está, para um &lt;em&gt;boot&lt;/em&gt; em linha de comando.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Opção 4:&lt;/strong&gt; &lt;em&gt;Internationalisation Options&lt;/em&gt; - Aqui podemos ajustar nossa configuração para o português do Brasil. Eu uso “pt-BR.UTF-8”.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Opção 5:&lt;/strong&gt; &lt;em&gt;Enable Camera&lt;/em&gt; - para habilitar a câmera do Raspberry Pi. Ainda não possuo uma dessas. Vou colocar na lista…&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Opção 6:&lt;/strong&gt; &lt;em&gt;Add to Rastrack&lt;/em&gt; - adiciona este Pi ao Mapeamento do Raspberry Pi (&lt;em&gt;Rastrack&lt;/em&gt;). Faça isso, se não tem medo do “&lt;em&gt;Big Brother&lt;/em&gt;“.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Opção 7:&lt;/strong&gt; &lt;em&gt;Overclock&lt;/em&gt; - vamos deixar isso para uma outra ocasião, pois é preciso alguma experimentação a fim de evitar instabilidades.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Opção 8:&lt;/strong&gt; &lt;em&gt;Advanced Options&lt;/em&gt; - entre nesta opção, apenas para habilitar o &lt;abbr title=&quot;Secure Shell&quot;&gt;SSH&lt;/abbr&gt;, a fim de que possamos operar nosso Pi remotamente.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Podemos encerrar o programa de configurações, pois as outras iremos ajustar adiante nos arquivos de configuração do próprio sistema operacional Linux, de uma forma mais avançada, aproveitando para aprender mais um pouco.&lt;/p&gt;&lt;p&gt;Para navegar pelos “botões” do programa de configuração, use a tecla TAB. Selecione “&lt;em&gt;Finish&lt;/em&gt;“, para encerrar e o programa perguntará se você deseja reinicializar ou não. Como estamos configurando pela primeira vez, vamos reinicializar.&lt;/p&gt;&lt;p&gt;Aprecie o &lt;em&gt;boot&lt;/em&gt; do Raspberry Pi. A foto abaixo registra o momento histórico do meu!&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/LgTMsmi&quot;&gt;&lt;img src=&quot;http://i.imgur.com/LgTMsmi.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Antes de encerrar, vamos aproveitar para configurar o teclado para o padrão &lt;abbr title=&quot;Associação Brasileira de Normas Técnicas&quot;&gt;ABNT&lt;/abbr&gt;2. Digite o seguinte no &lt;em&gt;prompt&lt;/em&gt; de comando (é preciso usar &lt;strong&gt;sudo&lt;/strong&gt; para obter privilégios de &lt;strong&gt;root&lt;/strong&gt;); ao ser solicitada a senha, entre “raspberry” (se não a modificou durante a configuração inicial):&lt;/p&gt;&lt;p&gt;&lt;code&gt;sudo nano /etc/default/keyboard&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Deixe o arquivo de configuração do teclado (&lt;em&gt;keyboard&lt;/em&gt;), conforme abaixo:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/C8OygIK&quot;&gt;&lt;img src=&quot;http://i.imgur.com/C8OygIK.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Para salvar, tecle &lt;kbd&gt;Ctrl-O&lt;/kbd&gt; e ; para encerrar, tecle &lt;kbd&gt;Ctrl-X&lt;/kbd&gt;.&lt;/p&gt;&lt;p&gt;Para uma saída com estilo, limpa e serena, vamos desligar o Pi com o comando:&lt;/p&gt;&lt;p&gt;&lt;code&gt;sudo shutdown -h now&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Meu objetivo principal foi focalizar a configuração do Raspberry Pi e, não, ensinar o sistema operacional GNU/Linux. Creio que você não teve nenhum problema até aqui, pois os comandos que usamos foram bem básicos. Contudo, se encontrou alguma dificuldade por não estar habituado com este sistema operacional, sugiro que faça uma pesquisa “on-line” no Google velho de guerra, e certamente encontrará material abundante na Internet sobre o Linux para estudar.&lt;/p&gt;&lt;p&gt;No próximo artigo, vamos configurar o Raspberry Pi para uso remoto numa rêde doméstica sem fio e instalar o &lt;strong&gt;BlueJ&lt;/strong&gt; para começar a programar em Java nele.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;a name=&quot;note1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; A diferença entre o padrão &lt;abbr title=&quot;Associação Brasileira de Normas Técnicas&quot;&gt;ABNT&lt;/abbr&gt;1 e o &lt;abbr title=&quot;Associação Brasileira de Normas Técnicas&quot;&gt;ABNT&lt;/abbr&gt;2, é que este último possui uma tecla a mais, a &lt;kbd&gt;Alt Gr&lt;/kbd&gt; que permite o uso de caracteres especiais como ª, º, § e outros.&lt;/p&gt;
&lt;hr/&gt;
	    </description>
      </item>
      <item>
        <title>Java & Raspberry Pi - Parte 1</title>
        <link>http://ja-gaeta.github.io/2014/java-e-raspberry-pi-parte-1.html</link>
        <pubDate>Qui, 27 nov 2014 00:00:00 -0200</pubDate>
        <guid isPermaLink="false">2014/java-e-raspberry-pi-parte-1.html</guid>
        <description>
	        &lt;p&gt;&lt;a href=&quot;http://www.oraclejavamagazine-digital.com/javamagazine/november_december_2014#pg36&quot;&gt;&lt;em&gt;Baseado num artigo de MICHAEL KÖLLING, Oracle Java Magazine&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A revista Java Magazine da Oracle, na sua edição do último bimestre de 2014, dá início a uma série de artigos muito interessantes, abordando a nova plataforma &lt;a href=&quot;http://www.bluej.org/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;BlueJ&lt;/strong&gt;&lt;/a&gt;, que permite o desenvolvimento de programas com a Java &lt;abbr title=&quot;Standard Edition&quot;&gt;SE&lt;/abbr&gt; 8, diretamente no &lt;a href=&quot;http://www.raspberrypi.org/&quot; target=&quot;_blank&quot;&gt;Raspberry Pi&lt;/a&gt;.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://imgur.com/jSOf0J2&quot;&gt;&lt;img src=&quot;http://i.imgur.com/jSOf0J2.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Acredito que atualmente todos já ouviram falar do pequeno computador do tamanho de um cartão de crédito, que custa a bagatela de US$ 40, o equivalente ao câmbio de hoje (27/11/2014) a R$ 100,00. Mas isso para os afortunados americanos, pois aqui em terras tupiniquins o brinquedinho fica bem mais caro, por conta do famoso “custo-Brasil”. Para nós, o modelo B+ básico, com 512MB, fica em torno dos R$ 240,00, ou seja, mais do que o dobro… Como diria o Boris Casoy, “isso é uma vergonha”! Destinado à experimentação e aprendizado, o Raspberry Pi deveria ser isento de impostos e até mesmo distribuído de graça nas escolas públicas… mas isso é uma coisa que é melhor esperar sentado!&lt;/p&gt;&lt;p&gt;Ainda assim, em vista da tecnologia embutida no “bichinho” e o custo comparado ao dos demais computadores, vamos e venhamos que é uma pechincha.&lt;/p&gt;&lt;p&gt;Essa característica de baixo custo foi cuidadosamente observada no desenvolvimento do Raspberry Pi, concebido para ser usado na experimentação em projetos de eletrônica e no aprendizado de programação, e tem muita coisa fantástica por aí criada por marmanjos, embora o objetivo original do projeto Raspberry Pi fosse desenvolver um computador para inspirar as crianças no estudo da tecnologia.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;float: left; padding: 10px&quot;&gt;&lt;a href=&quot;http://imgur.com/7V9MncM&quot;&gt;&lt;img src=&quot;http://i.imgur.com/7V9MncM.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/span&gt;Meu filho me presenteou com o modelo B exibido na foto ao lado, logo no seu lançamento na Inglaterra, e já gastei muitas horas felizes brincando com ele e o Linux. Agora, o artigo da Java Magazine, meu Curso de Programação Java em andamento e meu Raspberry Pi precisando de novos desafios, criaram o clima perfeito para novas e excitantes experimentações.&lt;/p&gt;&lt;p&gt;No seu artigo, Kölling observa que, nos primeiros dias do Raspberry Pi, podia-se instalar e rodar o OpenJDK, mas ele não estava otimizado muito bem para a plataforma &lt;abbr title=&quot;Advanced RISC Machine&quot;&gt;ARM&lt;/abbr&gt; e isso prejudicava bastante sua performance. Afinal, o Raspberry tem recursos muito limitados, mesmo comparado a um PC comum dos mais básicos.&lt;/p&gt;&lt;p&gt;No outono de 2013, a Oracle liberou uma versão do &lt;abbr title=&quot;Java Development Kit&quot;&gt;JDK&lt;/abbr&gt; otimizada para a plataforma &lt;abbr title=&quot;Advanced RISC Machine&quot;&gt;ARM&lt;/abbr&gt; do Raspberry Pi. Ela roda muito bem (dentro das restrições da plataforma), e a &lt;em&gt;Raspberry Pi Foundation&lt;/em&gt; começou a incluir o &lt;abbr title=&quot;Java Development Kit&quot;&gt;JDK&lt;/abbr&gt; da Oracle no seu pacote de programas: as imagens &lt;strong&gt;&lt;span style=&quot;color: #808080;&quot;&gt;Raspbian&lt;/span&gt;&lt;/strong&gt; distribuídas para rodar como padrão no Raspberry Pi.&lt;/p&gt;&lt;p&gt;Tudo pronto então para o desenvolvimento em Java? Bem, nem tanto assim. Acontece que, na sua concepção original, o Raspberry Pi era uma solução barata para a experimentação por crianças. Assim, nenhum problema se elas apagassem, por descuido, todo o sistema operacional. Era só reinstalá-lo e começar a brincar de novo.&lt;/p&gt;&lt;p&gt;Essa grande tirada, porém, não funciona bem em Java. Seu desenvolvimento normalmente é feito em &lt;abbr title=&quot;Integrated Development Environment&quot;&gt;IDE&lt;/abbr&gt;s como Eclipse, NetBeans, IntelliJ IDEA, o outros programas do gênero. Nenhum deles funciona bem no Raspberry. São muito grandes e consomem muitos recursos, não tendo uma execução aceitável no pequeno dispositivo.&lt;/p&gt;&lt;p&gt;Por essa razão, até agora o desenvolvimento em Java para o Raspberry Pi era feito num &lt;em&gt;notebook&lt;/em&gt; normal e, uma vez completado, o executável era transferido para rodar no Raspberry Pi. Embora isso fosse aceitável para &lt;em&gt;hobistas&lt;/em&gt; e entusiastas, fugia da concepção original. Ao invés de ser capaz de usar o Raspberry Pi para substituir um computador normal, era preciso um outro computador, ou seja, mais e não menos &lt;em&gt;hardware&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;Para mudar tudo isso, foi liberado agora o BlueJ para o Raspberry Pi. Sua última versão, com o auspicioso número 3.14, foi otimizada para executar sem problemas diretamente no pequeno computador. Inclui também uma biblioteca-padrão, a &lt;span style=&quot;color: #808080;&quot;&gt;&lt;strong&gt;Pi4&lt;/strong&gt;&lt;/span&gt;, que permite acessar diretamente os componentes de &lt;em&gt;hardware&lt;/em&gt; do Raspberry Pi.&lt;/p&gt;&lt;p&gt;Portanto, com o BlueJ instalado, você já pode programar no Raspberry Pi usando a Java &lt;abbr title=&quot;Standard Edition&quot;&gt;SE&lt;/abbr&gt; 8 e todos os exemplos-padrão Java/BlueJ que antes eram disponíveis apenas para os &lt;em&gt;desktops &lt;/em&gt;normais. Seu Raspberry Pi pode finalmente substituir o &lt;em&gt;desktop&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;Mas você poderá fazer muito mais do que isso. Poderá criar objetos interativos que representem componentes de &lt;em&gt;hardware&lt;/em&gt; conectados ao Raspberry Pi, tais como botões e &lt;abbr title=&quot;Light Emitting Diode&quot;&gt;LED&lt;/abbr&gt;s, e ter uma experiência mais interativa e de maior configuração experimental para este tipo de desenvolvimento como jamais se conseguiu antes.&lt;/p&gt;&lt;p&gt;No próximo artigo desta série, vou esmiuçar os passos que devem ser seguidos para deixar seu Raspberry Pi pronto para a instalação do BlueJ.&lt;/p&gt;
	    </description>
      </item>
      <item>
        <title>Curso de Java - Aula 2</title>
        <link>http://ja-gaeta.github.io/2014/curso-de-java-aula-002.html</link>
        <pubDate>Sáb, 22 nov 2014 00:00:00 -0200</pubDate>
        <guid isPermaLink="false">2014/curso-de-java-aula-002.html</guid>
        <description>
	        &lt;p style=&quot;text-align: center;&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/o2pTdOdKC5Y&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2&gt;Introdução&lt;/h2&gt;&lt;p&gt;Na segunda aula do Curso de Java, começamos, como se costuma dizer, a colocar a mão na massa! Hora de codificar nosso primeiro programa em Java: o famoso &lt;em&gt;HelloWorld&lt;/em&gt;, versão tupiniquim.&lt;/p&gt;&lt;p&gt;Mostramos como é feita a compilação e execução de um programa Java através da linha de comando do Windows (ou terminal, no Mac e Linux), dissecamos os comentários em Java, analisamos os problemas de acentuação (não só em Java) e a codificação UTF-8 e, para encerrar, falamos sobre os erros que podem ocorrer durante a compilação e/ou execução de um programa.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h3&gt;Programa da aula:&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;&gt;&lt;a href=&quot;#header0&quot;&gt;Sintaxe básica da linguagem:&lt;/a&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;#header1&quot;&gt;&quot;&lt;em&gt;HelloWorld&lt;/em&gt;&quot;, ou &quot;OlaMundo&quot;, na versão &quot;tupiniquim&quot;.&lt;/a&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;#header2&quot;&gt;Comentários em Java.&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#header3&quot;&gt;(Quase) tudo em Java é uma classe.&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#header4&quot;&gt;Palavras-reservadas, modificadores e chaves.&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#header5&quot;&gt;O método main()&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#header6&quot;&gt;O método println()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#header7&quot;&gt;Edição do Código-Fonte.&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#header8&quot;&gt;Compilação.&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#header9&quot;&gt;Execução em &lt;em&gt;linha de comando&lt;/em&gt;.&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#header10&quot;&gt;Caracteres Unicode.&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#header11&quot;&gt;Erros de compilação.&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#header12&quot;&gt;Erros de execução.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;header0&quot;&gt;Sintaxe Básica&lt;/h2&gt;&lt;p&gt;Uma das razões do grande sucesso da linguagem de programação Java foi, sem sombra de dúvida, adotar uma sintaxe quase idêntica à das linguagens C/C++, que já contavam naquela época com uma ampla e sólida base de programadores, os quais puderam, assim, aprender as particularidades da nova linguagem com muita facilidade, atingindo rapidamente uma alta produtividade.&lt;/p&gt;&lt;p&gt;Os criadores da linguagem Java, contudo, não se preocuparam apenas em dar-lhe uma sintaxe de aparência familiar, mas também, desde o início, estabeleceram regras para a redação do código, de forma a torná-lo compreensível e de fácil manutenção. Tais convenções, de fato, induzem bons hábitos de programação e, por essa razão, Java tem sido cada vez mais adotada nas escolas, de todos os níveis, para o ensino de programação.&lt;/p&gt;
&lt;h3 id=&quot;header1&quot;&gt;Nosso primeiro programa: &quot;OlaMundo.java&quot;&lt;/h3&gt;&lt;p&gt;Já é uma tradição, para fazer uma rápida apresentação de qualquer linguagem, escrever um pequeno programa que contenha sua sintaxe básica, o qual, normalmente, consiste em exibir a mensagem &quot;Hello world!&quot; (Olá mundo!) no console ou terminal do computador.&lt;/p&gt;&lt;p&gt;Não vamos fugir à regra. Abaixo, está o código do programa &lt;code&gt;HelloWorld&lt;/code&gt;, adaptado para a nossa versão tupiniquim, com o nome &lt;code&gt;OlaMundo&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;brush: java, highlight: [1, 3, 5, 7, 9, 11], toolbar: false&quot;&gt;
/* OlaMundo em Java */

public class OlaMundo {

	public static void main(String[] args) {

		System.out.println(&quot;Olá mundão velho!&quot;); // exibe mensagem

	}

}
&lt;/pre&gt;&lt;p&gt;Vamos analisar os componentes desse pequeno programa e vocês já vão entender porque eu disse que as convenções da linguagem Java induzem boas práticas de programação.&lt;/p&gt;
&lt;h3 id=&quot;header2&quot;&gt;Comentários em Java&lt;/h3&gt;&lt;p&gt;Na linha 1 acima, encontramos um comentário, ou seja, um texto que serve apenas como referência para o programador entender a finalidade do programa ou explicar determinado trecho do código. Fazem parte do que denominamos &lt;span style=&quot;color: #ff6600;&quot;&gt;metadados&lt;/span&gt;, ou seja, informações inseridas no código a respeito dele próprio.&lt;/p&gt;&lt;p&gt;Esta sintaxe para comentários é exatamente idêntica à da linguagem C, também disponível em C++, começando sempre com o conjunto de caracteres &lt;code&gt;/*&lt;/code&gt; e terminando com o conjunto &lt;code&gt;*/&lt;/code&gt;. Tudo o que for escrito entre esses dois conjuntos será desconsiderado pelo compilador na geração do &lt;em&gt;bytecode&lt;/em&gt;. Esta fórmula permite a inserção de comentários de diversas linhas, de forma bastante prática. Alguns costumam &quot;emoldurar&quot; o texto do comentário, de forma a destacá-lo mais no corpo do código, como a seguir:&lt;/p&gt;
&lt;pre class=&quot;brush: java, toolbar: false&quot;&gt;
/*===================================================
* Programa: Loterias.java                           *
* Autor: Fulano de Tal                              *
* Data: 25/12/2014                                  *
====================================================*/
&lt;/pre&gt;&lt;p&gt;Esta é uma forma perfeitamente válida de comentário multilinhas em Java. Observe que ele inicia com o conjunto &lt;code&gt;/*&lt;/code&gt; e termina com o conjunto &lt;code&gt;*/&lt;/code&gt;, como determina a sintaxe da linguagem.&lt;/p&gt;&lt;p&gt;Outra forma de escrever comentários é precedendo-os do conjunto &lt;code&gt;//&lt;/code&gt;, o que também é muito usual em C++. Você encontra um exemplo deste tipo de comentário no final da linha 7 no nosso programinha &quot;OlaMundo&quot; acima.&lt;/p&gt;&lt;p&gt;A grande diferença deste tipo de comentário em relação ao primeiro que examinamos (&lt;code&gt;/* ... */&lt;/code&gt;), é que ele não permite múltiplas linhas de comentário como o anterior. Isso é óbvio, pois possui apenas um conjunto de caracteres inicial, mas é bastante prático para comentar linhas de código, bem como para excluir temporariamente determinada linha ou trecho de linha para algum teste que precisemos fazer.&lt;/p&gt;&lt;p&gt;Na linguagem Java existe um terceiro tipo de comentário, peculiar a ela, ou seja, não é encontrada em C/C++. Ele também permite comentar múltiplas linhas e sua sintaxe é quase igual à do comentário multilinhas normal. A diferença é que possui um asterisco (*) a mais no conjunto de abertura, isto é, começa com &lt;code&gt;/**&lt;/code&gt; e termina com &lt;code&gt;*/&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Sendo Java uma linguagem orientada a objetos, uma de suas características marcantes é a possibilidade de reutilização do código das classes criadas. Para isso, evidentemente, é preciso que o código esteja muito bem documentado, descrevendo todas as peculiaridades das classes, seus parâmetros, métodos, etc.&lt;/p&gt;&lt;p&gt;É exatamente aí que entra em cena a ferramenta&lt;span style=&quot;color: #808080;&quot;&gt;&lt;strong&gt; JavaDoc&lt;/strong&gt;&lt;/span&gt;, incluída na instalação do JDK, que facilita todo o trabalho de criação e manipulação dos comentários.&lt;/p&gt;&lt;p&gt;Nós vamos dedicar um aula especial para estudar JavaDoc, mas para que você já faça uma ideia do seu funcionamento, ele opera através da marcação de documentos, gerando arquivos nos formatos HTML, SGML, XML ou RTF. Veja, a seguir, um exemplo de comentário JavaDoc, destacando-se as &lt;em&gt;tags&lt;/em&gt; iniciadas com &lt;code&gt;@&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;brush: java; toolbar: false&quot;&gt;
/** Classe para objetos tipo Servidor, contendo seus valores e metodos
 *  @author J. A. Gaeta Mendes
 *  @version 2.35
 */
&lt;/pre&gt;
&lt;h3 id=&quot;header3&quot;&gt;(Quase) tudo em Java é uma classe&lt;/h3&gt;&lt;p&gt;Continuando com a análise do nosso programa de apresentação, encontramos na linha 3 o início do código propriamente dito, ou seja, aquele que será efetivamente compilado no &lt;em&gt;bytecode&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&quot;brush: java, first-line: 3, toolbar: false&quot;&gt;
public class OlaMundo {
&lt;/pre&gt;&lt;p&gt;Como já mencionamos diversas vezes, Java é uma linguagem quase totalmente orientada a objetos. De fato, tirando os tipos primitivos, tudo em Java é uma classe que, como veremos mais tarde, são as &quot;plantas&quot; ou &quot;esquemas&quot; para a criação de objetos. Assim, todo o programa em Java é composto ao menos por uma classe.&lt;/p&gt;&lt;p&gt;Demos à classe deste nosso primeiro programa o sugestivo nome &lt;code&gt;OlaMundo&lt;/code&gt;. Os nomes dados às classes, bem como às variáveis que veremos adiante, são tecnicamente denominados identificadores.&lt;/p&gt;&lt;p&gt;Observem com cuidado a forma como o identificador foi escrito: começa com letra maiúscula, sempre que for nome de classe. Como não são permitidos espaços entre palavras nos identificadores, quando eles são compostos de mais de uma palavra, como no nosso caso, usa-se uma forma chamada em inglês &quot;&lt;em&gt;CamelCase&lt;/em&gt;&quot;, que consiste em iniciar cada palavra com uma letra maiúscula, imitando as corcovas de um camelo, daí o nome. Estas convenções, como já disse, devem ser rigorosamente observadas, para facilitar a análise e manutenção do código. A medida em que seus programas forem ficando mais complexos e extensos, você vai entender a relevância disso.&lt;/p&gt;&lt;p&gt;Outra observação muito importante é que o nome do arquivo salvo no editor de textos deverá ser exatamente o mesmo daquele dado à classe, observando-se rigorosamente a caixa das letras, pois Java faz distinção entre maiúsculas e minúsculas, acrescentando-se a extensão &lt;code&gt;.java&lt;/code&gt; (no nosso caso, o nome do arquivo será &lt;code&gt;OlaMundo.java&lt;/code&gt;). Oficialmente, cada arquivo-fonte em Java é chamado &quot;Unidade de Compilação&quot;.&lt;/p&gt;
&lt;h3 id=&quot;header4&quot;&gt;Palavras-reservadas, modificadores e chaves&lt;/h3&gt;&lt;p&gt;Analisemos agora as duas palavrinhas que antecedem o identificador da classe. Uma delas, &lt;code&gt;class&lt;/code&gt;, é uma palavra reservada da linguagem, usada para declarar que uma nova classe está sendo definida. Existem 50 palavras reservadas na linguagem Java, conforme estudaremos adiante, sendo &lt;code&gt;class&lt;/code&gt; uma delas.&lt;/p&gt;&lt;p&gt;A outra é o modificador de acesso &lt;code&gt;public&lt;/code&gt;, mais uma palavra reservada, que permite ao programador controlar a visibilidade dos membros da classe. Quando um membro de uma classe é precedido da palavra &lt;code&gt;public&lt;/code&gt;, ele pode ser acessado por código externo à classe no qual ele é declarado. (O oposto de &lt;code&gt;public&lt;/code&gt; é &lt;code&gt;private&lt;/code&gt;, que impede que um membro seja usado por código externo à sua classe. Veremos isso com mais detalhes em aulas específicas).&lt;/p&gt;&lt;p&gt;Finalmente, observamos a abertura de uma chave (&lt;code&gt;{&lt;/code&gt;). Toda a definição da classe, inclusive de todos os seus membros, será entre a chave de abertura e fechamento (&lt;code&gt;{}&lt;/code&gt;). Por ora, não se preocupe muito com os detalhes da classe. Apenas observe que em Java, toda a atividade do programa ocorre dentro de uma delas.&lt;/p&gt;
&lt;h3 id=&quot;header5&quot;&gt;O método &lt;code&gt;main()&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;Passemos para a linha seguinte do programa:&lt;/p&gt;
&lt;pre class=&quot;brush: java, first-line: 5, toolbar: false&quot;&gt;
public static void main(String[] args) {
&lt;/pre&gt;&lt;p&gt;Esta linha inicia o método &lt;code&gt;main()&lt;/code&gt; e é nela que o programa começará a ser executado. Observe a chave de abertura para este novo bloco, que terá sua correspondente de fechamento na linha 9. Cada parte entre as chaves é denominado um bloco de código.&lt;/p&gt;&lt;p&gt;Todo aplicativo Java começa sua execução invocando o método &lt;code&gt;main()&lt;/code&gt;. O significado completo de cada uma de suas partes não pode ser explicado já, uma vez que exige um entendimento detalhado da forma como Java implementa o encapsulamento.&lt;/p&gt;&lt;p&gt;Todavia, como vamos usá-lo bastante desde o início do nosso curso, não custa dar uma rápida examinada em cada um dos seus componentes.&lt;/p&gt;&lt;p&gt;A primeira palavra, o modificador de acesso &lt;code&gt;public&lt;/code&gt;, já examinamos acima e, de fato, o método precisa ser assim definido, uma vez que será acessado por código externo quando o programa for executado.&lt;/p&gt;&lt;p&gt;A palavra reservada &lt;code&gt;static&lt;/code&gt; permite que &lt;code&gt;main()&lt;/code&gt; seja chamado sem necessidade de ser &lt;em&gt;instanciado&lt;/em&gt;. Instanciar, significa criar um objeto com base no &quot;esquema&quot; representado pela classe. Isso é necessário uma vez que &lt;code&gt;main()&lt;/code&gt; é invocado pela JVM (&lt;em&gt;Java Virtual Machine&lt;/em&gt;) antes que os objetos sejam criados.&lt;/p&gt;&lt;p&gt;A palavra reservada &lt;code&gt;void&lt;/code&gt; apenas informa o compilador que &lt;code&gt;main()&lt;/code&gt; não vai retornar nenhum valor. Como veremos mais tarde, os métodos também podem retornar valores.&lt;/p&gt;&lt;p&gt;Se tudo isso lhe pareceu meio confuso, não se preocupe porque, como já disse, iremos abordar tudo com detalhes em aulas posteriores.&lt;/p&gt;&lt;p&gt;Para passar informações a serem processadas pelo método, usam-se variáveis especificadas dentro dos parênteses que seguem o identificador que, no caso de métodos, devem sempre começar com letra minúscula, bem como os das variáveis.&lt;/p&gt;&lt;p&gt;Essas variáveis são denominadas &lt;span style=&quot;color: #ff6600;&quot;&gt;parâmetros&lt;/span&gt;. Mesmo que não sejam necessários parâmetros para o método, ainda assim deve ser incluído um conjunto de parênteses vazio. Embora o método &lt;code&gt;main()&lt;/code&gt; possua apenas um parâmetro, ele é bem complicadinho... Vamos destrinchá-lo!&lt;/p&gt;&lt;p&gt;&lt;code&gt;String[] args&lt;/code&gt; declara um parâmetro denominado &lt;code&gt;args&lt;/code&gt;, que é um &lt;em&gt;&lt;span style=&quot;color: #ff6600;&quot;&gt;array&lt;/span&gt;&lt;/em&gt; de instâncias da classe &lt;span style=&quot;color: #ff6600;&quot;&gt;&lt;em&gt;String&lt;/em&gt;&lt;/span&gt;. Iremos estudar os &lt;em&gt;arrays&lt;/em&gt; em aula específica, mas adianto que são coleções de objetos similares. Objetos do tipo &lt;em&gt;String&lt;/em&gt; armazenam cadeias de caracteres. Neste caso, &lt;code&gt;args&lt;/code&gt; recebe todos os argumentos passados na linha de comando quando o programa é executado.&lt;/p&gt;&lt;p&gt;Mais uma coisinha: o método &lt;code&gt;main()&lt;/code&gt; é apenas um ponto de entrada no seu programa. Um programa complexo terá dezenas ou até centenas de classes, mas apenas uma delas possuirá o método &lt;code&gt;main()&lt;/code&gt; para início do programa. Em algumas situações, aliás, o método &lt;code&gt;main()&lt;/code&gt; é até mesmo dispensável. No caso dos &lt;span style=&quot;color: #ff6600;&quot;&gt;&lt;em&gt;applets&lt;/em&gt;&lt;/span&gt;, por exemplo — programas Java embutidos em navegadores Web — não será preciso usar &lt;code&gt;main()&lt;/code&gt;, uma vez que os navegadores Web usam outros métodos para iniciar a execução dos &lt;em&gt;applets&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&quot;header6&quot;&gt;O método &lt;code&gt;println()&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;Analisemos, para terminar, a última linha de código:&lt;/p&gt;
&lt;pre class=&quot;brush: java, first-line: 7, toolbar: false&quot;&gt;
System.out.println(&quot;Olá mundão velho!&quot;); // exibe mensagem
&lt;/pre&gt;&lt;p&gt;Esta linha exibe a &lt;em&gt;String&lt;/em&gt; &quot;Olá mundão velho!&quot;, inserindo uma nova linha ao final, no console ou terminal de vídeo para onde está direcionada a saída-padrão. A saída é implementada pelo método &lt;code&gt;println()&lt;/code&gt;. Neste caso, &lt;code&gt;println()&lt;/code&gt; exige a &lt;em&gt;String&lt;/em&gt; que lhe é passada como parâmetro. A linha começa com &lt;code&gt;System.out&lt;/code&gt;. Embora seja meio complicado explicar isso neste ponto do curso, &lt;code&gt;System&lt;/code&gt; é uma classe pré-definida que dá acesso ao sistema operacional, e &lt;code&gt;out&lt;/code&gt; é a &lt;em&gt;stream&lt;/em&gt; de saída conectada ao console.&lt;/p&gt;&lt;p&gt;Os métodos de entrada e saída via console, evidentemente, não são muito aplicados no mundo real da programação Java, uma vez que os ambientes operacionais modernos possuem uma interface gráfica. Todavia, tendo em vista sua simplicidade de uso, são ótimos para demonstrações e iremos usá-los bastante na parte inicial do curso, até apresentarmos outras formas de entrada/saída de dados usando Java.&lt;/p&gt;&lt;p&gt;Observe que a declaração do método &lt;code&gt;println()&lt;/code&gt; termina com um ponto-e-vírgula (&lt;code&gt;;&lt;/code&gt;). Todas as declarações em Java terminam com um ponto-e-vírgula e o motivo pelo qual as outras linhas não terminam dessa forma é porque não são, tecnicamente, declarações.&lt;/p&gt;&lt;p&gt;A primeira &lt;code&gt;}&lt;/code&gt; (linha 9) no programa encerra o bloco de código de &lt;code&gt;main()&lt;/code&gt;, e a útima &lt;code&gt;}&lt;/code&gt; (linha 11) encerra a definição da classe &lt;code&gt;OlaMundo&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;header7&quot;&gt;Edição do código-fonte&lt;/h2&gt;&lt;p&gt;Para implementar nosso primeiro programa na linguagem Java, a primeira coisa a fazer é criar o arquivo do código-fonte examinado na &lt;a href=&quot;#header1&quot;&gt;seção anterior&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Para isso, você poderá usar qualquer editor de textos que salve arquivos de texto puros, ou seja, sem nenhuma formatação especial. Dois bons editores, ambos com versões gratuítas, são o &lt;a href=&quot;http://notepad-plus-plus.org/download/v6.7.4.html&quot; target=&quot;_blank&quot;&gt;Notepad++&lt;/a&gt; e o &lt;a class=&quot;ext&quot; href=&quot;http://www.sublimetext.com/&quot; target=&quot;_blank&quot;&gt;SublimeText&lt;/a&gt;. Mas poderá ser usado qualquer editor mais simples, como o Bloco de Notas do Windows, o Leafpad no Linux ou o TextEdit no Mac OS X.&lt;/p&gt;&lt;p&gt;Para esta demonstração, vamos usar o SublimeText. Copie o código-fonte do programa &quot;&lt;strong&gt;OlaMundo&lt;/strong&gt;&quot;, tomando cuidado para reproduzir tudo fielmente, pois qualquer pequeno equívoco irá gerar um erro na compilação. Cuidado, em especial, com a caixa das letras, pois o compilador faz distinção entre maiúsculas e minúsculas. Observe, também, o ponto-e-virgula que encerra a declaração e os pares de chaves, parênteses e colchetes.&lt;/p&gt;&lt;p&gt;Salve o arquivo com o nome &lt;code&gt;OlaMundo.java&lt;/code&gt;. Como já mencionamos, é essencial que o nome dado ao arquivo do código-fonte seja exatamente o mesmo que foi dado à classe, para que não ocorra um erro durante a compilação. Na figura abaixo, vemos a caixa de diálogo do Windows para salvar o arquivo a partir do editor Sublime:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;http://i.imgur.com/DSq635k.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;O editor SublimeText, como outros, reconhece o tipo de arquivo como código-fonte Java a partir da extensão (&lt;strong&gt;.java&lt;/strong&gt;) e faz o realce das palavras-chave de acordo com a sintaxe da linguagem (&lt;em&gt;syntax highlighting&lt;/em&gt;), facilitando muito a visualização do código. Todos os IDE, como o Eclipse que iremos usar neste curso, também possuem esta funcionalidade nos seus editores. Observe como o texto do código ficou todo colorido na próxima figura:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img alt=&quot;sublime_win&quot; src=&quot;http://i.imgur.com/Lrb3z1g.png&quot; width=&quot;800&quot; height=&quot;518&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Aproveite para conferir, no painel da esquerda, que o nome do arquivo, &lt;strong&gt;&quot;OlaMundo.java&quot;&lt;/strong&gt; corresponde exatamente o nome da classe (&lt;strong&gt;OlaMundo&lt;/strong&gt;).&lt;/p&gt;
&lt;h2 id=&quot;header8&quot;&gt;Compilação&lt;/h2&gt;&lt;p&gt;Compilar o código-fonte significa usar um programa, chamado compilador, o qual irá ler as definições da classe, escritos na linguagem de programação Java e compilá-las em um arquivo &lt;em&gt;bytecode&lt;/em&gt; da classe, que também terá o mesmo nome dela, variando apenas a extensão, que será &quot;&lt;strong&gt;.class&lt;/strong&gt;&quot;, ao invés de &quot;&lt;strong&gt;.java&lt;/strong&gt;&quot;.&lt;/p&gt;&lt;p&gt;O compilador Java faz parte do JDK e é chamado &lt;strong&gt;javac&lt;/strong&gt;. A forma geral para invocá-lo a partir da linha de comando, é a seguinte:&lt;/p&gt;&lt;p&gt;&lt;code&gt;javac [opções] [arquivos-fonte] [classes] [@argfiles]&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Os argumentos podem ser colocados em qualquer ordem e representam:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;opções&lt;/strong&gt;: as opções de linha-de-comando.&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;arquivos-fonte&lt;/strong&gt;: um ou mais arquivos-fonte a serem compilados (como &lt;strong&gt;OlaMundo.java&lt;/strong&gt;).&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;classes&lt;/strong&gt;: uma ou mais classes a serem processadas para anotações (como &lt;strong&gt;OlaMundo.class&lt;/strong&gt;).&lt;/li&gt;&lt;br/&gt; &lt;li&gt;&lt;strong&gt;@argfiles&lt;/strong&gt;: um ou mais arquivos que listam opções e arquivos-fonte.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;/p&gt;&lt;p&gt;Como você pode ver, o programa possui muitas funcionalidades, inclusive para geração de documentação. Para consultar um resumo de todas as opções disponíveis, use o comando: &lt;strong&gt;javac -help&lt;/strong&gt;. Será exibida a relação completa das opções, conforme a figura abaixo:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img alt=&quot;javac_help&quot; src=&quot;http://i.imgur.com/RSc7YL7.png&quot; width=&quot;709&quot; height=&quot;508&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Na &lt;a class=&quot;ext&quot; href=&quot;http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javac.html&quot; target=&quot;_blank&quot;&gt;documentação da Oracle&lt;/a&gt; encontram-se todos os pormenores para usar o programa &lt;strong&gt;javac&lt;/strong&gt; em toda a sua potencialidade.&lt;/p&gt;&lt;p&gt;Na verdade, todo o desenvolvimento em Java pode ser feito apenas com um editor de textos e os programas de linha de comando &lt;strong&gt;javac&lt;/strong&gt;, para compilação do aplicativo e &lt;strong&gt;java&lt;/strong&gt;, para sua execução. Evidentemente, os IDEs facilitam muito a vida do programador, mas é muito importante saber como as coisas acontecem nos bastidores.&lt;/p&gt;&lt;p&gt;Para compilar nosso pequeno programa &quot;&lt;strong&gt;OlaMundo&lt;/strong&gt;&quot;, acesse o diretório onde o programa foi salvo. Desta forma, não precisamos nos preocupar com o caminho (&lt;strong&gt;path&lt;/strong&gt;) onde está o arquivo, embora haja opções para sua localização a partir de qualquer lugar. Fazemos isso para simplificar o comando. Digite: &lt;code&gt;javac OlaMundo.java&lt;/code&gt; e seu programa será compilado, gerando o arquivo &lt;code&gt;OlaMundo.class&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Uma dica para quem usa o Windows: para abrir uma janela do &lt;em&gt;prompt&lt;/em&gt; de comando em determinada pasta, clique com o botão direito do mouse, enquanto aperta simultaneamente a tecla &lt;kbd&gt;Shift&lt;/kbd&gt;, sobre a área da caixa de diálogo do Windows Explorer correspondente à pasta onde deseja abrir o &lt;em&gt;prompt&lt;/em&gt; de comando e selecione a opção &lt;code&gt;Abrir janela de comando aqui&lt;/code&gt;. Consulte a figura a seguir:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img alt=&quot;win_open_cmd&quot; src=&quot;http://i.imgur.com/QvnkhLk.png&quot; width=&quot;800&quot; height=&quot;450&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Observe que é preciso passar o nome seguido da respectiva extensão (&lt;strong&gt;.java&lt;/strong&gt;) para o programa &lt;strong&gt;javac&lt;/strong&gt;. Digite o comando: &lt;code&gt;javac OlaMundo.java&lt;/code&gt;. Depois de uma brevíssima pausa, reaparece o &lt;em&gt;prompt&lt;/em&gt; de comando. Isso significa que seu programa compilou sem nenhum erro, pois, caso contrário, estes seriam exibidos. Confira que foi gerado o arquivo &lt;code&gt;OlaMundo.class&lt;/code&gt; na pasta onde o código-fonte foi compilado. Veja o resultado na figura abaixo:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img alt=&quot;olamundo_class&quot; src=&quot;http://i.imgur.com/8EUn7Gk.png&quot; width=&quot;800&quot; height=&quot;577&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Se quiser ver o compilador em ação, use a opção &lt;code&gt;-verbose&lt;/code&gt;. O comando seria, então: &lt;code&gt;javac -verbose OlaMundo.java&lt;/code&gt;. Veja como o compilador acessa a biblioteca-padrão &lt;code&gt;java.lang&lt;/code&gt;, e quanta coisa é incorporada ao seu código. Essa é a grande sacada da programação orientada a objetos: eles podem ser usados mesmo sem conhecer os detalhes de sua implementação. É como dirigir um carro, sem precisar saber como funciona seu motor, ou conhecer a composição química do combustível usado.&lt;/p&gt;
&lt;h2 id=&quot;header9&quot;&gt;Execução&lt;/h2&gt;&lt;p&gt;O programa &lt;strong&gt;java&lt;/strong&gt; executa o aplicativo Java e sua forma na linha-de-comando é a seguinte:&lt;/p&gt;&lt;p&gt;&lt;code&gt;java [opções] classe [argumentos]&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Existem muitas outras funcionalidades e outro programa parecido: o &lt;strong&gt;javaw&lt;/strong&gt;, cujos detalhes podem ser consultados na &lt;a class=&quot;ext&quot; href=&quot;http://docs.oracle.com/javase/7/docs/technotes/tools/windows/java.html&quot; target=&quot;_blank&quot;&gt;documentação da Oracle&lt;/a&gt;. Para examinar as opções de linha-de-comando disponíveis, use o comando: &lt;code&gt;java -help&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Para executar nosso &lt;em&gt;bytecode&lt;/em&gt; compilado em &lt;code&gt;OlaMundo.class&lt;/code&gt;, digite o comando: &lt;code&gt;java OlaMundo&lt;/code&gt;. Observe que não deve ser digitada a extensão do arquivo (&lt;strong&gt;.class&lt;/strong&gt;). Veja o resultado no &lt;em&gt;prompt&lt;/em&gt; de comando do Windows na figura a seguir:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img alt=&quot;olamundo_exec&quot; src=&quot;http://i.imgur.com/zoWpiA0.png&quot; width=&quot;697&quot; height=&quot;428&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;O resultado no &lt;em&gt;prompt&lt;/em&gt; de comando do Windows é meio estranho, pois ele não decodifica corretamente os caracteres acentuados e a &lt;em&gt;string&lt;/em&gt; exibida é:&lt;/p&gt;&lt;p&gt;&lt;code&gt;OlÃ¡ mundÃ£o velho!&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Isso não acontece nos sistemas operacionais Linux e Mac OS X, nos quais a &lt;em&gt;string&lt;/em&gt; é apresentada corretamente acentuada, como na figura seguinte, do terminal do linux:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img alt=&quot;olamundo_linux&quot; src=&quot;http://i.imgur.com/gt0osM7.png&quot; width=&quot;733&quot; height=&quot;487&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;header10&quot;&gt;Caracteres Unicode&lt;/h2&gt;&lt;p&gt;O motivo disso é que o &lt;em&gt;prompt&lt;/em&gt; de comando do Windows em português (&lt;code&gt;cmd.exe&lt;/code&gt;), usa a página de código 850 (&lt;em&gt;Multilingual - Latin I&lt;/em&gt;), enquanto Java usa a codificação UTF-16 para objetos &lt;strong&gt;String&lt;/strong&gt;. Use o comando &lt;a class=&quot;ext&quot; href=&quot;http://ss64.com/nt/chcp.html&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;chcp&lt;/strong&gt; &lt;/a&gt; para conferir. Uma solução seria trocar a página de código para &lt;a class=&quot;ext&quot; href=&quot;http://en.wikipedia.org/wiki/UTF-8&quot; target=&quot;_blank&quot;&gt;UTF-8&lt;/a&gt;, usando o comando: &lt;code&gt;chcp 65001&lt;/code&gt;. Mas há uma solução melhor: use os caracteres de escape &lt;code&gt;/u&lt;/code&gt; para inserir o código Unicode do caracter acentuado. O código-fonte do nosso programa ficaria então como abaixo:&lt;/p&gt;
&lt;pre class=&quot;brush: java, toolbar: false&quot;&gt;
/* OlaMundoUnicode em Java */

public class OlaMundoUnicode {

	public static void main(String[] args) {

		System.out.println(&quot;Ol\u00e1 mund\u00e3o velho!&quot;);

	}

}
&lt;/pre&gt;&lt;p&gt;Compile o novo programa (&lt;code&gt;javac OlaMundoUnicode.java&lt;/code&gt;) e execute-o (&lt;code&gt;java OlaMundoUnicode&lt;/code&gt;). O problema está resolvido, conforme pode ser visto na figura a seguir:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img alt=&quot;OlaMundoUnicode&quot; src=&quot;http://i.imgur.com/XWENH80.png&quot; width=&quot;600&quot; height=&quot;421&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Forneço a seguir uma tabela com os códigos Unicode dos caracteres latinos acentuados:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;width:70%,  border: 1px solid black;&quot; align=&quot;center&quot;&gt;
    &lt;tr style=&quot;background-color: #CBDABB; border: 1px solid black;&quot;&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;á = \u00e1&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;ê = \u00ea&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Î = \u00ce&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;ú = \u00fa&quot;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr style=&quot;background-color: #DEE8D4; border: 1px solid black;&quot;&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;à = \u00e0&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;è = \u00e8&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Ï = \u00cf&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;ù = \u00f9&quot;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr style=&quot;background-color: #CBDABB; border: 1px solid black;&quot;&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;â = \u00e2&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;É = \u00c9&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;ó = \u00f3&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;û = \u00fb&quot;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr style=&quot;background-color: #DEE8D4; border: 1px solid black;&quot;&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;ã = \u00e3&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;È = \u00c8&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;ò = \u00f2&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;ü = \u00fc&quot;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr style=&quot;background-color: #CBDABB; border: 1px solid black;&quot;&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;ä = \u00e4&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Ê = \u00ca&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;ô = \u00f4&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Ú = \u00da&quot;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr style=&quot;background-color: #DEE8D4; border: 1px solid black;&quot;&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Á = \u00c1&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Ë = \u00cb&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;õ = \u00f5&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Ù = \u00d9&quot;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr style=&quot;background-color: #CBDABB; border: 1px solid black;&quot;&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;À = \u00c0&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;í = \u00ed&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;ö = \u00f6&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Û = \u00db&quot;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr style=&quot;background-color: #DEE8D4; border: 1px solid black;&quot;&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Â = \u00c2&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;ì = \u00ec&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Ó = \u00d3&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;ç = \u00e7&quot;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr style=&quot;background-color: #CBDABB; border: 1px solid black;&quot;&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Ã = \u00c3&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;î = \u00ee&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Ò = \u00d2&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Ç = \u00c7&quot;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr style=&quot;background-color: #DEE8D4; border: 1px solid black;&quot;&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Ä = \u00c4&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;ï = \u00ef&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Ô = \u00d4&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;ñ = \u00f1&quot;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr style=&quot;background-color: #CBDABB; border: 1px solid black;&quot;&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;é = \u00e9&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Í = \u00cd&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Õ = \u00d5&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Ñ = \u00d1&quot;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr style=&quot;background-color: #DEE8D4; border: 1px solid black;&quot;&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Ö = \u00d6&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&quot;Ì = \u00cc&quot;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&lt;/td&gt;
        &lt;td style=&quot;border: 1px solid black;&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;Para o desenvolvimento de programas complexos será realmente imprescindível o uso de um IDE como o Eclipse ou NetBeans, mas esses programas usam essas mesmas ferramentas básicas do JDK, de forma que é importante conhecer a fundo seu funcionamento, para otimização do próprio IDE e sua adequação às necessidades do seu projeto.&lt;/p&gt;
&lt;h2 id=&quot;header11&quot;&gt;Erros de compilação&lt;/h2&gt;&lt;p&gt;Uma das grandes vantagens de uma linguagem de programação fortemente tipada como Java, é a possibilidade de identificar erros de sintaxe durante a compilação do código.&lt;/p&gt;&lt;p&gt;Veja o que acontece quando tentamos compilar o código abaixo:&lt;/p&gt;
&lt;pre class=&quot;brush: java, highlight: [3], title: &apos;OlaMundoUnicode.java com erro de sintaxe&apos;, toolbar: false&quot;&gt;
public class OlaMundoUnicode {

	public static void main(string[] args) {
		System.out.println(&quot;Ol\u00e1 mund\u00e3o velho!&quot;);

	}

}
&lt;/pre&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img alt=&quot;ErroCompilacao&quot; src=&quot;http://i.imgur.com/o1rZBAn.png&quot; width=&quot;600&quot; height=&quot;421&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Como podemos observar, ocorreu um erro durante a compilação do programa, e não foi gerado o arquivo &lt;strong&gt;.class&lt;/strong&gt; com o &lt;em&gt;bytecode&lt;/em&gt; correspondente.&lt;/p&gt;&lt;p&gt;Neste caso, o compilador informa com precisão o local da ocorrência do erro: a palavra &quot;String&quot; na linha 3 foi escrita com um &quot;s&quot; minúsculo e, como já enfatizamos, Java faz distinção entre a caixa das letras. Basta efetuar a correção para um &quot;S&quot; maiúsculo, que o programa compilará sem nenhum problema.&lt;/p&gt;&lt;p&gt;Existem outros erros de sintaxe apontados pelo compilador, que não são rastreados de forma tão direta, mas podemos contar com utilitários especializados, chamados &quot;&lt;em&gt;debuggers&lt;/em&gt;&quot;, que estudaremos mais adiante, os quais facilitam nossa vida na identificação desses erros.&lt;/p&gt;
&lt;h2 id=&quot;header12&quot;&gt;Erros de execução&lt;/h2&gt;&lt;p&gt;Um outro tipo de erro pode ocorrer depois do programa ser compilado normalmente, e só é identificado durante sua execução. Observe o código e a figura abaixo:&lt;/p&gt;
&lt;pre class=&quot;brush: java, highlight: [3], title:&apos;OlaMundoUnicode.java com erro durante a execução&apos;, toolbar: false&quot;&gt;
public class OlaMundoUnicode {

	public static int main(String[] args) {
		System.out.println(&quot;Ol\u00e1 mund\u00e3o velho!&quot;);

	}

}
&lt;/pre&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img alt=&quot;ErroExecucao&quot; src=&quot;http://i.imgur.com/4vG8wH3.png&quot; width=&quot;600&quot; height=&quot;421&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;&lt;p&gt;Aqui nós desrespeitamos a sintaxe do método &lt;code&gt;main()&lt;/code&gt; e estamos tentando retornar um valor inteiro enquanto, conforme já comentamos, este método não deve retornar valor algum.&lt;/p&gt;&lt;p&gt;Novamente somos informados do erro e, também neste caso, o motivo do erro é explicitamente declarado: erro na sintaxe do método &lt;code&gt;main()&lt;/code&gt;, cujo retorno deve ser modificado para &lt;code&gt;void&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Existem outros tipos de erros ainda mais difíceis de localizar, como os erros na lógica do programa, mas isso vamos deixar para ver mais adiante, quando estudarmos os &lt;em&gt;debuggers&lt;/em&gt; usados pelos IDE e outros programas específicos para esse tipo de depuração.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img alt=&quot;java-logo&quot; src=&quot;http://i.imgur.com/b2JsnbI.jpg&quot; width=&quot;256&quot; height=&quot;256&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/p&gt;
	    </description>
      </item>
      <item>
        <title>Curso de Java - Aula 1</title>
        <link>http://ja-gaeta.github.io/2014/curso-de-java-aula-001.html</link>
        <pubDate>Sex, 21 nov 2014 00:00:00 -0200</pubDate>
        <guid isPermaLink="false">2014/curso-de-java-aula-001.html</guid>
        <description>
	        &lt;p style=&quot;text-align: center;&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/-6p1ZjDVxCE&quot; width=&quot;560&quot; height=&quot;315&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2&gt;Introdução —&lt;/h2&gt;&lt;p&gt;Esta é a primeira aula publicada no &lt;em&gt;YouTube&lt;/em&gt; do meu Curso de Java: uma despretenciosa introdução à programação usando essa linguagem madura, robusta e amplamente difundida pelas suas excepcionais características. O objetivo principal é desenvolver essas aulas de uma maneira bem humorada, mas sem descuidar do provimento de uma formação sólida e extensa da variada tecnologia Java.&lt;/p&gt;&lt;p&gt;Aqui no Ponto G++, além do &lt;em&gt;link&lt;/em&gt; para a vídeo-aula, você encontrará extenso material de apoio para cada lição e &lt;em&gt;links&lt;/em&gt; para matéria correlata aos assuntos tratados, possibilitando-lhe aprofundar-se ainda mais nos estudos. Há também um &lt;em&gt;link&lt;/em&gt; para acessar todo o código-fonte apresentado nas aulas, disponível no GitHub.&lt;/p&gt;&lt;p&gt;Tudo o que aprendi foi por esforço próprio, de forma auto-didática, ao longo de muitos anos de dedicação ao estudo. Agora que estou aposentado, disponho do tempo e dos recursos para compartilhar tudo que aprendi, de uma forma muito altruísta.&lt;/p&gt;&lt;p&gt;Desejo-lhe boa sorte nos estudos. Esteja certo de que o seu sucesso será minha maior recompensa.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h3&gt;Programa da aula:&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;Introdução ao Curso:
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;#header1&quot;&gt;Por que Java?&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Java Development Kit (JDK) e Java Runtime Environment (JRE):
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;#header2&quot;&gt;O que são.&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#header3&quot;&gt;Instalação.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
	&lt;li&gt;Eclipse IDE (Integrated Development Environment):
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;#header4&quot;&gt;O que é.&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#header5&quot;&gt;Instalação.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;header1&quot;&gt;Por que Java?&lt;/h2&gt;&lt;p&gt;Se quiser conhecer a história e o desenvolvimento da linguagem Java desde sua criação até os dias atuais, consulte &lt;a href=&quot;/2014/java-como-tudo-comecou.html&quot;&gt;este artigo&lt;/a&gt;, publicado aqui mesmo no Ponto G++. Mas, antes de mais nada, acho que a melhor maneira para se ter uma ideia geral da linguagem de programação Java, é analisar as diretrizes que nortearam o seu projeto, conforme está definido no clássico &lt;a href=&quot;http://www.oracle.com/technetwork/java/intro-141325.html&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;The Java Language Environment&lt;/em&gt;&lt;/a&gt;, nas palavras do seu principal criador, James Gosling. Nesta tradução, você vai observar que deixei os termos técnicos de uso corriqueiro na sua forma original, em inglês. Adotarei essa metodologia de forma consistente, ao longo destas aulas.&lt;br/&gt;&lt;blockquote&gt;&quot;Os requisitos do projeto da linguagem de programação Java foram estabelecidos com base na natureza dos ambientes de computação nos quais os programas são executados.&lt;/p&gt;&lt;p&gt;O enorme crescimento da Internet e da &lt;em&gt;World-Wide Web&lt;/em&gt; nos levou a uma forma inteiramente nova de enxergar o desenvolvimento e distribuição de programas. Para conviver no mundo do comércio eletrônico e da distribuição, a tecnologia Java precisava ser capaz de desenvolver aplicativos seguros, de alta performance, e extremamente robustos, sobre múltiplas plataformas em redes distribuídas.&lt;/p&gt;&lt;p&gt;A operação sobre múltiplas plataformas em redes heterogêneas invalida os esquemas tradicionais de distribuição binária, &lt;em&gt;release&lt;/em&gt;, &lt;em&gt;upgrade&lt;/em&gt;, &lt;em&gt;patch&lt;/em&gt;, etc. Para sobreviver nessa selva, a linguagem de programação Java precisava ser neutra à arquitetura, transportável, e dinamicamente adaptável.&lt;/p&gt;&lt;p&gt;O sistema que emergiu para ir de encontro a essas necessidades é simples, de forma que pode ser programado com facilidade pela maioria dos desenvolvedores; familiar, para que os desenvolvedores atuais possam aprender a linguagem de programação Java sem sacrifício; orientada a objeto, para tirar proveito das metodologias modernas para desenvolvimento de programas e se ajustar com os aplicativos distribuídos num ambiente cliente-servidor; &lt;em&gt;multithreaded&lt;/em&gt;, para alta performance nos aplicativos que precisem executar atividades de múltipla concorrência, tais como multimídia; e interpretada, para maximizar sua capacidade dinâmica e de portabilidade.&quot;&lt;/blockquote&gt;&lt;/p&gt;&lt;p&gt;Nestes poucos parágrafos estão condensados os conceitos fundamentais da linguagem de programação Java, responsáveis pelo seu tremendo sucesso nas décadas seguintes à sua criação. Estes conceitos podem ser assim resumidos:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Simples;&lt;/li&gt;
	&lt;li&gt;Orientada a Objeto;&lt;/li&gt;
	&lt;li&gt;Computação Distribuída;&lt;/li&gt;
	&lt;li&gt;Execução encadeada (&lt;em&gt;multithreading&lt;/em&gt;);&lt;/li&gt;
	&lt;li&gt;Dinâmica;&lt;/li&gt;
	&lt;li&gt;Indiferente à arquitetura do &lt;em&gt;hardware&lt;/em&gt;;&lt;/li&gt;
	&lt;li&gt;Transportável;&lt;/li&gt;
	&lt;li&gt;Alta performance;&lt;/li&gt;
	&lt;li&gt;Robusta;&lt;/li&gt;
	&lt;li&gt;Segura.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Vamos examiná-los com um pouco mais de profundidade.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Simples&lt;/strong&gt; – Simplicidade aqui não significa trivialidade, mas a característica de Java incorporar uma sintaxe moderna, parecida com a de outras linguagens largamente usadas, principalmente C e C++. Isso a torna familiar para os desenvolvedores, que podem atingir um elevado nível de produtividade num lapso de tempo muito curto.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Orientada a Objeto&lt;/strong&gt; – Este é o último estágio de desenvolvimento das linguagens de programação, implementado para possibilitar o projeto de programas grandes e complexos, no qual é normal trabalharem grandes equipes simultaneamente. Neste sistema, o programa é desenvolvido em torno dos “objetos” que manipula, ao invés das ações que executa, diferentemente da técnica procedural anterior. Como veremos mais adiante, os conceitos-chave da Orientação a Objetos (OO) são o &lt;a href=&quot;http://www.devmedia.com.br/encapsulamento-polimorfismo-heranca-em-java/12991&quot; target=&quot;_blank&quot;&gt;encapsulamento&lt;/a&gt;, que permite esconder e proteger dados e métodos de forma a facilitar o desenvolvimento compartilhado do programa, e a &lt;a href=&quot;http://www.devmedia.com.br/encapsulamento-polimorfismo-heranca-em-java/12991&quot; target=&quot;_blank&quot;&gt;herança&lt;/a&gt;, que possibilita o reaproveitamento do código.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Computação Distribuída&lt;/strong&gt; – Na sua forma mais genérica, a computação distribuída pode ser entendida como qualquer processamento que envolva múltiplos computadores, remotos em relação uns aos outros, em que cada um tem um papel na computação de um problema ou processamento de informação.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Execução Encadeada (&lt;em&gt;Multithreading&lt;/em&gt;)&lt;/strong&gt; – Java é a primeira linguagem de programação a incluir explicitamente o conceito de &lt;em&gt;Threads&lt;/em&gt; na própria linguagem. Há uma excelente definição de &lt;em&gt;multithreading&lt;/em&gt; na Wikipédia:&lt;/p&gt;
&lt;blockquote&gt;&quot;Linha ou Encadeamento de execução (em inglês: &lt;em&gt;Thread&lt;/em&gt;), é uma forma de um processo dividir a si mesmo em duas ou mais tarefas que podem ser executadas concorrencialmente. O suporte à &lt;em&gt;thread&lt;/em&gt; é fornecido pelo próprio sistema operacional, no caso da linha de execução ao nível do núcleo (em inglês: &lt;em&gt;Kernel-Level Thread&lt;/em&gt; (KLT)), ou implementada através da biblioteca de uma determinada linguagem, no caso de uma &lt;em&gt;User-Level Thread&lt;/em&gt; (ULT).&quot;&lt;/blockquote&gt;&lt;p&gt;Se você já escreveu algum programa em Java então já fez um programa &lt;em&gt;multithreaded&lt;/em&gt;. Todo programa em Java possui pelo menos uma &lt;em&gt;thread&lt;/em&gt;: a &lt;em&gt;thread&lt;/em&gt; &lt;code&gt;main&lt;/code&gt;. Além dessa, a máquina virtual mantém algumas outras que realizam tarefas como coleta de lixo ou finalização de objetos. Algumas classes disponíveis na API de Java também utilizam &lt;em&gt;threads&lt;/em&gt; em suas implementações. Como exemplo, podemos citar as classes de Java Swing ou as classes da implementação de RMI (&lt;em&gt;Remote Method Invocation&lt;/em&gt;). Em Java é possível lançar várias linhas de execução do mesmo programa. Chamamos a isso de &lt;em&gt;Threads&lt;/em&gt; ou &lt;em&gt;Multithreading&lt;/em&gt;. A diferença com os processos e programas acima é que Java é interpretada. Quem cuida dos vários &lt;em&gt;Threads&lt;/em&gt; de um programa é o próprio interpretador Java. Algumas vantagens em relação aos processos:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;O chaveamento entre as &lt;em&gt;threads&lt;/em&gt; é mais rápido que o chaveamento entre processos;&lt;/li&gt;
	&lt;li&gt;A troca de mensagens entre as &lt;em&gt;threads&lt;/em&gt; também é mais eficiente.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Dinâmica&lt;/strong&gt; – Não confundir esta característica ora apresentada com a &lt;em&gt;tipagem&lt;/em&gt; da linguagem, que em Java é &lt;em&gt;estática&lt;/em&gt;. O termo &quot;dinâmica&quot;, é aqui empregado com relação à &lt;em&gt;linkagem&lt;/em&gt; do código-executável. Em linguagens como C e C++, todo o código tem que ser compilado para que possa ser executado na forma de um programa. Em Java, as classes são compiladas a medida em que são necessárias. Se uma classe não é necessária durante a fase de execução, ela sequer será compilada num &lt;em&gt;bytecode&lt;/em&gt;. Essa característica vem a calhar, especialmente na programação em redes, onde não sabemos de antemão qual código será executado. Um programa em execução pode carregar classes do sistema de arquivos ou de um servidor remoto. Isso também torna teoricamente possível que um programa Java altere seu próprio código durante a execução, como se de certa forma implementasse inteligência artificial. Seria mais realístico imaginar, contudo, que um programa Java gera o código antes da execução e, então, o executa. Com algum mecanismo de &lt;em&gt;feedback&lt;/em&gt;, o código gerado pode ir melhorando com o tempo.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Indiferente à arquitetura do hardware&lt;/strong&gt; – A grande pretensão da linguagem de programação Java sempre foi, sem dúvida, a neutralidade à arquitetura de &lt;em&gt;hardware&lt;/em&gt; – daí o famoso &lt;em&gt;slogan&lt;/em&gt; da Sun: “&lt;em&gt;write once, run anywhere&lt;/em&gt;” (“escreva uma vez, execute em qualquer lugar”). Para conseguir isso, a técnica foi usar uma máquina virtual interpretada como camada intermediária entre o aplicativo e o sistema operacional, produzindo programas que rodavam mais lentamente do que seus equivalentes compilados integralmente, na forma tradicional, usando um compilador C++, por exemplo. Isso trouxe para Java a má reputação de produzir programas lentos. Mas desde há muito tempo que a Máquina Virtual Java produz programas que rodam muito mais rápido. O compilador &lt;em&gt;just-in-time&lt;/em&gt; (JIT), compila o &lt;em&gt;bytecode&lt;/em&gt; Java em código nativo quando o programa é executado, e mantém o código compilado para usar sempre que necessário. Máquinas Virtuais mais sofisticadas usam até mesmo a &lt;em&gt;dynamic recompilation&lt;/em&gt;, na qual a Máquina Virtual pode, após analisar o comportamento do programa em execução, recompilá-lo seletivamente e otimizar suas partes críticas. Essas duas técnicas permitem que o programa tire proveito da velocidade do código nativo, sem sacrificar sua portabilidade.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Transportável&lt;/strong&gt; – A portabilidade é tecnicamente uma meta difícil de atingir, e o sucesso de Java em conseguir isso é, de certa forma, matéria de controvérsia. Embora seja possível, de fato, escrever programas que se comportem de forma consistente através de muitas plataformas hospedeiras, uma grande variedade delas contendo pequenos erros ou inconsistências, levou alguns a parodiarem jocosamente o &lt;em&gt;slogan&lt;/em&gt; mencionado acima com a versão: “&lt;em&gt;write once, debug everywhere&lt;/em&gt;” – acho que nem precisa de tradução. :)&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Alta Performance&lt;/strong&gt; – No seu &lt;em&gt;paper&lt;/em&gt;, Gosling afirma que a performance sempre esteve em mira durante o desenvolvimento de Java. Segundo ele:&lt;/p&gt;
&lt;blockquote&gt;&quot;(...) a plataforma Java alcança uma performance superior adotando um esquema no qual o interpretador pode rodar a plena velocidade sem precisar verificar o ambiente de execução. O &lt;em&gt;garbage collector&lt;/em&gt; automático é executado numa &lt;em&gt;thread&lt;/em&gt; de baixa prioridade em &lt;em&gt;background&lt;/em&gt;, assegurando uma alta probabilidade de que a memória esteja disponível quando solicitada, o que leva a melhorar a performance. Aplicativos que requeiram grande uso de CPU podem ser projetados de tal forma que as seções de computação intensiva possam ser reescritas em código nativo da máquina como requerido e interfaceadas com a plataforma Java. Em geral, os usuários percebem que os aplicativos interativos respondem rapidamente a despeito de serem interpretados.&quot;&lt;/blockquote&gt;&lt;p&gt;Na prática, todavia, há diferenças. Encontramos na &lt;a href=&quot;http://en.wikipedia.org/wiki/Java_performance&quot; target=&quot;_blank&quot;&gt;Wikipedia&lt;/a&gt; um interessante comparativo entre a performance de Java e a de outras linguagens também muito utilizadas atualmente, o qual transcrevo a seguir.&lt;/p&gt;
&lt;blockquote&gt;&quot;A comparação objetiva da performance de um programa Java com um equivalente escrito em outra linguagem, como C++, requer que um &lt;em&gt;benchmark&lt;/em&gt; seja inteiramente construído com muito cuidado para comparar programas expressando algorítimos escritos de uma maneira tão idêntica quanto seja tecnicamente possível. A plataforma-alvo do &lt;em&gt;bytecode&lt;/em&gt; Java é a plataforma Java, e o &lt;em&gt;bytecode&lt;/em&gt; pode ser interpretado ou compilado em código nativo de máquina pela JVM. Outros compiladores têm como alvo, quase sempre, uma plataforma de &lt;em&gt;hardware&lt;/em&gt; ou &lt;em&gt;software&lt;/em&gt; específica, produzindo um código de máquina que ficará virtualmente imutável durante sua execução. Cenários muito diferentes e difíceis de comparar emergem dessas duas abordagens distintas: compilações estáticas contra compilações dinâmicas e recompilações, além da disponibilidade de informação precisa sobre o ambiente de execução, entre outras variáveis. Java é compilada, quase sempre, &lt;em&gt;just-in-time&lt;/em&gt; (JIT) em tempo de execução pela JVM, mas também pode ser compilada &lt;em&gt;ahead-of-time&lt;/em&gt; (AOT), tal como C++. Quando é compilada &lt;em&gt;just-in-time&lt;/em&gt;, sua performance, em pequenos &lt;em&gt;benchmarks&lt;/em&gt; é geralmente:
&lt;ul&gt;
	&lt;li&gt;mais lenta do que linguagens compiladas similares como C ou C++,&lt;/li&gt;
	&lt;li&gt;idêntica a outras linguagens compiladas &lt;em&gt;just-in-time&lt;/em&gt;, como C#,&lt;/li&gt;
	&lt;li&gt;muito mais rápida do que linguagens sem compilador de código nativo (JIT ou AOT), tais como Perl, Ruby, PHP e Python.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;Robusta&lt;/strong&gt; – James Gosling afirma que “a linguagem de programação Java foi projetada para criar programas altamente confiáveis, efetua uma extensiva verificação em tempo de compilação, seguida por um segundo nível de verificação durante a execução e suas características induzem bons hábitos de programação.” Ademais, analisando o desenvolvimento consistente da tecnologia Java ao longo dessas quase duas décadas passadas desde sua criação, podemos confirmar sua evolução constante, incorporando sempre o que há de mais moderno na tecnologia das linguagens de programação.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Segura&lt;/strong&gt; – De acordo com a &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/tech/index-jsp-136007.html&quot; target=&quot;_blank&quot;&gt;Oracle&lt;/a&gt;, “a tecnologia de segurança de Java inclui um vasto conjunto de APIs, ferramentas e implementações dos mais usados algorítimos de segurança, mecanismos e protocolos. As APIs de segurança de Java se espalham por uma larga área, incluindo criptografia, infraestrutura para chaves públicas, comunicação segura, autenticação e controle de acesso. A tecnologia Java fornece ao desenvolvedor um abrangente &lt;em&gt;framework&lt;/em&gt; de segurança para elaborar aplicativos, bem como dá ao usuário e ao administrador um conjunto de ferramentas para gerenciar seguramente os aplicativos.” A &lt;a href=&quot;http://en.wikipedia.org/wiki/Java_security&quot; target=&quot;_blank&quot;&gt;Wikipedia&lt;/a&gt;, contudo, faz críticas à vulnerabilidade do gerenciador de segurança da plataforma Java aos &lt;em&gt;malwares&lt;/em&gt;, especialmente em &lt;em&gt;plugins&lt;/em&gt; para navegadores Web que executem &lt;em&gt;applets &lt;/em&gt;baixados de &lt;em&gt;sites&lt;/em&gt; públicos, informalmente conhecidos como “&lt;em&gt;Java in the browser&lt;/em&gt;”. O esforço da Oracle para eliminar essas vulnerabilidades, aliás, teria sido responsável pelo atraso no lançamento de Java 8.&lt;/p&gt;
&lt;h2 id=&quot;header2&quot;&gt;Diferenciação entre JVM, JRE e JDK&lt;/h2&gt;&lt;p&gt;No &quot;fantástico mundo de Java&quot; é comum nos depararmos com um cipoal de siglas, a maioria delas começando com a letra &quot;J&quot;. Logo de cara, ao iniciarmos nosso estudo dessa linguagem de programação, somos apresentados às três mais importantes dessas siglas: JVM, JRE e JDK.&lt;/p&gt;&lt;p&gt;A representação gráfica na figura a seguir dá uma ideia geral da sua integração:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img style=&quot;border: 1px solid #021a40;&quot; alt=&quot;jvm_jre_jdk&quot; src=&quot;http://pontogpp.com.br/wp-content/uploads/2015/02/jvm_jre_jdk.png&quot; width=&quot;586&quot; height=&quot;494&quot;&gt;&lt;/p&gt;
&lt;h3&gt;JVM&lt;/h3&gt;&lt;p&gt;A sigla JVM significa &quot;&lt;em&gt;Java Virtual Machine&lt;/em&gt;&quot;, ou seja, a &lt;em&gt;Máquina Virtual Java&lt;/em&gt;, que, como o próprio nome já indica, é uma &quot;máquina&quot; abstrata, cuja finalidade é prover o ambiente no qual o &lt;em&gt;bytecode&lt;/em&gt; possa ser executado. Podemos conceber a JVM como o motor fundamental do ambiente de execução dos programas Java, cumprindo as seguintes tarefas:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Carregar o código do programa.&lt;/li&gt;
	&lt;li&gt;Verificar a consistência do código.&lt;/li&gt;
	&lt;li&gt;Executar o código.&lt;/li&gt;
	&lt;li&gt;Implementar o ambiente em tempo de execução.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;JRE&lt;/h3&gt;&lt;p&gt;JRE, por sua vez, é abreviatura de &quot;&lt;em&gt;Java Runtime Environment&lt;/em&gt;&quot;, que podemos traduzir como &lt;em&gt;Ambiente de Execução Java&lt;/em&gt;. Sendo fisicamente a implementação da JVM, é ele que contém o conjunto de bibliotecas e demais arquivos que serão usados pela JVM durante a execução do programa Java.&lt;/p&gt;
&lt;h3&gt;JDK&lt;/h3&gt;&lt;p&gt;O JDK é a sigla de &quot;&lt;em&gt;Java Development Kit&lt;/em&gt;&quot;, ou seja, o &lt;em&gt;kit para desenvolvimento de programas Java&lt;/em&gt;. Como podemos observar na figura acima, contém, além do JRE/JVM, ferramentas para desenvolvimento, incluindo, entre outras, um compilador. Atualmente, ele é apresentado em três versões:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;Java ME&lt;/strong&gt; — &lt;em&gt;Java Mobile Edition&lt;/em&gt;: Kit de desenvolvimento para aplicações de dispositivos portáteis, tais como celulares, por exemplo.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Java SE&lt;/strong&gt; — &lt;em&gt;Java Standard Edition&lt;/em&gt;: Utilizado para desenvolvimento &lt;em&gt;Desktop&lt;/em&gt; e Cliente/Servidor.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Java EE&lt;/strong&gt; — &lt;em&gt;Java Enterprise Edition&lt;/em&gt;: Desenvolvimento de aplicativos de uso corporativo. Esclarecendo um pouco melhor: as aplicações Web atuais possuem regras de negócio bem complicadas. Além dessas regras, conhecidas como requisitos funcionais, existem outros requisitos a serem atingidos através da infraestrutura do aplicativo, tais como persistência em banco de dados, transação, acesso remoto, &lt;em&gt;web services&lt;/em&gt;, gerenciamento de &lt;em&gt;threads&lt;/em&gt;, gerenciamento de conexões HTTP, cache de objetos, gerenciamento da sessão Web, balanceamento de carga e outros mais, chamados requisitos não-funcionais. É exatamente para dar suporte à implementação desses requisitos que foi desenvolvida a Java EE, que consiste de uma série de especificações bem detalhadas, dando uma receita de como deve ser implementado um &lt;em&gt;software&lt;/em&gt; que execute cada um desses serviços de infraestrutura.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;header3&quot;&gt;Qual versão do JDK instalar?&lt;/h2&gt;&lt;p&gt;Para estudar a linguagem de programação Java, portanto, a primeira coisa que precisaremos providenciar é a instalação do JDK no nosso computador.&lt;/p&gt;&lt;p&gt;Para um aprendizado básico da linguagem, vamos utilizar a versão SE de Java 8, disponibilizada pela &lt;a href=&quot;http://www.oracle.com/index.html&quot; target=&quot;_blank&quot;&gt;Oracle&lt;/a&gt;, que você encontra &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html?ssSourceSiteId=otnpt&quot; target=&quot;_blank&quot;&gt;neste repositório&lt;/a&gt;. Abaixo, estão os links de tutoriais com um passo-a-passo para sua instalação nos principais sistemas operacionais em uso atualmente.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;/2014/instalacao-do-jdk-no-linux.html&quot;&gt;Instalação no Linux&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;/2014/instalacao-do-jdk-no-mac-os-x.html&quot;&gt;Instalação no Mac OS X&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;/2014/instalacao-do-jdk-no-windows.html&quot;&gt;Instalação no Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;header4&quot;&gt;O que é um IDE?&lt;/h2&gt;&lt;p&gt;Segundo a &lt;a href=&quot;http://pt.wikipedia.org/wiki/Ambiente_de_desenvolvimento_integrado&quot; target=&quot;_blank&quot;&gt;Wikipédia&lt;/a&gt; um &quot;IDE, do inglês &lt;em&gt;Integrated Development Environment&lt;/em&gt; ou Ambiente Integrado de Desenvolvimento, é um programa de computador que reúne características e ferramentas de apoio ao desenvolvimento de software com o objetivo de agilizar este processo.&quot;&lt;/p&gt;&lt;p&gt;Geralmente os IDE facilitam a técnica de RAD (de &lt;em&gt;Rapid Application Development&lt;/em&gt;, ou &quot;Desenvolvimento Rápido de Aplicativos&quot;), que visa a maior produtividade dos desenvolvedores.&lt;/p&gt;
&lt;h3&gt;O IDE Eclipse&lt;/h3&gt;&lt;p&gt;Este fantástico IDE é hoje o mais utilizado no mundo todo para desenvolvimento em Java, embora suporte também outras linguagens tais como C/C++, PHP e Python, entre outras, mediante a instalação de &lt;em&gt;plugins&lt;/em&gt; (módulos de extensão). Hoje em dia, também é muito usada para desenvolvimento de programas para a plataforma Android.&lt;/p&gt;&lt;p&gt;Tendo em vista a sua enorme utilização pela indústria de software, além da sua inquestionável flexibilidade e seus recursos avançados para desenvolvimento, será este o IDE que iremos utilizar na maior parte do Curso de Java do Ponto G++. Não poderia, contudo, deixar de mencionar dois outros IDEs excelentes para desenvolvimento Java: o NetBeans, distribuído pela própria Oracle, e o IntelliJIDEA, este último a única versão comercial (paga) dos três, embora exista uma versão &lt;em&gt;open-source&lt;/em&gt; muito boa, mantida pela comunidade.&lt;/p&gt;
&lt;h2 id=&quot;header5&quot;&gt;Instalação&lt;/h2&gt;&lt;p&gt;Como o IDE Eclipse é desenvolvido em Java, sua instalação, em qualquer plataforma, é a coisa mais simples que existe. Basta baixar o programa do seu &lt;a href=&quot;https://eclipse.org/downloads/&quot; target=&quot;_blank&quot;&gt;site oficial&lt;/a&gt;, conforme a sua plataforma (Windows/Linux/Mac OS X), descompactar o arquivo e iniciar o executável. Crie um atalho para a pasta descompactada a fim de facilitar a utilização do programa e mãos à obra...&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img alt=&quot;eclipse_download&quot; src=&quot;http://pontogpp.com.br/wp-content/uploads/2014/11/eclipse_download.png&quot; width=&quot;800&quot; height=&quot;474&quot;&gt;&lt;/p&gt;&lt;p&gt;Não vou abordar aqui detalhes da utilização do IDE Eclipse, pois isso foge ao escopo deste curso. Considerando, contudo, a amplitude da sua utilização, qualquer dúvida poderá ser virtualmente esclarecida na Internet ou na própria documentação oficial. Sugiro que você dedique parte do seu tempo ao estudo do programa, para alcançar o máximo de produtividade.&lt;/p&gt;&lt;p&gt;Irá constatar que este IDE possui realmente recursos extraordinários para facilitar sua vida de desenvolvedor Java, explicando o porquê do seu tremendo sucesso.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img alt=&quot;java-logo&quot; src=&quot;http://pontogpp.com.br/wp-content/uploads/2014/11/java-logo.jpg&quot; width=&quot;256&quot; height=&quot;256&quot;&gt;&lt;/p&gt;
	    </description>
      </item>
  </channel> 
</rss>
